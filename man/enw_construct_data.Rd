% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocess.R
\name{enw_construct_data}
\alias{enw_construct_data}
\title{Construct preprocessed data}
\usage{
enw_construct_data(
  obs,
  new_confirm,
  latest,
  missing_reference,
  reporting_triangle,
  metareport,
  metareference,
  metadelay,
  max_delay,
  timestep,
  by
)
}
\arguments{
\item{obs}{Observations with the addition of empirical reporting proportions
and and restricted to the specified maximum delay.}

\item{new_confirm}{Incidence of notifications by reference and report date.
Empirical reporting distributions are also added.}

\item{latest}{The latest available observations.}

\item{missing_reference}{A \code{data.frame} of reported observations that are
missing the reference date.}

\item{reporting_triangle}{Incident observations by report and reference
date in the standard reporting triangle matrix format.}

\item{metareport}{Metadata for report dates.}

\item{metareference}{Metadata reference dates derived from observations.}

\item{metadelay}{Metadata for reporting delays produced using
\code{\link[=enw_metadata_delay]{enw_metadata_delay()}}.}

\item{max_delay}{The maximum delay to model in the delay
distribution, specified in units of the timestep (e.g., if
\code{timestep = "week"}, then \code{max_delay = 3} means 3 weeks). If not
specified the maximum observed delay is assumed to be the true maximum
delay in the model. Otherwise, an integer greater than or equal to 1
can be specified. Observations with delays larger than the maximum
delay will be dropped. If the specified maximum delay is too short,
nowcasts can be biased as important parts of the true delay
distribution are cut off. At the same time, computational cost scales
non-linearly with this setting, so you want the maximum delay to be
as long as necessary, but not much longer.

Steps to take to determine the maximum delay:
\itemize{
\item Consider what is realistic and relevant for your application.
\item Check the proportion of observations reported (\code{prop_reported})
by delay in the \code{new_confirm} output of \code{enw_preprocess_obs}.
\item Use \code{\link[=check_max_delay]{check_max_delay()}} to check the coverage of a candidate
\code{max_delay}.
\item If in doubt, check if increasing the maximum delay noticeably
changes the delay distribution or nowcasts as estimated by
\code{epinowcast}. If it does, your maximum delay may still be too short.
}

Note that delays are zero indexed and so include the reference date
and \code{max_delay - 1} other intervals (i.e. a \code{max_delay} of 1
corresponds to no delay).}

\item{timestep}{The timestep to used in the process model (i.e. the
reference date model). This can be a string ("day", "week", "month") or a
numeric whole number representing the number of days. If your data does not
have this timestep then you may wish to make use of
\code{\link[=enw_aggregate_cumulative]{enw_aggregate_cumulative()}} to aggregate your data to the desired timestep.}

\item{by}{A character vector describing the stratification of
observations. This defaults to no grouping. This should be used
when modelling multiple time series in order to identify them for
downstream modelling}
}
\value{
A data.table containing processed observations as a series of nested
data.frames as well as variables containing metadata. These are:
\itemize{
\item \code{obs}: (observations with the addition of empirical reporting proportions
and restricted to the specified maximum delay).
\item \code{new_confirm}: Incidence of notifications by reference and report date.
Empirical reporting distributions are also added.
\item \code{latest}: The latest available observations.
\item \code{missing_reference}: Observations missing reference dates.
\item \code{reporting_triangle}: Incident observations by report and reference date in
the standard reporting triangle matrix format.
\item \code{metareference}: Metadata reference dates derived from observations.
\item \code{metrareport}: Metadata for report dates.
\item \code{metadelay}: Metadata for reporting delays produced using
\code{\link[=enw_metadata_delay]{enw_metadata_delay()}}.
\item \code{max_delay}: Maximum delay to be modelled by epinowcast.
\item \code{time}: Numeric, number of timepoints in the data.
\item \code{snapshots}: Numeric, number of available data snapshots to use for
nowcasting.
\item \code{groups}: Numeric, Number of groups/strata in the supplied observations
(set using \code{by}).
\item \code{max_date}: The maximum available report date.
}
}
\description{
This function is used internally by \code{\link[=enw_preprocess_data]{enw_preprocess_data()}} to combine
various pieces of processed observed data into a single object. It
is exposed to the user in order to allow for modular data preprocessing
though this is not currently recommended. See documentation and code
of \code{\link[=enw_preprocess_data]{enw_preprocess_data()}} for more on the expected inputs.
}
\examples{
pobs <- enw_example("preprocessed")
enw_construct_data(
  obs = pobs$obs[[1]],
  new_confirm = pobs$new_confirm[[1]],
  latest = pobs$latest[[1]],
  missing_reference = pobs$missing_reference[[1]],
  reporting_triangle = pobs$reporting_triangle[[1]],
  metareport = pobs$metareport[[1]],
  metareference = pobs$metareference[[1]],
  metadelay = pobs$metadelay[[1]],
  max_delay = pobs$max_delay,
  timestep = pobs$timestep[[1]],
  by = c()
)
}
\seealso{
Preprocessing functions
\code{\link{enw_add_delay}()},
\code{\link{enw_add_max_reported}()},
\code{\link{enw_add_metaobs_features}()},
\code{\link{enw_assign_group}()},
\code{\link{enw_complete_dates}()},
\code{\link{enw_extend_date}()},
\code{\link{enw_filter_delay}()},
\code{\link{enw_filter_reference_dates}()},
\code{\link{enw_filter_report_dates}()},
\code{\link{enw_flag_observed_observations}()},
\code{\link{enw_impute_na_observations}()},
\code{\link{enw_latest_data}()},
\code{\link{enw_metadata}()},
\code{\link{enw_metadata_delay}()},
\code{\link{enw_missing_reference}()},
\code{\link{enw_preprocess_data}()},
\code{\link{enw_reporting_triangle}()},
\code{\link{enw_reporting_triangle_to_long}()}
}
\concept{preprocess}

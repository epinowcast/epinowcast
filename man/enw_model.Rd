% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-tools.R
\name{enw_model}
\alias{enw_model}
\title{Load and compile the nowcasting model}
\usage{
enw_model(
  model = system.file("stan", "epinowcast.stan", package = "epinowcast"),
  include = system.file("stan", package = "epinowcast"),
  compile = TRUE,
  threads = TRUE,
  profile = FALSE,
  target_dir = tempdir(),
  stanc_options = list(),
  cpp_options = list(),
  verbose = TRUE,
  ...
)
}
\arguments{
\item{model}{A character string indicating the path to the model.
If not supplied the package default model is used.}

\item{include}{A character string specifying the path to any stan
files to include in the model. If missing the package default is used.}

\item{compile}{Logical, defaults to \code{TRUE}. Should the model
be loaded and compiled using \code{\link[cmdstanr:cmdstan_model]{cmdstanr::cmdstan_model()}}.}

\item{threads}{Logical, defaults to \code{TRUE}. Should the model compile with
support for multi-thread support in chain. Note that setting this will
produce a warning that \code{threads_to_chain} is set and ignored. Changing this
to \code{FALSE} is not expected to yield any performance benefits even when
not using multithreading and thus not recommended.}

\item{profile}{Logical, defaults to \code{FALSE}. Should the model be profiled?
For more on profiling see the \href{https://mc-stan.org/cmdstanr/articles/profiling.html}{\code{cmdstanr} documentation}. # nolint}

\item{target_dir}{The path to a directory in which the manipulated .stan
files without profiling statements should be stored. To avoid overriding of
the original .stan files, this should be different from the directory of the
original model and the \code{include_paths}.}

\item{stanc_options}{A list of options to pass to the \code{stanc_options} of
\code{\link[cmdstanr:cmdstan_model]{cmdstanr::cmdstan_model()}}. By default nothing is passed but potentially
users may wish to pass optimisation flags for example. See the documentation
for \code{\link[cmdstanr:cmdstan_model]{cmdstanr::cmdstan_model()}} for further details.}

\item{cpp_options}{A list of options to pass to the \code{cpp_options} of
\code{\link[cmdstanr:cmdstan_model]{cmdstanr::cmdstan_model()}}. By default nothing is passed but potentially
users may wish to pass optimisation flags for example. See the documentation
for \code{\link[cmdstanr:cmdstan_model]{cmdstanr::cmdstan_model()}} for further details. Note that the \code{threads}
argument replaces \code{stan_threads}.}

\item{verbose}{Logical, defaults to \code{TRUE}. Should verbose
messages be shown.}

\item{...}{Additional arguments passed to \code{\link[cmdstanr:cmdstan_model]{cmdstanr::cmdstan_model()}}.}
}
\value{
A \code{cmdstanr} model.
}
\description{
Load and compile the nowcasting model
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
mod <- enw_model()
\dontshow{\}) # examplesIf}
}
\seealso{
Functions used to help convert models into the format required for stan
\code{\link{enw_formula_as_data_list}()},
\code{\link{enw_priors_as_data_list}()},
\code{\link{enw_replace_priors}()},
\code{\link{enw_sample}()},
\code{\link{enw_stan_to_r}()},
\code{\link{remove_profiling}()},
\code{\link{write_stan_files_no_profile}()}
}
\concept{modeltools}

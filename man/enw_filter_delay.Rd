% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocess.R
\name{enw_filter_delay}
\alias{enw_filter_delay}
\title{Filter observations to restrict the maximum reporting delay}
\usage{
enw_filter_delay(obs, max_delay, timestep = "day")

enw_filter_delay(obs, max_delay, timestep = "day")
}
\arguments{
\item{obs}{A \code{data.frame} containing at least the following variables:
\verb{reference date} (index date of interest), \code{report_date} (report date for
observations), and \code{confirm} (cumulative observations by reference and report
date).}

\item{max_delay}{The maximum number of days to model in the delay
distribution. Must be an integer greater than or equal to 1. Observations
with delays larger then the maximum delay will be dropped. If the specified
maximum delay is too short, nowcasts can be biased as important parts of the
true delay distribution are cut off. At the same time, computational cost
scales non-linearly with this setting, so you want the maximum delay to be as
long as necessary, but not much longer. Consider what delays are realistic
for your application, and when in doubt, check if increasing the maximum
delay noticeably changes the delay distribution or nowcasts as estimated by
epinowcast. If it does, your maximum delay may still be too short.
Note that delays are zero indexed and so include the reference date and
\code{max_delay - 1} other days (i.e. a \code{max_delay} of 1 corresponds to
no delay). You can use \code{\link[=check_max_delay]{check_max_delay()}} to check the coverage of a delay
distribution for different maximum delays.}

\item{timestep}{The timestep to used in the process model (i.e. the
reference date model). This can be a string ("day", "week", "month") or a
numeric whole number representing the number of days. If your data does not
have this timestep then you may wish to make use of
\code{\link[=enw_aggregate_cumulative]{enw_aggregate_cumulative()}} to aggregate your data to the desired timestep.}
}
\value{
A \code{data.frame} filtered so that dates by report are less than or
equal the reference date plus the maximum delay.

A \code{data.frame} filtered so that dates by report are less than or
equal the reference date plus the maximum delay.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}
}
\examples{
obs <- enw_example("preprocessed")$obs[[1]]
enw_filter_delay(obs, max_delay = 2)
}
\seealso{
Preprocessing functions
\code{\link{enw_add_delay}()},
\code{\link{enw_add_max_reported}()},
\code{\link{enw_add_metaobs_features}()},
\code{\link{enw_assign_group}()},
\code{\link{enw_complete_dates}()},
\code{\link{enw_construct_data}()},
\code{\link{enw_extend_date}()},
\code{\link{enw_filter_reference_dates}()},
\code{\link{enw_filter_report_dates}()},
\code{\link{enw_flag_observed_observations}()},
\code{\link{enw_impute_na_observations}()},
\code{\link{enw_latest_data}()},
\code{\link{enw_metadata}()},
\code{\link{enw_metadata_delay}()},
\code{\link{enw_missing_reference}()},
\code{\link{enw_preprocess_data}()},
\code{\link{enw_reporting_triangle}()},
\code{\link{enw_reporting_triangle_to_long}()}

Preprocessing functions
\code{\link{enw_add_delay}()},
\code{\link{enw_add_max_reported}()},
\code{\link{enw_add_metaobs_features}()},
\code{\link{enw_assign_group}()},
\code{\link{enw_complete_dates}()},
\code{\link{enw_construct_data}()},
\code{\link{enw_extend_date}()},
\code{\link{enw_filter_reference_dates}()},
\code{\link{enw_filter_report_dates}()},
\code{\link{enw_flag_observed_observations}()},
\code{\link{enw_impute_na_observations}()},
\code{\link{enw_latest_data}()},
\code{\link{enw_metadata}()},
\code{\link{enw_metadata_delay}()},
\code{\link{enw_missing_reference}()},
\code{\link{enw_preprocess_data}()},
\code{\link{enw_reporting_triangle}()},
\code{\link{enw_reporting_triangle_to_long}()}
}
\concept{preprocess}
\keyword{internal}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-module-helpers.R
\name{extract_obs_metadata}
\alias{extract_obs_metadata}
\title{Extract observation metadata}
\usage{
extract_obs_metadata(new_confirm, observation_indicator = NULL)
}
\arguments{
\item{new_confirm}{A data.table containing the columns: "reference_date",
"delay", ".group", and "new_confirm". As produced by \code{\link[=enw_preprocess_data]{enw_preprocess_data()}}
in the \code{new_confirm} output.}

\item{observation_indicator}{A character string, the name of the column in
the data that indicates whether an observation is observed or not (using a
logical variable) and therefore whether or not it should be used in the
likelihood. This variable should be present in the data input to
\code{\link[=enw_preprocess_data]{enw_preprocess_data()}}. It can be generated using \code{flag_observation} in
\code{\link[=enw_complete_dates]{enw_complete_dates()}} or it can be created directly using
\code{\link[=enw_flag_observed_observations]{enw_flag_observed_observations()}}. If either of these approaches are used
then the variable will be name \code{.observed}. Default is \code{NULL}.}
}
\value{
A list containing:
\itemize{
\item \code{st}: time index of each snapshot (snapshot time).
\item \code{ts}: snapshot index by time and group.
\item \code{sl}: number of reported observations per snapshot (snapshot
length).
\item \code{csl}: cumulative version of sl.
\item \code{nsl}: number of observed observations per snapshot (snapshot
length).
\item \code{cnsl}: cumulative version of nsl.
\item \code{sg}: group index of each snapshot (snapshot group).
}
}
\description{
This function extracts metadata from the provided dataset to be used in the
observation model.
}
\seealso{
Helper functions for model modules
\code{\link{add_pmfs}()},
\code{\link{convolution_matrix}()},
\code{\link{enw_reference_by_report}()},
\code{\link{enw_reps_with_complete_refs}()},
\code{\link{extract_sparse_matrix}()},
\code{\link{latest_obs_as_matrix}()},
\code{\link{simulate_double_censored_pmf}()}
}
\concept{modelmodulehelpers}

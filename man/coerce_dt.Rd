% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check.R
\name{coerce_dt}
\alias{coerce_dt}
\title{Coerce \code{data.table}s}
\usage{
coerce_dt(
  data,
  select = NULL,
  required_cols = select,
  forbidden_cols = NULL,
  group = FALSE,
  dates = FALSE,
  copy = TRUE,
  msg_required = "The following columns are required: ",
  msg_forbidden = "The following columns are forbidden: "
)
}
\arguments{
\item{data}{Any of the types supported by \code{\link[data.table:as.data.table]{data.table::as.data.table()}}}

\item{select}{An optional character vector of columns to return; \emph{unchecked}
n.b. it is an error to include ".group"; use \code{group} argument for that}

\item{required_cols}{An optional character vector of required columns}

\item{forbidden_cols}{An optional character vector of forbidden columns}

\item{group}{A logical; ensure the presence of a \code{.group} column?}

\item{dates}{A logical; ensure the presence of \code{report_date} and
\code{reference_date}? If \code{TRUE} (default), those columns will be coerced with
\code{\link[data.table:IDateTime]{data.table::as.IDate()}}.}

\item{copy}{A logical; if \code{TRUE} (default), a new \code{data.table} is returned}

\item{msg_required}{A character string; for \code{required_cols}-related error
message}

\item{msg_forbidden}{A character string; for \code{forbidden_cols}-related error
message}
}
\value{
A \code{data.table}; the returned object will be a copy, unless
\code{copy = FALSE}, in which case modifications are made in-place
}
\description{
Provides consistent coercion of inputs to \link{data.table}
with error handling, column checking, and optional selection.
}
\details{
This function provides a single-point function for getting a "local"
version of data provided by the user, in the internally used \code{data.table}
format. It also enables selectively copying versus not, as well as checking
for the presence and/or absence of various columns.

While it is intended to address garbage in from the \emph{user}, it does not
generally attempt to address garbage in from the \emph{developer} - e.g. if asking
for overlapping required and forbidden columns (though that will lead to an
always-error condition).
}
\seealso{
Utility functions
\code{\link{aggregate_rolling_sum}()},
\code{\link{coerce_date}()},
\code{\link{date_to_numeric_modulus}()},
\code{\link{get_internal_timestep}()},
\code{\link{is.Date}()},
\code{\link{stan_fns_as_string}()}
}
\concept{utils}

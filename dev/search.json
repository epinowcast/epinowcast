[{"path":[]},{"path":"package.epinowcast.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"package.epinowcast.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behaviour contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behaviour include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"package.epinowcast.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behaviour take appropriate fair corrective action response behaviour deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"package.epinowcast.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"package.epinowcast.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behaviour may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"package.epinowcast.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"package.epinowcast.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behaviour deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behaviour inappropriate. public apology may requested.","code":""},{"path":"package.epinowcast.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behaviour. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"package.epinowcast.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behaviour. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"package.epinowcast.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behaviour, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"package.epinowcast.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"package.epinowcast.org/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Development community effort, welcome participation. details forms contribution please see community contribution page.","code":""},{"path":"package.epinowcast.org/dev/CONTRIBUTING.html","id":"community","dir":"","previous_headings":"","what":"Community","title":"Contributing","text":"hold monthly community call discuss package development, research questions, developments literature. also run slack community additional development discussion takes places. welcome new comers, please contact package author invite.","code":""},{"path":"package.epinowcast.org/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"participating project, agree abide code conduct.","code":""},{"path":"package.epinowcast.org/dev/CONTRIBUTING.html","id":"discussions","dir":"","previous_headings":"","what":"Discussions","title":"Contributing","text":"https://community.epinowcast.org, can post general questions, brainstorm ideas, ask help.","code":""},{"path":"package.epinowcast.org/dev/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing","text":"https://github.com/epinowcast/epinowcast/issues bug reports, performance issues, maintenance tasks, feature requests. post, please abide following guidelines. posting new issue, please take moment search existing similar issues order avoid duplication. bug reports: can, please install latest GitHub version epinowcast (.e. remotes::install_github(\"epinowcast/epinowcast\")) verify issue still persists. Describe issue prose clearly concisely possible. Runnable: post enough R code data onlooker can create error computer. Minimal: reduce runtime wherever possible remove complicated details irrelevant issue hand. Readable: format code according tidyverse style guide.","code":""},{"path":"package.epinowcast.org/dev/CONTRIBUTING.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Contributing","text":"External code contributions extremely helpful appreciated. recommended steps. Prior contribution, please propose idea new issue thread reviewer can define intent scope work. Fork repository. Follow GitHub flow create new branch, add commits, open pull request. Discuss code reviewer pull request thread. everything looks good, reviewer merge code project. Please also follow additional guidelines. use develop/ main workflow please target major changes develop branch minor changes main branch. unclear please ask opening initial issue proposing change. Respect architecture reasoning package. Depending scope work, may want read design documents (package vignettes). general aim use data.table manipulate data. However, barrier contributing please use tools familiar raise pull request. reviewer work refactor contribution appropriate add dependencies require. possible, keep contributions small enough easily review manually. okay split work multiple pull requests. Format code according tidyverse style guide. formatting can achieved running style_pkg() styler (rewrites files) lint_package() lintr (provides list complaints resolve). Note: styler::style_pkg() examine roxygen content .e. @examples need check manually. Check code coverage covr::package_coverage(). Automated tests cover new changed functionality pull request. Run overall package checks devtools::check() goodpractice::gp() Describe contribution project’s NEWS.md file. sure mention relevant GitHub issue numbers GitHub name done existing news entries. feel contribution substantial enough author contributor status, please add Authors@R field DESCRIPTION file. general, consider contribution sufficient contributor status several minor single major contributions sufficient author status. planning writing paper similar package extension please note contribution feel free suggest like managed. Note run locally testing suite tests R level code. run cloud (.e PR opened) also run additional tests stan level code. making stan level changes contributors may want run tests manually prior opening PR.","code":""},{"path":"package.epinowcast.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 epinowcast authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"use epinowcast package, data.table purrr data manipulation, ggplot2 plotting, knitr produce tables output, loo approximately evaluate sample performance scoringutils evaluate sample forecast performance. vignette includes several models take upwards 30 minutes fit data moderately equipped laptop. speed model fitting CPUs available set number threads used per chain half number real cores available (2 using 2 MCMC chains 4 real cores). Note may cause conflicts processes running computer issue reduce number threads used.","code":"library(epinowcast) library(data.table) library(purrr) library(ggplot2) library(loo) library(scoringutils) library(knitr) threads <- 2 options(mc.cores = 2)"},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"Nowcasting effectively estimation reporting patterns recently reported data. requires data patterns previous observations, typically means time series data reported multiple consecutive days (theory non-consecutive days used yet supported epinowcast). use COVID-19 hospitalisations date positive test Germany stratified age group available 1st September 2020 (40 days data included prior ) example data available real-time hospitalisations date positive test available 20th October represent hospitalisations finally reported. data sourced Robert Koch Institute via Germany Nowcasting hub deconvolved weekly data days negative reported hospitalisations adjusted. first filter data available 1st September last 40 days. Similarly find data available 20th October dates, serve target “true” data.","code":"nat_germany_hosp <- epinowcast::germany_covid19_hosp[location == \"DE\"]  retro_nat_germany <- nat_germany_hosp |>   enw_filter_report_dates(latest_date = \"2021-09-01\") |>   enw_filter_reference_dates(include_days = 40) retro_nat_germany #>       reference_date location age_group confirm report_date #>    1:     2021-07-23       DE       00+      30  2021-07-23 #>    2:     2021-07-24       DE       00+      31  2021-07-24 #>    3:     2021-07-25       DE       00+       8  2021-07-25 #>    4:     2021-07-26       DE       00+       9  2021-07-26 #>    5:     2021-07-27       DE       00+      35  2021-07-27 #>   ---                                                       #> 6023:     2021-07-23       DE     05-14       1  2021-09-01 #> 6024:     2021-07-23       DE     15-34      21  2021-09-01 #> 6025:     2021-07-23       DE     35-59      39  2021-09-01 #> 6026:     2021-07-23       DE     60-79      21  2021-09-01 #> 6027:     2021-07-23       DE       80+       5  2021-09-01 latest_nat_germany <- nat_germany_hosp |>   enw_filter_report_dates(latest_date =\"2021-10-20\") |>   enw_latest_data() |>   enw_filter_reference_dates(latest_date = \"2021-09-01\", include_days = 40)"},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"data-preprocessing","dir":"Articles","previous_headings":"","what":"Data preprocessing","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"epinowcast works assuming data preprocessed reporting format requires, coupled meta data reference report dates. enw_preprocess_data() can used , although users can also use internal functions produce custom preprocessing steps. stage arbitrary groupings observations can defined, propagated throughout subsequent modelling steps. data stratified age, hence grouped age group, principle grouping combination groups independent reference report date models. furthermore assume maximum delay required make model identifiable. set 40 days due evidence long reporting delays example data. However, note cases majority right truncation occurs first days increasing maximum delay non-linear effect run-time (.e. model maximum delay 20 days much faster fit 40 days). Note also current formulation delays longer maximum ignored adjusted estimate really data reported maximum delay rather finally reported data. Another key modelling choice make stage model overall hospitalisations jointly age groups rather aggregation age group estimates. implicitly assumes aggregated non-aggregated data comparable (may may case) reporting process shares mechanisms. Another way approach model age stratified hospitalisations aggregate nowcast estimates total counts fitting model.","code":"pobs <- enw_preprocess_data(retro_nat_germany, max_delay = 40, by = \"age_group\") pobs #>                     obs           new_confirm               latest missing_reference   reporting_triangle #> 1: <data.table[6020x9]> <data.table[6020x11]> <data.table[287x10]> <data.table[0x6]> <data.table[287x42]> #>          metareference           metareport          metadelay time snapshots        by groups max_delay #> 1: <data.table[287x9]> <data.table[560x12]> <data.table[40x4]>   41       287 age_group      7        40 #>      max_date #> 1: 2021-09-01"},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"models","dir":"Articles","previous_headings":"","what":"Models","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"explore range increasingly complex models using subject area knowledge posterior predictive checks motivate modelling choices.","code":""},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"shared-reporting-delay-distribution","dir":"Articles","previous_headings":"Models","what":"Shared reporting delay distribution","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"first explore relatively simple model assumes reporting delays fixed across age groups time. model default simply call epinowcast. want make use CmdStan’s support within-chain parallelisation first compile default model enabled (also need pass threads_per_chain epinowcast). Note use two chains using 2 threads demonstration general using 4 chains recommended. Also note warm-sampling iterations set default values reduce compute requirements may sufficient many real world use cases. Finally, note silenced fitting progress potential warning messages general done. first visualise observations available model, nowcast final reported hospitalisations actual reported observations.  order identify areas current model poorly reproducing data plot posterior predictions data. plot faceted age group reference data y axis showing number observations reported given day given reference day x axis showing report date. see fairly clearly oscillations reported cases every 7 days expressed plot oscillations facet appear move left right across facets. indicates kind week day adjustment may needed.","code":"multithread_model <- enw_model(threads = TRUE) fit <- enw_fit_opts(   save_warmup = FALSE, output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,    iter_sampling = 500, iter_warmup = 250,   show_messages = FALSE, refresh = 0 ) nowcast <- epinowcast(pobs,   fit = fit,   model = multithread_model, ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 251.2 seconds. #> Chain 2 finished in 253.0 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 252.1 seconds. #> Total execution time: 253.1 seconds. plot(nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\") plot(nowcast, type = \"posterior\") +   facet_wrap(vars(age_group, reference_date), scales = \"free\")"},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"reporting-day-of-the-week-effect","dir":"Articles","previous_headings":"Models","what":"Reporting day of the week effect","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"noted using posterior predictions simple model fit appears day week effect reported observations. adjust introduce random effect day week date report using following helper function uses metadata produced enw_preprocess_data(). Note epinowcast uses sparse design matrix reduce runtimes design matrix shows unique rows index containing mapping full design matrix. speed model fitting make use posterior information previous model (inflation) parameters. Note truly Bayesian approach situations may problematic. now repeat nowcasting step day week reporting model included. Nowcast performance looks visually improved notable variation across age groups 35-59 year old nowcast appearing quite poor (result aggregate nowcast also showing great performance). also plot posterior predictions model way previous model.","code":"report_module_dow <- enw_report(~ (1 | day_of_week), data = pobs) priors <- summary(   nowcast,   type = \"fit\",   variables = c( \"refp_mean_int\", \"refp_sd_int\", \"sqrt_phi\") ) priors[, sd := sd * 5] priors #>            variable      mean    median         sd        mad        q5       q20       q80       q95      rhat #> 1: refp_mean_int[1] 1.1182134 1.1192300 0.22315333 0.04652399 1.0442425 1.0811640 1.1577260 1.1866850 1.0000258 #> 2:   refp_sd_int[1] 1.7316064 1.7293350 0.24315907 0.04947436 1.6545550 1.6901300 1.7717060 1.8180690 1.0031889 #> 3:         sqrt_phi 0.5951404 0.5945985 0.09781829 0.01983052 0.5641209 0.5782652 0.6118532 0.6261347 0.9989904 #>    ess_bulk ess_tail #> 1: 1800.326 775.8310 #> 2: 1680.222 834.0991 #> 3: 1265.155 762.6747 dow_nowcast <- epinowcast(pobs,   report = report_module_dow,   fit = fit,   model = multithread_model,   priors = priors ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 420.2 seconds. #> Chain 1 finished in 433.9 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 427.0 seconds. #> Total execution time: 433.7 seconds. plot(dow_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"age-group-variation","dir":"Articles","previous_headings":"Models","what":"Age group variation","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"quite likely variation reporting delay age may driving variation nowcast performance noted last model. model using random effect 5 year age group (groups supplied data). nowcast time using age adjusted reference date model day week adjusted report date model. Fit looks slightly better adjustment though uncertainty also increased age groups performance final day data may reduced compared first model.","code":"reference_module_age <- enw_reference(~ 1 + (1 | age_group), data = pobs) age_nowcast <- epinowcast(pobs,   reference = reference_module_age,   report = report_module_dow,   fit = fit,   model = multithread_model,   priors = priors ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 541.0 seconds. #> Chain 2 finished in 550.5 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 545.8 seconds. #> Total execution time: 550.3 seconds. plot(age_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"variation-based-on-reference-date","dir":"Articles","previous_headings":"Models","what":"Variation based on reference date","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"case reporting delays change time well across age groups. One way modelling assume piecewise constant variation time modelled first order weekly random walk. attractive property approach limits number report date distributions need evaluated model number weeks data expensive computational step using approach introducing time-varying parameter limits additional computational overhead. fit nowcasting model, comparison previous model looks like introduction variation time introduce slight improvement capturing hospitalisations age groups.","code":"reference_module_age_week <- enw_reference(   ~ 1 + (1 | age_group) + rw(week), data = pobs ) week_nowcast <- epinowcast(pobs,   reference = reference_module_age_week,   report = report_module_dow,   fit = fit,   model = multithread_model,   priors = priors ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 935.6 seconds. #> Chain 2 finished in 959.5 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 947.6 seconds. #> Total execution time: 959.1 seconds. plot(week_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"variation-based-on-reference-date-stratified-by-age","dir":"Articles","previous_headings":"Models","what":"Variation based on reference date stratified by age","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"final hierarchical model makes sense explore whether evidence reporting delays vary week age group jointly. scenario assumption delays may evolve differently time age group reporting effects measurement error still shared across data sets. can now fit model (note model quite complex may take time fit increase adapt_delta setting 0.98 mitigate divergent transitions). comparison previous model looks like introduction variation time introduce slight improvement capturing hospitalisations age groups.","code":"reference_module_week_by_age <- enw_reference(   ~ 1 + (1 | age_group) + rw(week, by = age_group), data = pobs ) age_week_nowcast <- epinowcast(pobs,   reference = reference_module_week_by_age,   report = report_module_dow,   fit = enw_fit_opts(     save_warmup = FALSE, output_loglik = TRUE, pp = TRUE,     chains = 2, threads_per_chain = threads,      iter_sampling = 500, iter_warmup = 500,     show_messages = FALSE, refresh = 0,     adapt_delta = 0.98   ),   model = multithread_model,   priors = priors ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 2526.5 seconds. #> Chain 1 finished in 2605.0 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 2565.7 seconds. #> Total execution time: 2603.3 seconds. plot(age_week_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"independent-models-for-each-age-group-","dir":"Articles","previous_headings":"Models","what":"Independent models for each age group.","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"obvious question ask stage using model jointly fits age groups actually beneficial. explore fitting model previously (day week effect report date random walk week reference date stratified age) age group independently. define model single call epinowcast fitting dataset independently joint setting likely lead long fit times real benefit. Instead write small helper function preprocess input data, define report reference date models run nowcast. can now use wrapper function data available age group, summarise resulting nowcast, join single data frame. now summarised nowcasts rather object class epinowcast need make use underlying plot function . see performance generally quite good across board though width credible intervals also increased. Importantly 35-59 year old age group captured least well heirarchical models minor reductions performance age groups. suggests dataset nowcast date may relatively little benefit jointly modelling age groups.","code":"independent_epinowcast <- function(obs, max_delay = 40, ...) {   pobs_ind <- enw_preprocess_data(obs, max_delay = max_delay)    nowcast <- epinowcast(     data = pobs_ind,     reference = enw_reference(~ rw(week), data = pobs_ind),     report = enw_report(~ (1 | day_of_week), data = pobs_ind),      ...   )    nowcast_summary <- summary(     nowcast,     probs = c(0.025, 0.05, seq(0.1, 0.9, by = 0.1), 0.95, 0.975)   )   return(nowcast_summary) } options(mc.cores = 2)  independent_nowcast <- map(   split(retro_nat_germany, by = \"age_group\"),   independent_epinowcast,   fit = enw_fit_opts(     save_warmup = FALSE, output_loglik = TRUE, pp = TRUE,     chains = 2, threads_per_chain = threads,      iter_sampling = 500, iter_warmup = 250,     show_messages = FALSE, refresh = 0,     adapt_delta = 0.95, max_treedepth = 12   ),   model = multithread_model,   priors = priors ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 373.2 seconds. #> Chain 2 finished in 477.8 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 425.5 seconds. #> Total execution time: 477.7 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 265.1 seconds. #> Chain 2 finished in 322.5 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 293.8 seconds. #> Total execution time: 368.4 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 197.0 seconds. #> Chain 2 finished in 207.0 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 202.0 seconds. #> Total execution time: 207.1 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 523.5 seconds. #> Chain 2 finished in 656.2 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 589.9 seconds. #> Total execution time: 656.0 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 477.0 seconds. #> Chain 1 finished in 513.7 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 495.4 seconds. #> Total execution time: 513.6 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 318.7 seconds. #> Chain 1 finished in 392.0 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 355.4 seconds. #> Total execution time: 391.9 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 287.9 seconds. #> Chain 1 finished in 329.7 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 308.8 seconds. #> Total execution time: 329.6 seconds. independent_nowcast <- rbindlist(independent_nowcast) enw_plot_nowcast_quantiles(   independent_nowcast, latest_obs = latest_nat_germany ) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"alternative-models","dir":"Articles","previous_headings":"Models","what":"Alternative models","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"models defined assumed delay distribution, aside report day effects, parametric lognormal distribution. assumptions may less optimal. Alternatives include assuming different distributional form (gamma distribution also supported epinowcast) assuming report delay fully non-parametric yet supported future package versions. number additional models explore within framework supported epinowcast well large number alternative parameterisations yet supported. example, explore models complex reporting day effects, including holidays (supported epinowcast either separate effect assuming reporting hazard Sundays) variation time represent reporting delays changing independently reference date (similar time varying model defined effect occurring report date model rather reference date model). choices data dependent domain knowledge needs used assess likely censoring mechanisms. interested expanding functionality underlying model address issues note epinowcast allows users pass models meaning alternative parameterisations, example altering forecast model used inferring expected observations, may easily tested within package infrastructure. testing done alterations increase flexibility package model improves defaults welcome pull requests.","code":""},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"evaluation","dir":"Articles","previous_headings":"","what":"Evaluation","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"nowcast single date, visualised performance went, evaluation anything complete rigorous can give examples might evaluate performance generally potentially draw useful initial conclusions. first list models give informative names, summarise nowcast posterior model join tidy data frame make analysis easier. allows us plot nowcasts model age group compared latest data. Looking plot shows small differences across models uncertainty generally decreasing model complexity increases. age groups clearly better nowcast others 35-59 year old age group particular poor nowcast coverage.  crude measure general sample performance can use leave one information criterion supplied loo package though note typically appropriate time series data (approximate LFO cross validation likely perform better), approximation used avoid refitting likely poor, accounting refitting model required. see model includes day week effects date report substantially outperformed baseline model adjustment complex models adjusted variation age week date test improved estimated sample performance uncertainty around estimates wide. rigorously, can evaluate nowcasts using proper scoring rules scoringutils package including weighted interval score. limit nowcasts scored last 7 days data make interpretation easier, transform nowcasts format required scoringutils, link latest available data, finally call scoringutils::eval_forecasts(). Note scoring single nowcasts difficult generalise findings one day reporting may unusual. informed view model pick ideally nowcast range dates evaluate . first step score overall performance. see baseline model variation actually performs well models include least day week, age groups variation week performing comparably. performance characteristics relatively similar across models (models biased towards underprediction example). Stratifying age group see trends performance fairly consistent small variation ordering model performs others. Stratifying date find interestingly complex models appear better earlier dates (data available) addition age group appearing factor drives increase performance. finding overall summary simple model performed comparably appears largely driven performance last nowcast target model significantly outperformed others (underlines need evaluate nowcasts different dates single data point may may anomalous may identified real trend). Finally can look across scores relative simple model variation. nicely captures role last data point performance also highlights variation across reference dates age groups models. difference performance hierarchical age models model treats age groups independently also clear model performing well days 35-59 year age group.","code":"nowcasts <- list(   \"Reference: Fixed, Report: Fixed\" = nowcast,   \"Reference: Fixed, Report: Day of week\" = dow_nowcast,   \"Reference: Age, Report: Day of week\" = age_nowcast,   \"Reference: Age and week, Report: Day of week\" = week_nowcast,   \"Reference: Age and week by age, Report: Day of week\" = age_week_nowcast ) summarised_nowcasts <- map(   nowcasts, summary,   probs = c(0.025, 0.05, seq(0.1, 0.9, by = 0.1), 0.95, 0.975) ) summarised_nowcasts$`Independent by age, Reference: Week, Report: Day of week` <- independent_nowcast # nolint  summarised_nowcasts <- rbindlist(summarised_nowcasts, idcol = \"model\",                                  use.names = TRUE) summarised_nowcasts[, `:=`(   model = factor(     model,     levels = c(\"Reference: Fixed, Report: Fixed\",                \"Reference: Fixed, Report: Day of week\",                \"Reference: Age, Report: Day of week\",                \"Reference: Age and week, Report: Day of week\",                \"Reference: Age and week by age, Report: Day of week\",                \"Independent by age, Reference: Week, Report: Day of week\")),   age_group = factor(     age_group,     levels = c(\"00+\", \"00-04\", \"05-14\", \"15-34\", \"35-59\", \"60-79\", \"80+\")) )] enw_plot_nowcast_quantiles(   summarised_nowcasts, latest_obs = latest_nat_germany ) +   facet_grid(vars(age_group), vars(model), scales = \"free_y\") loos <- map(nowcasts, ~ .$fit[[1]]$loo()) loo_compare(loos) #>                                                     elpd_diff se_diff #> Reference: Age and week by age, Report: Day of week    0.0       0.0  #> Reference: Age and week, Report: Day of week         -15.9       8.0  #> Reference: Age, Report: Day of week                  -19.2       9.0  #> Reference: Fixed, Report: Day of week                -31.1      10.6  #> Reference: Fixed, Report: Fixed                     -608.6      46.9 score <- enw_score_nowcast(  summarised_nowcasts,  latest_nat_germany[reference_date > (max(reference_date) - 7)] )  score |>   summarise_scores(by = \"model\") |>   kable() score |>   summarise_scores(by = c(\"model\", \"age_group\")) |>   kable() score |>   summarise_scores(by = c(\"model\", \"reference_date\")) |>   kable() age_date_score <- score |>   summarise_scores(by = c(\"model\", \"reference_date\", \"age_group\")) fixed_score <- age_date_score[   model %in% \"Reference: Fixed, Report: Fixed\",   .(reference_date, age_group, fixed_is = interval_score) ] age_date_score <- merge(   age_date_score, fixed_score, by = c(\"reference_date\", \"age_group\") )  age_date_score <- age_date_score[, interval_score := interval_score / fixed_is] age_date_score <- age_date_score[!model %in% \"Reference: Fixed, Report: Fixed\"] plot <- ggplot(age_date_score) +   aes(x = reference_date, y = interval_score, col = model) +   geom_hline(yintercept = 1, linetype = 2, size = 1.2, alpha = 0.5) +   geom_line(size = 1.1, alpha = 0.6) +   geom_point(size = 1.2) +   facet_wrap(vars(age_group)) +   scale_color_brewer(palette = \"Dark2\") +   scale_y_log10(labels = scales::percent)  plot <- enw_plot_theme(plot) +   labs(x = \"Reference date\",        y = \"Weighted interval score (relative to Reference: Fixed, Report: Fixed model)\") + # nolint   guides(col = guide_legend(title = \"Model\", ncol = 2)) plot"},{"path":"package.epinowcast.org/dev/articles/germany-age-stratified-nowcasting.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"vignette showcased using epinowcast nowcast age stratified COVID-19 hospitalisations Germany date test series increasingly complex models motivated data. also showed simple methods exploring nowcasts evaluating . Using limited information available us (nowcast single date used performance date motivate new models) appears models performed acceptably , aside last data point, models age day week effects likely performed better. also fairly clear performance degrades amount reported data reduced intuitively makes sense performance particularly sensitive first day reported data available (.e “now”). apparent finding delays evolve fairly independently across age groups motivates choosing model flexible , least date reference model. Despite independent model fixed effect model well overall, applications choosing model based evaluation, likely select relatively flexible model (day week, age group, age stratified weekly variation) relying hierarchical structure limit overfitting, excepting small reduction performance edge cases (hope edge cases common feature data). However practice, want explore nowcasting evaluating dates possible greater range model structures (discussed alternative modelling section vignette). Note proper scoring approach taken understand model performance (commonly used literature) ranking models based absolute errors groups high counts (35-59 age group) important nowcast correctly groups smaller counts (aged 80+).","code":""},{"path":"package.epinowcast.org/dev/articles/model.html","id":"decomposition-into-expected-final-notifications-and-report-delay-components","dir":"Articles","previous_headings":"","what":"Decomposition into expected final notifications and report delay components","title":"Model definition and implementation","text":"concerned outcomes occur time reference (e.g., date symptom onset test disease) reported delay, time report (e.g. date onsets entered central database become available analysis). assume times measured discrete time steps, usually day (case times dates). follow approach Höhle Heiden[2] consider distribution notifications (\\(n_{g,t,d}\\)) time reference (\\(t\\)) reporting delay (\\(d\\)) conditional final observed count \\(N_{g,t}\\) dataset (\\(g\\)) , \\[\\begin{equation}   N_{g,t} = \\sum_{d=0}^{D} n_{g,t,d} \\end{equation}\\] \\(D\\) represents maximum delay time reference time report theory infinite practice set finite value order make model identifiable computationally feasible. \\(t\\) \\(g\\) notifications assumed drawn multinomial distribution \\(N_{g,t}\\) trials probability vector (\\(p_{g,t,d}\\)) length \\(D\\). aim nowcasting predict final observed counts \\(N_{g,t}\\) given information available time \\(t\\). estimating components probability vector jointly expected number final notifications (\\(\\lambda_{g,t} = \\mathbb{E}[N_{g,t}]\\)) dataset \\(g\\) time \\(t\\). alternative approach, explored , consider \\(n_{g,t,d}\\) independently point model can defined regression can fit using standard software appropriate observation model adjustment reporting delay (.e becomes Poisson Negative Binomial regression). implementation approach available Bastos et al.[6]. downside simplified approach reporting conditionally dependent may make specifying models complex reporting distributions difficult.","code":""},{"path":"package.epinowcast.org/dev/articles/model.html","id":"expected-final-notifications","dir":"Articles","previous_headings":"","what":"Expected final notifications","title":"Model definition and implementation","text":"follow approach Günther et al.[1] specify model expected final notifications first order random walk. model can principle model complex time-series approach, Gaussian process, mechanistic semi-mechanistic compartmental model. Extending flexibility model area work evaluating benefits tradeoffs complex approaches. \\[\\begin{align}   \\log (\\lambda_{g,t}) &\\sim \\text{Normal}\\left(\\log (\\lambda_{g,t-1}) , \\sigma^{\\lambda}_{g} \\right) \\\\   \\log (\\lambda_{g,0}) &\\sim \\text{Normal}\\left(\\log (N_{g,0} + 1), 1 \\right) \\\\ \\sigma^{\\lambda}_{g} &\\sim \\text{Half-Normal}\\left(0, 1\\right) \\end{align}\\] \\(N_{g0}\\), first time point expected observations dataset \\(d\\), assumed completely observed.","code":""},{"path":"package.epinowcast.org/dev/articles/model.html","id":"delay-distribution","dir":"Articles","previous_headings":"","what":"Delay distribution","title":"Model definition and implementation","text":"following approach Günther et al.[1] estimate delay distribution (\\(p_{g,t,d}\\)) using discrete-time logistic hazard model \\[ h_{g,t,d} =\\text{P} \\left(\\text{delay}=d|\\text{delay} \\geq d, W_{g,t,d}\\right) \\] extend model decompose \\(W_{g,t,d}\\) 3 components: hazard derived parametric delay distribution (\\(\\gamma_{g,t,d}\\)) dependent covariates time reference, hazard derived parametric distribution (\\(\\delta_{g,t,d}\\)) dependent covariates time reference, hazard dependent covariates referenced time report (\\(\\epsilon_{g,t,d}\\)). first component (\\(\\gamma_{g,t,d}\\)) estimate probability reporting \\(p^{\\prime}_{g,t,d}\\) given time followed parametric distribution, implemented using discretised log normal (distributions available) log mean log standard deviation defined using intercept arbitrary shared, reference time indexed, covariates fixed (\\(\\beta_{f,}\\)) random (\\(\\beta_{r,}\\)) coefficients (note can include auto-regressive terms), \\[\\begin{align}   p^{\\prime}_{g,t,d} &\\sim \\text{LogNormal} \\left(\\mu_{g,t}, \\upsilon_{g,t} \\right) \\\\   \\mu_{g,t} &= \\mu_0 + \\beta_{f,\\mu} X_{\\gamma} + \\beta_{r,\\mu} Z_{\\gamma} \\\\   \\text{log} (\\upsilon_{g,t}) &= \\upsilon_0 + \\beta_{f,\\upsilon} X_{\\gamma} + \\beta_{r,\\upsilon} Z_{\\gamma} \\end{align}\\] Note normalise distribution sums 1. parametric logit hazard (.e. probability report given time conditional already reported) component model , \\[\\begin{equation}   \\gamma_{g,t,d} = \\text{logit} \\left(\\frac{p^{\\prime}_{g,t,d}}{\\left(1 -\\sum^{d-1}_{d^{\\prime}=0} p^{\\prime}_{g,t,d^{\\prime}} \\right)} \\right) \\end{equation}\\] addition parametric reporting effects may also non-parametric effects referenced reference report dates. represented non-distributional logit hazard components time reference report, defined using intercept (\\(\\delta_0\\)) arbitrary shared covariates fixed (\\(\\beta_{f,}\\)) random (\\(\\beta_{r,}\\)) coefficients (note can include auto-regressive terms). \\[\\begin{align}   \\delta_{g,t,d} &= \\delta_0 + \\beta_{f,\\delta} X_{\\delta} + \\beta_{r,\\delta} Z_{\\delta} \\\\   \\epsilon_{g,t,d} &= \\beta_{f,\\epsilon} X_{\\epsilon} + \\beta_{r,\\epsilon} Z_{\\epsilon} \\end{align}\\] overall hazard group, reference time, delay , \\[\\begin{equation}   \\text{logit} (h_{g,t,d}) = \\gamma_{g,t,d} + \\delta_{g,t,d} +  \\epsilon_{g,t,d},\\ h_{g,t,D} = 1 \\end{equation}\\] hazard final day assumed 1 order enforce constraint reported observations reported within specified maximum delay. probability report given delay, reference time, group follows, \\[\\begin{equation}   p_{g,t,0} = h_{g,t,0},\\ p_{g,t,d} = \\left(1 -\\sum^{d-1}_{d^{\\prime}=0} p_{g,t,d^{\\prime}} \\right) \\times h_{g,t,d} \\end{equation}\\] (\\(\\beta_{f,}\\)) random (\\(\\beta_{r,}\\)) coefficients standard normal priors default standard half-normal priors pooled standard deviations. implementation details see enw_reference() delays linked date reference, enw_report() delays linked date report.","code":""},{"path":"package.epinowcast.org/dev/articles/model.html","id":"observation-model-and-nowcast","dir":"Articles","previous_headings":"","what":"Observation model and nowcast","title":"Model definition and implementation","text":"Expected notifications time reference (\\(t\\)) reporting delay can now found multiplying expected final notifications \\(t\\) probability reporting day delay (\\(p_{g,t,d}\\)). assume negative binomial observation model, default, joint overdispersion parameter (standard half normal prior 1 square root overdispersion[7]) produce nowcast final observed notifications reference time summing posterior estimates unobserved notification observed notifications reference time. \\[\\begin{align}   n_{g,t,d} \\mid \\lambda_{g,t},p_{g,t,d}  &\\sim \\text{NB} \\left((1 - \\alpha_{g,t})\\lambda_{g,t} \\times p_{g,t,d}, \\phi \\right),\\ t=1,...,T. \\\\     \\frac{1}{\\sqrt{\\phi}} &\\sim \\text{Half-Normal}(0, 1) \\\\   N_{g,t} &= \\sum_{d=0}^{D} n_{g,t,d} \\end{align}\\] \\(\\alpha_{g,t}\\) proportion cases reference date report reference date. default modelled set zero , see accounting reported cases missing reference date section defaults. observation models Poisson distribution also supported. See documentation enw_obs() details. order make best use observed data nowcasting use observations available reported given report reference date use posterior prediction observation model . means nowcast dates become increasingly truncated depend modelled estimates whereas complete majority final count known.","code":""},{"path":"package.epinowcast.org/dev/articles/model.html","id":"accounting-for-reported-cases-with-a-missing-reference-date","dir":"Articles","previous_headings":"","what":"Accounting for reported cases with a missing reference date","title":"Model definition and implementation","text":"real-world settings observations may reported without linked reference date. common example cases date symptom onset report date often known onset date may . account support modelling missing process assuming cases missing reference date reporting delay distribution cases known reference date processes drive probability missing reference date ($_{g,t}) linked unknown date reference rather date report. model probability flexibly logit scale follows, \\[\\begin{equation}   \\text{logit} (\\alpha_{g,t}) = \\alpha_0 + \\beta_{f,\\alpha} X_{\\alpha} + \\beta_{r,\\alpha} Z_{\\alpha} \\end{equation}\\] \\(\\alpha_0\\) represents intercept, \\(\\beta_{f,\\alpha}\\) fixed effects, \\(\\beta_{r,\\alpha}\\) random effects. link observations date report missing reference date (\\(M_{g,t}\\)) convolve expected notifications probability missing reference date probability reporting given day follows, \\[\\begin{equation}   M_{g,t} \\mid \\lambda_{g,t},p_{g,t,d}, \\alpha_{g,t}  \\sim \\text{NB} \\left( \\sum^D_{d=0} \\alpha_{g,t-d} \\lambda_{g,t-d} p_{g,t-d,d}, \\phi \\right),\\ t=1,...,T. \\end{equation}\\] cases known reference dates observation models supported. implementation details see enw_missing().","code":""},{"path":"package.epinowcast.org/dev/articles/model.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"Model definition and implementation","text":"model implemented stan using cmdstanr defaults altered[4,5]. Optional within chain parallelisation available across times reference reduce runtimes. Sparse design matrices used covariates limit number probability mass functions need calculated. epinowcast incorporates additional functionality written R[8] enable plotting nowcasts posterior predictions, summarising nowcasts, scoring using scoringutils[9]. flexible formula interface provided enable easier implementation complex user specified models without interacting underlying code base. functionality modular allowing users extend alter underlying model whilst continuing use package framework.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam Abbott. Author, maintainer. Adrian Lison. Author. Sebastian Funk. Author. Michael DeWitt. Contributor. Hannah Choi. Contributor. Carl Pearson. Author.","code":""},{"path":"package.epinowcast.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sam Abbott, Adrian Lison, Sebastian Funk (2021). epinowcast: Flexible hierarchical nowcasting,  DOI: 10.5281/zenodo.5637165","code":"@Article{,   title = {epinowcast: Flexible hierarchical nowcasting},   author = {Sam Abbott and Adrian Lison and Sebastian Funk},   journal = {Zenodo},   year = {2021},   doi = {10.5281/zenodo.5637165}, }"},{"path":"package.epinowcast.org/dev/index.html","id":"flexible-hierarchical-nowcasting-","dir":"","previous_headings":"","what":"Flexible Hierarchical Nowcasting","title":"Flexible Hierarchical Nowcasting","text":"Tools enable flexible efficient hierarchical nowcasting right-truncated epidemiological time-series using semi-mechanistic Bayesian model support range reporting generative processes. Nowcasting, context, gaining situational awareness using currently available observations reporting patterns historical observations. can useful tracking spread infectious disease real-time: without nowcasting, changes trends can obfuscated partial reporting detection may delayed due use simpler methods like truncation. package designed epidemiological applications mind, applied set right-truncated time-series count data.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/index.html","id":"installing-the-package","dir":"","previous_headings":"Installation","what":"Installing the package","title":"Flexible Hierarchical Nowcasting","text":"Install stable development version package : Alternatively, install stable development GitHub using following, unstable development version can also installed GitHub using following,","code":"install.packages(\"epinowcast\", repos = \"https://epinowcast.r-universe.dev\") remotes::install_github(\"epinowcast/epinowcast\", dependencies = TRUE) remotes::install_github(\"epinowcast/epinowcast@develop\", dependencies = TRUE)"},{"path":"package.epinowcast.org/dev/index.html","id":"installing-cmdstan","dir":"","previous_headings":"Installation","what":"Installing CmdStan","title":"Flexible Hierarchical Nowcasting","text":"don’t already CmdStan installed , addition installing epinowcast, also necessary install CmdStan using CmdStanR’s install_cmdstan() function enable model fitting epinowcast. suitable C++ toolchain also required. Instructions provided Getting started CmdStanR vignette. See CmdStanR documentation details support.","code":"cmdstanr::install_cmdstan()"},{"path":"package.epinowcast.org/dev/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Flexible Hierarchical Nowcasting","text":"quick start use COVID-19 hospitalisations date positive test Germany available 1st October 2021 demonstrate specification fitting simple nowcasting model using epinowcast. Examples using complex models available package vignettes papers linked literature vignette.","code":""},{"path":"package.epinowcast.org/dev/index.html","id":"package","dir":"","previous_headings":"Quick start","what":"Package","title":"Flexible Hierarchical Nowcasting","text":"well epinowcast quick start makes use data.table ggplot2 installed epinowcast installed.","code":"library(epinowcast) library(data.table) library(ggplot2)"},{"path":"package.epinowcast.org/dev/index.html","id":"data","dir":"","previous_headings":"Quick start","what":"Data","title":"Flexible Hierarchical Nowcasting","text":"Nowcasting effectively estimation reporting patterns recently reported data. requires data patterns previous observations typically means time series data reported multiple consecutive days (theory non-consecutive days used yet supported epinowcast). quick start data sourced Robert Koch Institute via Germany Nowcasting hub deconvolved weekly data days negative reported hospitalisations adjusted. first filter snapshot retrospective data available 40 days 1st October contains 40 days data produce nowcast target based latest available hospitalisations date positive test.","code":"nat_germany_hosp <-   germany_covid19_hosp[location == \"DE\"][age_group %in% \"00+\"] |>   enw_filter_report_dates(latest_date = \"2021-10-01\")  retro_nat_germany <- nat_germany_hosp |>   enw_filter_report_dates(remove_days = 40) |>   enw_filter_reference_dates(include_days = 40) retro_nat_germany #>      reference_date location age_group confirm report_date #>   1:     2021-07-13       DE       00+      21  2021-07-13 #>   2:     2021-07-14       DE       00+      22  2021-07-14 #>   3:     2021-07-15       DE       00+      28  2021-07-15 #>   4:     2021-07-16       DE       00+      19  2021-07-16 #>   5:     2021-07-17       DE       00+      20  2021-07-17 #>  ---                                                       #> 857:     2021-07-14       DE       00+      72  2021-08-21 #> 858:     2021-07-15       DE       00+      69  2021-08-22 #> 859:     2021-07-13       DE       00+      59  2021-08-21 #> 860:     2021-07-14       DE       00+      72  2021-08-22 #> 861:     2021-07-13       DE       00+      59  2021-08-22 latest_germany_hosp <- nat_germany_hosp |>   enw_latest_data() |>   enw_filter_reference_dates(remove_days = 40, include_days = 40) head(latest_germany_hosp, n = 10) #>     reference_date location age_group confirm report_date #>  1:     2021-07-13       DE       00+      60  2021-10-01 #>  2:     2021-07-14       DE       00+      74  2021-10-01 #>  3:     2021-07-15       DE       00+      69  2021-10-01 #>  4:     2021-07-16       DE       00+      49  2021-10-01 #>  5:     2021-07-17       DE       00+      67  2021-10-01 #>  6:     2021-07-18       DE       00+      51  2021-10-01 #>  7:     2021-07-19       DE       00+      36  2021-10-01 #>  8:     2021-07-20       DE       00+      96  2021-10-01 #>  9:     2021-07-21       DE       00+      94  2021-10-01 #> 10:     2021-07-22       DE       00+      99  2021-10-01"},{"path":"package.epinowcast.org/dev/index.html","id":"data-preprocessing-and-model-specification","dir":"","previous_headings":"Quick start","what":"Data preprocessing and model specification","title":"Flexible Hierarchical Nowcasting","text":"Process reported data format required epinowcast return data.table. stage specify grouping (.e age, location) . can useful check output beginning model make sure everything expected. Construct parametric lognormal intercept model date reference using metadata produced enw_preprocess_data(). Note epinowcast uses sparse design matrix parametric delay distributions reduce runtimes design matrix shows unique rows index containing mapping full design matrix. Construct model random effect day report using metadata produced enw_preprocess_data().","code":"pobs <- enw_preprocess_data(retro_nat_germany, max_delay = 40) pobs #>                    obs          new_confirm              latest #> 1: <data.table[860x9]> <data.table[860x11]> <data.table[41x10]> #>    missing_reference  reporting_triangle      metareference          metareport #> 1: <data.table[0x6]> <data.table[41x42]> <data.table[41x9]> <data.table[80x12]> #>             metadelay time snapshots by groups max_delay   max_date #> 1: <data.table[40x4]>   41        41         1        40 2021-08-22 reference_module <- enw_reference(~1, distribution = \"lognormal\", data = pobs) report_module <- enw_report(~ (1 | day_of_week), data = pobs)"},{"path":"package.epinowcast.org/dev/index.html","id":"model-fitting","dir":"","previous_headings":"Quick start","what":"Model fitting","title":"Flexible Hierarchical Nowcasting","text":"First compile model. step can left epinowcast want use multiple cores per chain speed model fitting need compile model feature turned . now fit model produce nowcast using fit. Note use two chains using two threads demonstration general using 4 chains recommended. Also note warm-sampling iterations set default values reduce compute requirements may sufficient many real world use cases. Finally, note silenced fitting progress potential warning messages purposes keeping quick start short general done.","code":"model <- enw_model(threads = TRUE) options(mc.cores = 2) nowcast <- epinowcast(pobs,   reference = reference_module,   report = report_module,   fit = enw_fit_opts(,     save_warmup = FALSE, pp = TRUE,     chains = 2, threads_per_chain = 2,     iter_sampling = 500, iter_warmup = 500,     show_messages = FALSE, refresh = 0   ),   model = model ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 122.9 seconds. #> Chain 2 finished in 126.5 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 124.7 seconds. #> Total execution time: 126.6 seconds."},{"path":"package.epinowcast.org/dev/index.html","id":"results","dir":"","previous_headings":"Quick start","what":"Results","title":"Flexible Hierarchical Nowcasting","text":"Print output epinowcast includes diagnostic information, data used fitting, cmdstanr object. Summarise nowcast latest snapshot data. Plot summarised nowcast currently observed data (optionally recent data comparison purposes).  Plot posterior predictions observed notifications date report check well model reproduces observed data.  Rather using methods supplied epinowcast directly, package functions can also used extract nowcast posterior samples, summarise , plot . demonstrated plotting 7 day incidence hospitalisations.","code":"nowcast #>                    obs          new_confirm              latest #> 1: <data.table[860x9]> <data.table[860x11]> <data.table[41x10]> #>    missing_reference  reporting_triangle      metareference          metareport #> 1: <data.table[0x6]> <data.table[41x42]> <data.table[41x9]> <data.table[80x12]> #>             metadelay time snapshots by groups max_delay   max_date #> 1: <data.table[40x4]>   41        41         1        40 2021-08-22 #>                  fit       data  fit_args samples max_rhat #> 1: <CmdStanMCMC[32]> <list[67]> <list[8]>    1000     1.02 #>    divergent_transitions per_divergent_transitions max_treedepth #> 1:                     0                         0             8 #>    no_at_max_treedepth per_at_max_treedepth run_time #> 1:                  39                0.039    126.6 nowcast |>   summary(probs = c(0.05, 0.95)) |>   head(n = 10) #>     reference_date report_date .group max_confirm location age_group confirm #>  1:     2021-07-14  2021-08-22      1          72       DE       00+      72 #>  2:     2021-07-15  2021-08-22      1          69       DE       00+      69 #>  3:     2021-07-16  2021-08-22      1          47       DE       00+      47 #>  4:     2021-07-17  2021-08-22      1          65       DE       00+      65 #>  5:     2021-07-18  2021-08-22      1          50       DE       00+      50 #>  6:     2021-07-19  2021-08-22      1          36       DE       00+      36 #>  7:     2021-07-20  2021-08-22      1          94       DE       00+      94 #>  8:     2021-07-21  2021-08-22      1          91       DE       00+      91 #>  9:     2021-07-22  2021-08-22      1          99       DE       00+      99 #> 10:     2021-07-23  2021-08-22      1          86       DE       00+      86 #>     cum_prop_reported delay prop_reported    mean median        sd    mad q5 #>  1:                 1    39             0  72.000     72 0.0000000 0.0000 72 #>  2:                 1    38             0  69.041     69 0.2033725 0.0000 69 #>  3:                 1    37             0  47.073     47 0.2824018 0.0000 47 #>  4:                 1    36             0  65.153     65 0.4046662 0.0000 65 #>  5:                 1    35             0  50.228     50 0.5121311 0.0000 50 #>  6:                 1    34             0  36.240     36 0.5125063 0.0000 36 #>  7:                 1    33             0  94.490     94 0.7130276 0.0000 94 #>  8:                 1    32             0  91.730     92 0.8876305 1.4826 91 #>  9:                 1    31             0 100.023    100 1.0703348 1.4826 99 #> 10:                 1    30             0  87.208     87 1.1781868 1.4826 86 #>        q95      rhat  ess_bulk  ess_tail #>  1:  72.00        NA        NA        NA #>  2:  69.00 1.0022930  938.4902  934.0212 #>  3:  48.00 0.9995475 1035.0728 1020.0972 #>  4:  66.00 0.9983861  816.2412  871.2492 #>  5:  51.00 1.0005008 1086.3247 1030.2163 #>  6:  37.00 1.0019313  884.8056  811.0771 #>  7:  96.00 0.9984331  869.4658  805.9687 #>  8:  93.05 1.0016680  890.2365  905.6224 #>  9: 102.00 1.0019187  874.0784  927.4327 #> 10:  89.00 0.9988485  860.8845  953.3570 plot(nowcast, latest_obs = latest_germany_hosp) plot(nowcast, type = \"posterior\") +   facet_wrap(vars(reference_date), scale = \"free\") # extract samples samples <- summary(nowcast, type = \"nowcast_samples\")  # Take a 7 day rolling sum of both samples and observations cols <- c(\"confirm\", \"sample\") samples[, (cols) := lapply(.SD, frollsum, n = 7),   .SDcols = cols, by = \".draw\" ][!is.na(sample)] #>        reference_date report_date .group max_confirm location age_group confirm #>     1:     2021-07-20  2021-08-22      1          94       DE       00+     433 #>     2:     2021-07-20  2021-08-22      1          94       DE       00+     433 #>     3:     2021-07-20  2021-08-22      1          94       DE       00+     433 #>     4:     2021-07-20  2021-08-22      1          94       DE       00+     433 #>     5:     2021-07-20  2021-08-22      1          94       DE       00+     433 #>    ---                                                                          #> 33996:     2021-08-22  2021-08-22      1          45       DE       00+    1093 #> 33997:     2021-08-22  2021-08-22      1          45       DE       00+    1093 #> 33998:     2021-08-22  2021-08-22      1          45       DE       00+    1093 #> 33999:     2021-08-22  2021-08-22      1          45       DE       00+    1093 #> 34000:     2021-08-22  2021-08-22      1          45       DE       00+    1093 #>        cum_prop_reported delay prop_reported .chain .iteration .draw sample #>     1:                 1    33             0      1          1     1    434 #>     2:                 1    33             0      1          2     2    433 #>     3:                 1    33             0      1          3     3    436 #>     4:                 1    33             0      1          4     4    433 #>     5:                 1    33             0      1          5     5    434 #>    ---                                                                      #> 33996:                 1     0             1      2        496   996   2122 #> 33997:                 1     0             1      2        497   997   2295 #> 33998:                 1     0             1      2        498   998   1935 #> 33999:                 1     0             1      2        499   999   2387 #> 34000:                 1     0             1      2        500  1000   2079 latest_germany_hosp_7day <- copy(latest_germany_hosp)[   ,   confirm := frollsum(confirm, n = 7) ][!is.na(confirm)]  # Summarise samples sum_across_last_7_days <- enw_summarise_samples(samples)  # Plot samples enw_plot_nowcast_quantiles(sum_across_last_7_days, latest_germany_hosp_7day)"},{"path":"package.epinowcast.org/dev/index.html","id":"learning-more","dir":"","previous_headings":"","what":"Learning more","title":"Flexible Hierarchical Nowcasting","text":"package extensive documentation well vignettes describing underlying methodology, several case studies. Please see package site details. Note development version package also supporting documentation available .","code":""},{"path":"package.epinowcast.org/dev/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Flexible Hierarchical Nowcasting","text":"using epinowcast work please consider citing using following,","code":"#>  #> To cite epinowcast in publications use: #>  #>   Sam Abbott, Adrian Lison, and Sebastian Funk (2021). epinowcast: #>   Flexible hierarchical nowcasting, DOI: 10.5281/zenodo.5637165 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {epinowcast: Flexible hierarchical nowcasting}, #>     author = {Sam Abbott and Adrian Lison and Sebastian Funk}, #>     journal = {Zenodo}, #>     year = {2021}, #>     doi = {10.5281/zenodo.5637165}, #>   }"},{"path":"package.epinowcast.org/dev/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"","what":"How to make a bug report or feature request","title":"Flexible Hierarchical Nowcasting","text":"Please briefly describe problem output expect issue. question, please don’t open issue. Instead, ask Q page. See contributing guide information.","code":""},{"path":"package.epinowcast.org/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Flexible Hierarchical Nowcasting","text":"welcome contributions new contributors! particularly appreciate help priority problems issues. Please check add issues, /add pull request. See contributing guide information. interested expanding functionality underlying model note epinowcast allows users pass models meaning alternative parameterisations, example altering forecast model used inferring expected observations, may easily tested within package infrastructure. testing done alterations increase flexibility package model improves defaults welcome via pull request communication package authors. Even wanting add updated model package please reach love hear use case.","code":""},{"path":"package.epinowcast.org/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Flexible Hierarchical Nowcasting","text":"Please note epinowcast project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"package.epinowcast.org/dev/reference/as_string_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts formulas to strings — as_string_formula","title":"Converts formulas to strings — as_string_formula","text":"Converts formulas strings","code":""},{"path":"package.epinowcast.org/dev/reference/as_string_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts formulas to strings — as_string_formula","text":"","code":"as_string_formula(formula)"},{"path":"package.epinowcast.org/dev/reference/as_string_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts formulas to strings — as_string_formula","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function.","code":""},{"path":"package.epinowcast.org/dev/reference/as_string_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts formulas to strings — as_string_formula","text":"character string supplied formula","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/as_string_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts formulas to strings — as_string_formula","text":"","code":"epinowcast:::as_string_formula(~ 1 + age_group) #> [1] \"~1 + age_group\""},{"path":"package.epinowcast.org/dev/reference/check_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Report and Reference Dates are present — check_dates","title":"Check Report and Reference Dates are present — check_dates","text":"Check Report Reference Dates present","code":""},{"path":"package.epinowcast.org/dev/reference/check_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Report and Reference Dates are present — check_dates","text":"","code":"check_dates(obs)"},{"path":"package.epinowcast.org/dev/reference/check_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Report and Reference Dates are present — check_dates","text":"obs observation data frame containing report_date reference_date columns.","code":""},{"path":"package.epinowcast.org/dev/reference/check_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Report and Reference Dates are present — check_dates","text":"Returns input data.frame dates converted date format already.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/check_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Observations for reserved grouping variables — check_group","title":"Check Observations for reserved grouping variables — check_group","text":"Check Observations reserved grouping variables","code":""},{"path":"package.epinowcast.org/dev/reference/check_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Observations for reserved grouping variables — check_group","text":"","code":"check_group(obs)"},{"path":"package.epinowcast.org/dev/reference/check_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Observations for reserved grouping variables — check_group","text":"obs observation data frame contain .group, .old_group, .new_group reserved variables.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/check_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a model module contains the required components — check_module","title":"Check a model module contains the required components — check_module","text":"Check model module contains required components","code":""},{"path":"package.epinowcast.org/dev/reference/check_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a model module contains the required components — check_module","text":"","code":"check_module(module)"},{"path":"package.epinowcast.org/dev/reference/check_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a model module contains the required components — check_module","text":"module model module. example enw_expectation().","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/check_modules_compatible.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that model modules have compatible specifications — check_modules_compatible","title":"Check that model modules have compatible specifications — check_modules_compatible","text":"Check model modules compatible specifications","code":""},{"path":"package.epinowcast.org/dev/reference/check_modules_compatible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that model modules have compatible specifications — check_modules_compatible","text":"","code":"check_modules_compatible(modules)"},{"path":"package.epinowcast.org/dev/reference/check_modules_compatible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that model modules have compatible specifications — check_modules_compatible","text":"modules list model modules.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/check_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Quantiles Required are Present — check_quantiles","title":"Check Quantiles Required are Present — check_quantiles","text":"Check Quantiles Required Present","code":""},{"path":"package.epinowcast.org/dev/reference/check_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Quantiles Required are Present — check_quantiles","text":"","code":"check_quantiles(posterior, req_probs = c(0.5, 0.95, 0.2, 0.8))"},{"path":"package.epinowcast.org/dev/reference/check_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Quantiles Required are Present — check_quantiles","text":"posterior dataframe containing quantiles identified using q5 naming scheme. Default: default. req_probs numeric vector required probabilities. Default: c(0.5, 0.95, 0.2, 0.8).","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/coerce_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce Dates — coerce_date","title":"Coerce Dates — coerce_date","text":"Provides consistent coercion inputs IDate error handling","code":""},{"path":"package.epinowcast.org/dev/reference/coerce_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce Dates — coerce_date","text":"","code":"coerce_date(dates)"},{"path":"package.epinowcast.org/dev/reference/coerce_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce Dates — coerce_date","text":"dates vector-like input, function attempts coerce via data.table::.IDate().","code":""},{"path":"package.epinowcast.org/dev/reference/coerce_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce Dates — coerce_date","text":"IDate vector.","code":""},{"path":"package.epinowcast.org/dev/reference/coerce_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce Dates — coerce_date","text":"elements dates coerced, function result error, indicating indices coerced IDate. Internal methods epinowcast assume dates represented IDate.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/coerce_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce Dates — coerce_date","text":"","code":"# works coerce_date(c(\"2020-05-28\", \"2020-05-29\")) #> [1] \"2020-05-28\" \"2020-05-29\" # does not, indicates index 2 is problem tryCatch(   coerce_date(c(\"2020-05-28\", \"2020-o5-29\")),   error = function(e) {     print(e)   } ) #> <simpleError in coerce_date(c(\"2020-05-28\", \"2020-o5-29\")): Failed to parse with `as.IDate`: {2020-o5-29} (indices {2}).>"},{"path":"package.epinowcast.org/dev/reference/construct_re.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs random effect terms — construct_re","title":"Constructs random effect terms — construct_re","text":"Constructs random effect terms","code":""},{"path":"package.epinowcast.org/dev/reference/construct_re.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs random effect terms — construct_re","text":"","code":"construct_re(re, data)"},{"path":"package.epinowcast.org/dev/reference/construct_re.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs random effect terms — construct_re","text":"re random effect defined using re() takes random effects specified model formula using lme4 syntax. data data.frame observations used define random effects. Must contain variables specified re() term.","code":""},{"path":"package.epinowcast.org/dev/reference/construct_re.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs random effect terms — construct_re","text":"list containing transformed data (\"data\"), fixed effects terms (\"terms\") data.frame specifying random effect structure terms (effects). Note specified random effect factor converted one.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/construct_re.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs random effect terms — construct_re","text":"","code":"# Simple examples form <- epinowcast:::parse_formula(~ 1 + (1 | day_of_week)) data <- enw_example(\"prepr\")$metareference[[1]] random_effect <- re(form$random[[1]]) epinowcast:::construct_re(random_effect, data) #> $data #>           date .group location age_group delay day_of_week day week month #>  1: 2021-07-13      1       DE       00+     0     Tuesday   0    0     0 #>  2: 2021-07-14      1       DE       00+     0   Wednesday   1    0     0 #>  3: 2021-07-15      1       DE       00+     0    Thursday   2    0     0 #>  4: 2021-07-16      1       DE       00+     0      Friday   3    0     0 #>  5: 2021-07-17      1       DE       00+     0    Saturday   4    0     0 #>  6: 2021-07-18      1       DE       00+     0      Sunday   5    0     0 #>  7: 2021-07-19      1       DE       00+     0      Monday   6    0     0 #>  8: 2021-07-20      1       DE       00+     0     Tuesday   7    1     0 #>  9: 2021-07-21      1       DE       00+     0   Wednesday   8    1     0 #> 10: 2021-07-22      1       DE       00+     0    Thursday   9    1     0 #> 11: 2021-07-23      1       DE       00+     0      Friday  10    1     0 #> 12: 2021-07-24      1       DE       00+     0    Saturday  11    1     0 #> 13: 2021-07-25      1       DE       00+     0      Sunday  12    1     0 #> 14: 2021-07-26      1       DE       00+     0      Monday  13    1     0 #> 15: 2021-07-27      1       DE       00+     0     Tuesday  14    2     0 #> 16: 2021-07-28      1       DE       00+     0   Wednesday  15    2     0 #> 17: 2021-07-29      1       DE       00+     0    Thursday  16    2     0 #> 18: 2021-07-30      1       DE       00+     0      Friday  17    2     0 #> 19: 2021-07-31      1       DE       00+     0    Saturday  18    2     0 #> 20: 2021-08-01      1       DE       00+     0      Sunday  19    2     1 #> 21: 2021-08-02      1       DE       00+     0      Monday  20    2     1 #> 22: 2021-08-03      1       DE       00+     0     Tuesday  21    3     1 #> 23: 2021-08-04      1       DE       00+     0   Wednesday  22    3     1 #> 24: 2021-08-05      1       DE       00+     0    Thursday  23    3     1 #> 25: 2021-08-06      1       DE       00+     0      Friday  24    3     1 #> 26: 2021-08-07      1       DE       00+     0    Saturday  25    3     1 #> 27: 2021-08-08      1       DE       00+     0      Sunday  26    3     1 #> 28: 2021-08-09      1       DE       00+     0      Monday  27    3     1 #> 29: 2021-08-10      1       DE       00+     0     Tuesday  28    4     1 #> 30: 2021-08-11      1       DE       00+     0   Wednesday  29    4     1 #> 31: 2021-08-12      1       DE       00+     0    Thursday  30    4     1 #> 32: 2021-08-13      1       DE       00+     0      Friday  31    4     1 #> 33: 2021-08-14      1       DE       00+     0    Saturday  32    4     1 #> 34: 2021-08-15      1       DE       00+     0      Sunday  33    4     1 #> 35: 2021-08-16      1       DE       00+     0      Monday  34    4     1 #> 36: 2021-08-17      1       DE       00+     0     Tuesday  35    5     1 #> 37: 2021-08-18      1       DE       00+     0   Wednesday  36    5     1 #> 38: 2021-08-19      1       DE       00+     0    Thursday  37    5     1 #> 39: 2021-08-20      1       DE       00+     0      Friday  38    5     1 #> 40: 2021-08-21      1       DE       00+     0    Saturday  39    5     1 #> 41: 2021-08-22      1       DE       00+     0      Sunday  40    5     1 #>           date .group location age_group delay day_of_week day week month #>  #> $terms #> [1] \"day_of_week\" #>  #> $effects #>                 effects fixed day_of_week #> 1:    day_of_weekFriday     0           1 #> 2:    day_of_weekMonday     0           1 #> 3:  day_of_weekSaturday     0           1 #> 4:    day_of_weekSunday     0           1 #> 5:  day_of_weekThursday     0           1 #> 6:   day_of_weekTuesday     0           1 #> 7: day_of_weekWednesday     0           1 #>   # A more complex example form <- epinowcast:::parse_formula(   ~ 1 + disp + (1 + gear | cyl) + (0 + wt | am) ) random_effect <- re(form$random[[1]]) epinowcast:::construct_re(random_effect, mtcars) #> $data #>      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #>  1: 21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #>  2: 21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #>  3: 22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #>  4: 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #>  5: 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #>  6: 18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #>  7: 14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #>  8: 24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #>  9: 22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> 10: 19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> 11: 17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> 12: 16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> 13: 17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> 14: 15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> 15: 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> 16: 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> 17: 14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> 18: 32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> 19: 30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> 20: 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> 21: 21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> 22: 15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> 23: 15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> 24: 13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> 25: 19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> 26: 27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> 27: 26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> 28: 30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> 29: 15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> 30: 19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> 31: 15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> 32: 21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2 #>      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #>  #> $terms #> [1] \"cyl\"      \"gear:cyl\" #>  #> $effects #>      effects fixed cyl gear__cyl #> 1:      cyl4     0   1         0 #> 2:      cyl6     0   1         0 #> 3:      cyl8     0   1         0 #> 4: cyl4:gear     0   0         1 #> 5: cyl6:gear     0   0         1 #> 6: cyl8:gear     0   0         1 #>   random_effect2 <- re(form$random[[2]]) epinowcast:::construct_re(random_effect2, mtcars) #> $data #>      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #>  1: 21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #>  2: 21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #>  3: 22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #>  4: 21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #>  5: 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #>  6: 18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #>  7: 14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #>  8: 24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #>  9: 22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> 10: 19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> 11: 17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> 12: 16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> 13: 17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> 14: 15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> 15: 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> 16: 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> 17: 14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> 18: 32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> 19: 30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> 20: 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> 21: 21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> 22: 15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> 23: 15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> 24: 13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> 25: 19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> 26: 27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> 27: 26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> 28: 30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> 29: 15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> 30: 19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> 31: 15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> 32: 21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2 #>      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #>  #> $terms #> [1] \"wt:am\" #>  #> $effects #>    effects fixed wt__am #> 1:  wt:am0     0      1 #> 2:  wt:am1     0      1 #>"},{"path":"package.epinowcast.org/dev/reference/construct_rw.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs random walk terms — construct_rw","title":"Constructs random walk terms — construct_rw","text":"function takes random walks defined rw(), produces required additional variables (denoted using \"c\" prefix constructed using enw_add_cumulative_membership()), returns extended data.frame along new fixed effects random effect structure.","code":""},{"path":"package.epinowcast.org/dev/reference/construct_rw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs random walk terms — construct_rw","text":"","code":"construct_rw(rw, data)"},{"path":"package.epinowcast.org/dev/reference/construct_rw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs random walk terms — construct_rw","text":"rw random walk term defined rw(). data data.frame observations used define random walk term. Must contain time grouping variables defined rw() term specified.","code":""},{"path":"package.epinowcast.org/dev/reference/construct_rw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs random walk terms — construct_rw","text":"list containing following: data: input data.frame addition new variables required specified random walk. added using enw_add_cumulative_membership(). -terms: character vector new fixed effects terms add model formula. effects: data.frame describing random effect structure new effects.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/construct_rw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs random walk terms — construct_rw","text":"","code":"data <- enw_example(\"preproc\")$metareference[[1]]  epinowcast:::construct_rw(rw(week), data) #> $data #>           date .group location age_group delay day_of_week day week month #>  1: 2021-07-13      1       DE       00+     0     Tuesday   0    0     0 #>  2: 2021-07-14      1       DE       00+     0   Wednesday   1    0     0 #>  3: 2021-07-15      1       DE       00+     0    Thursday   2    0     0 #>  4: 2021-07-16      1       DE       00+     0      Friday   3    0     0 #>  5: 2021-07-17      1       DE       00+     0    Saturday   4    0     0 #>  6: 2021-07-18      1       DE       00+     0      Sunday   5    0     0 #>  7: 2021-07-19      1       DE       00+     0      Monday   6    0     0 #>  8: 2021-07-20      1       DE       00+     0     Tuesday   7    1     0 #>  9: 2021-07-21      1       DE       00+     0   Wednesday   8    1     0 #> 10: 2021-07-22      1       DE       00+     0    Thursday   9    1     0 #> 11: 2021-07-23      1       DE       00+     0      Friday  10    1     0 #> 12: 2021-07-24      1       DE       00+     0    Saturday  11    1     0 #> 13: 2021-07-25      1       DE       00+     0      Sunday  12    1     0 #> 14: 2021-07-26      1       DE       00+     0      Monday  13    1     0 #> 15: 2021-07-27      1       DE       00+     0     Tuesday  14    2     0 #> 16: 2021-07-28      1       DE       00+     0   Wednesday  15    2     0 #> 17: 2021-07-29      1       DE       00+     0    Thursday  16    2     0 #> 18: 2021-07-30      1       DE       00+     0      Friday  17    2     0 #> 19: 2021-07-31      1       DE       00+     0    Saturday  18    2     0 #> 20: 2021-08-01      1       DE       00+     0      Sunday  19    2     1 #> 21: 2021-08-02      1       DE       00+     0      Monday  20    2     1 #> 22: 2021-08-03      1       DE       00+     0     Tuesday  21    3     1 #> 23: 2021-08-04      1       DE       00+     0   Wednesday  22    3     1 #> 24: 2021-08-05      1       DE       00+     0    Thursday  23    3     1 #> 25: 2021-08-06      1       DE       00+     0      Friday  24    3     1 #> 26: 2021-08-07      1       DE       00+     0    Saturday  25    3     1 #> 27: 2021-08-08      1       DE       00+     0      Sunday  26    3     1 #> 28: 2021-08-09      1       DE       00+     0      Monday  27    3     1 #> 29: 2021-08-10      1       DE       00+     0     Tuesday  28    4     1 #> 30: 2021-08-11      1       DE       00+     0   Wednesday  29    4     1 #> 31: 2021-08-12      1       DE       00+     0    Thursday  30    4     1 #> 32: 2021-08-13      1       DE       00+     0      Friday  31    4     1 #> 33: 2021-08-14      1       DE       00+     0    Saturday  32    4     1 #> 34: 2021-08-15      1       DE       00+     0      Sunday  33    4     1 #> 35: 2021-08-16      1       DE       00+     0      Monday  34    4     1 #> 36: 2021-08-17      1       DE       00+     0     Tuesday  35    5     1 #> 37: 2021-08-18      1       DE       00+     0   Wednesday  36    5     1 #> 38: 2021-08-19      1       DE       00+     0    Thursday  37    5     1 #> 39: 2021-08-20      1       DE       00+     0      Friday  38    5     1 #> 40: 2021-08-21      1       DE       00+     0    Saturday  39    5     1 #> 41: 2021-08-22      1       DE       00+     0      Sunday  40    5     1 #>           date .group location age_group delay day_of_week day week month #>     cweek1 cweek2 cweek3 cweek4 cweek5 #>  1:      0      0      0      0      0 #>  2:      0      0      0      0      0 #>  3:      0      0      0      0      0 #>  4:      0      0      0      0      0 #>  5:      0      0      0      0      0 #>  6:      0      0      0      0      0 #>  7:      0      0      0      0      0 #>  8:      1      0      0      0      0 #>  9:      1      0      0      0      0 #> 10:      1      0      0      0      0 #> 11:      1      0      0      0      0 #> 12:      1      0      0      0      0 #> 13:      1      0      0      0      0 #> 14:      1      0      0      0      0 #> 15:      1      1      0      0      0 #> 16:      1      1      0      0      0 #> 17:      1      1      0      0      0 #> 18:      1      1      0      0      0 #> 19:      1      1      0      0      0 #> 20:      1      1      0      0      0 #> 21:      1      1      0      0      0 #> 22:      1      1      1      0      0 #> 23:      1      1      1      0      0 #> 24:      1      1      1      0      0 #> 25:      1      1      1      0      0 #> 26:      1      1      1      0      0 #> 27:      1      1      1      0      0 #> 28:      1      1      1      0      0 #> 29:      1      1      1      1      0 #> 30:      1      1      1      1      0 #> 31:      1      1      1      1      0 #> 32:      1      1      1      1      0 #> 33:      1      1      1      1      0 #> 34:      1      1      1      1      0 #> 35:      1      1      1      1      0 #> 36:      1      1      1      1      1 #> 37:      1      1      1      1      1 #> 38:      1      1      1      1      1 #> 39:      1      1      1      1      1 #> 40:      1      1      1      1      1 #> 41:      1      1      1      1      1 #>     cweek1 cweek2 cweek3 cweek4 cweek5 #>  #> $terms #> [1] \"cweek1\" \"cweek2\" \"cweek3\" \"cweek4\" \"cweek5\" #>  #> $effects #>    effects fixed week #> 1:  cweek1     0    1 #> 2:  cweek2     0    1 #> 3:  cweek3     0    1 #> 4:  cweek4     0    1 #> 5:  cweek5     0    1 #>   epinowcast:::construct_rw(rw(week, day_of_week), data) #> $data #>           date .group location age_group delay day_of_week day week month #>  1: 2021-07-13      1       DE       00+     0     Tuesday   0    0     0 #>  2: 2021-07-14      1       DE       00+     0   Wednesday   1    0     0 #>  3: 2021-07-15      1       DE       00+     0    Thursday   2    0     0 #>  4: 2021-07-16      1       DE       00+     0      Friday   3    0     0 #>  5: 2021-07-17      1       DE       00+     0    Saturday   4    0     0 #>  6: 2021-07-18      1       DE       00+     0      Sunday   5    0     0 #>  7: 2021-07-19      1       DE       00+     0      Monday   6    0     0 #>  8: 2021-07-20      1       DE       00+     0     Tuesday   7    1     0 #>  9: 2021-07-21      1       DE       00+     0   Wednesday   8    1     0 #> 10: 2021-07-22      1       DE       00+     0    Thursday   9    1     0 #> 11: 2021-07-23      1       DE       00+     0      Friday  10    1     0 #> 12: 2021-07-24      1       DE       00+     0    Saturday  11    1     0 #> 13: 2021-07-25      1       DE       00+     0      Sunday  12    1     0 #> 14: 2021-07-26      1       DE       00+     0      Monday  13    1     0 #> 15: 2021-07-27      1       DE       00+     0     Tuesday  14    2     0 #> 16: 2021-07-28      1       DE       00+     0   Wednesday  15    2     0 #> 17: 2021-07-29      1       DE       00+     0    Thursday  16    2     0 #> 18: 2021-07-30      1       DE       00+     0      Friday  17    2     0 #> 19: 2021-07-31      1       DE       00+     0    Saturday  18    2     0 #> 20: 2021-08-01      1       DE       00+     0      Sunday  19    2     1 #> 21: 2021-08-02      1       DE       00+     0      Monday  20    2     1 #> 22: 2021-08-03      1       DE       00+     0     Tuesday  21    3     1 #> 23: 2021-08-04      1       DE       00+     0   Wednesday  22    3     1 #> 24: 2021-08-05      1       DE       00+     0    Thursday  23    3     1 #> 25: 2021-08-06      1       DE       00+     0      Friday  24    3     1 #> 26: 2021-08-07      1       DE       00+     0    Saturday  25    3     1 #> 27: 2021-08-08      1       DE       00+     0      Sunday  26    3     1 #> 28: 2021-08-09      1       DE       00+     0      Monday  27    3     1 #> 29: 2021-08-10      1       DE       00+     0     Tuesday  28    4     1 #> 30: 2021-08-11      1       DE       00+     0   Wednesday  29    4     1 #> 31: 2021-08-12      1       DE       00+     0    Thursday  30    4     1 #> 32: 2021-08-13      1       DE       00+     0      Friday  31    4     1 #> 33: 2021-08-14      1       DE       00+     0    Saturday  32    4     1 #> 34: 2021-08-15      1       DE       00+     0      Sunday  33    4     1 #> 35: 2021-08-16      1       DE       00+     0      Monday  34    4     1 #> 36: 2021-08-17      1       DE       00+     0     Tuesday  35    5     1 #> 37: 2021-08-18      1       DE       00+     0   Wednesday  36    5     1 #> 38: 2021-08-19      1       DE       00+     0    Thursday  37    5     1 #> 39: 2021-08-20      1       DE       00+     0      Friday  38    5     1 #> 40: 2021-08-21      1       DE       00+     0    Saturday  39    5     1 #> 41: 2021-08-22      1       DE       00+     0      Sunday  40    5     1 #>           date .group location age_group delay day_of_week day week month #>     cweek1 cweek2 cweek3 cweek4 cweek5 #>  1:      0      0      0      0      0 #>  2:      0      0      0      0      0 #>  3:      0      0      0      0      0 #>  4:      0      0      0      0      0 #>  5:      0      0      0      0      0 #>  6:      0      0      0      0      0 #>  7:      0      0      0      0      0 #>  8:      1      0      0      0      0 #>  9:      1      0      0      0      0 #> 10:      1      0      0      0      0 #> 11:      1      0      0      0      0 #> 12:      1      0      0      0      0 #> 13:      1      0      0      0      0 #> 14:      1      0      0      0      0 #> 15:      1      1      0      0      0 #> 16:      1      1      0      0      0 #> 17:      1      1      0      0      0 #> 18:      1      1      0      0      0 #> 19:      1      1      0      0      0 #> 20:      1      1      0      0      0 #> 21:      1      1      0      0      0 #> 22:      1      1      1      0      0 #> 23:      1      1      1      0      0 #> 24:      1      1      1      0      0 #> 25:      1      1      1      0      0 #> 26:      1      1      1      0      0 #> 27:      1      1      1      0      0 #> 28:      1      1      1      0      0 #> 29:      1      1      1      1      0 #> 30:      1      1      1      1      0 #> 31:      1      1      1      1      0 #> 32:      1      1      1      1      0 #> 33:      1      1      1      1      0 #> 34:      1      1      1      1      0 #> 35:      1      1      1      1      0 #> 36:      1      1      1      1      1 #> 37:      1      1      1      1      1 #> 38:      1      1      1      1      1 #> 39:      1      1      1      1      1 #> 40:      1      1      1      1      1 #> 41:      1      1      1      1      1 #>     cweek1 cweek2 cweek3 cweek4 cweek5 #>  #> $terms #> [1] \"day_of_week:cweek1\" \"day_of_week:cweek2\" \"day_of_week:cweek3\" #> [4] \"day_of_week:cweek4\" \"day_of_week:cweek5\" #>  #> $effects #>                         effects fixed day_of_weekTuesday__week #>  1:    day_of_weekFriday:cweek1     0                        0 #>  2:    day_of_weekMonday:cweek1     0                        0 #>  3:  day_of_weekSaturday:cweek1     0                        0 #>  4:    day_of_weekSunday:cweek1     0                        0 #>  5:  day_of_weekThursday:cweek1     0                        0 #>  6:   day_of_weekTuesday:cweek1     0                        1 #>  7: day_of_weekWednesday:cweek1     0                        0 #>  8:    day_of_weekFriday:cweek2     0                        0 #>  9:    day_of_weekMonday:cweek2     0                        0 #> 10:  day_of_weekSaturday:cweek2     0                        0 #> 11:    day_of_weekSunday:cweek2     0                        0 #> 12:  day_of_weekThursday:cweek2     0                        0 #> 13:   day_of_weekTuesday:cweek2     0                        1 #> 14: day_of_weekWednesday:cweek2     0                        0 #> 15:    day_of_weekFriday:cweek3     0                        0 #> 16:    day_of_weekMonday:cweek3     0                        0 #> 17:  day_of_weekSaturday:cweek3     0                        0 #> 18:    day_of_weekSunday:cweek3     0                        0 #> 19:  day_of_weekThursday:cweek3     0                        0 #> 20:   day_of_weekTuesday:cweek3     0                        1 #> 21: day_of_weekWednesday:cweek3     0                        0 #> 22:    day_of_weekFriday:cweek4     0                        0 #> 23:    day_of_weekMonday:cweek4     0                        0 #> 24:  day_of_weekSaturday:cweek4     0                        0 #> 25:    day_of_weekSunday:cweek4     0                        0 #> 26:  day_of_weekThursday:cweek4     0                        0 #> 27:   day_of_weekTuesday:cweek4     0                        1 #> 28: day_of_weekWednesday:cweek4     0                        0 #> 29:    day_of_weekFriday:cweek5     0                        0 #> 30:    day_of_weekMonday:cweek5     0                        0 #> 31:  day_of_weekSaturday:cweek5     0                        0 #> 32:    day_of_weekSunday:cweek5     0                        0 #> 33:  day_of_weekThursday:cweek5     0                        0 #> 34:   day_of_weekTuesday:cweek5     0                        1 #> 35: day_of_weekWednesday:cweek5     0                        0 #>                         effects fixed day_of_weekTuesday__week #>     day_of_weekWednesday__week day_of_weekThursday__week #>  1:                          0                         0 #>  2:                          0                         0 #>  3:                          0                         0 #>  4:                          0                         0 #>  5:                          0                         1 #>  6:                          0                         0 #>  7:                          1                         0 #>  8:                          0                         0 #>  9:                          0                         0 #> 10:                          0                         0 #> 11:                          0                         0 #> 12:                          0                         1 #> 13:                          0                         0 #> 14:                          1                         0 #> 15:                          0                         0 #> 16:                          0                         0 #> 17:                          0                         0 #> 18:                          0                         0 #> 19:                          0                         1 #> 20:                          0                         0 #> 21:                          1                         0 #> 22:                          0                         0 #> 23:                          0                         0 #> 24:                          0                         0 #> 25:                          0                         0 #> 26:                          0                         1 #> 27:                          0                         0 #> 28:                          1                         0 #> 29:                          0                         0 #> 30:                          0                         0 #> 31:                          0                         0 #> 32:                          0                         0 #> 33:                          0                         1 #> 34:                          0                         0 #> 35:                          1                         0 #>     day_of_weekWednesday__week day_of_weekThursday__week #>     day_of_weekFriday__week day_of_weekSaturday__week day_of_weekSunday__week #>  1:                       1                         0                       0 #>  2:                       0                         0                       0 #>  3:                       0                         1                       0 #>  4:                       0                         0                       1 #>  5:                       0                         0                       0 #>  6:                       0                         0                       0 #>  7:                       0                         0                       0 #>  8:                       1                         0                       0 #>  9:                       0                         0                       0 #> 10:                       0                         1                       0 #> 11:                       0                         0                       1 #> 12:                       0                         0                       0 #> 13:                       0                         0                       0 #> 14:                       0                         0                       0 #> 15:                       1                         0                       0 #> 16:                       0                         0                       0 #> 17:                       0                         1                       0 #> 18:                       0                         0                       1 #> 19:                       0                         0                       0 #> 20:                       0                         0                       0 #> 21:                       0                         0                       0 #> 22:                       1                         0                       0 #> 23:                       0                         0                       0 #> 24:                       0                         1                       0 #> 25:                       0                         0                       1 #> 26:                       0                         0                       0 #> 27:                       0                         0                       0 #> 28:                       0                         0                       0 #> 29:                       1                         0                       0 #> 30:                       0                         0                       0 #> 31:                       0                         1                       0 #> 32:                       0                         0                       1 #> 33:                       0                         0                       0 #> 34:                       0                         0                       0 #> 35:                       0                         0                       0 #>     day_of_weekFriday__week day_of_weekSaturday__week day_of_weekSunday__week #>     day_of_weekMonday__week #>  1:                       0 #>  2:                       1 #>  3:                       0 #>  4:                       0 #>  5:                       0 #>  6:                       0 #>  7:                       0 #>  8:                       0 #>  9:                       1 #> 10:                       0 #> 11:                       0 #> 12:                       0 #> 13:                       0 #> 14:                       0 #> 15:                       0 #> 16:                       1 #> 17:                       0 #> 18:                       0 #> 19:                       0 #> 20:                       0 #> 21:                       0 #> 22:                       0 #> 23:                       1 #> 24:                       0 #> 25:                       0 #> 26:                       0 #> 27:                       0 #> 28:                       0 #> 29:                       0 #> 30:                       1 #> 31:                       0 #> 32:                       0 #> 33:                       0 #> 34:                       0 #> 35:                       0 #>     day_of_weekMonday__week #>"},{"path":"package.epinowcast.org/dev/reference/convert_cmdstan_to_rstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Cmdstan to Rstan — convert_cmdstan_to_rstan","title":"Convert Cmdstan to Rstan — convert_cmdstan_to_rstan","text":"Convert Cmdstan Rstan","code":""},{"path":"package.epinowcast.org/dev/reference/convert_cmdstan_to_rstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Cmdstan to Rstan — convert_cmdstan_to_rstan","text":"","code":"convert_cmdstan_to_rstan(functions)"},{"path":"package.epinowcast.org/dev/reference/convert_cmdstan_to_rstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Cmdstan to Rstan — convert_cmdstan_to_rstan","text":"functions character string stan functions produced using stan_fns_as_string().","code":""},{"path":"package.epinowcast.org/dev/reference/convert_cmdstan_to_rstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Cmdstan to Rstan — convert_cmdstan_to_rstan","text":"character string stan functions converted use rstan.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_add_cumulative_membership.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_cumulative_membership","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_cumulative_membership.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"","code":"enw_add_cumulative_membership(metaobs, feature)"},{"path":"package.epinowcast.org/dev/reference/enw_add_cumulative_membership.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"metaobs PARAM_DESCRIPTION feature PARAM_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_cumulative_membership.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_add_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_delay","title":"FUNCTION_TITLE — enw_add_delay","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_delay","text":"","code":"enw_add_delay(obs)"},{"path":"package.epinowcast.org/dev/reference/enw_add_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_delay","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date).","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_delay","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_add_latest_obs_to_nowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_latest_obs_to_nowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"","code":"enw_add_latest_obs_to_nowcast(nowcast, obs)"},{"path":"package.epinowcast.org/dev/reference/enw_add_latest_obs_to_nowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"nowcast PARAM_DESCRIPTION obs PARAM_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_latest_obs_to_nowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_add_max_reported.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_max_reported","title":"FUNCTION_TITLE — enw_add_max_reported","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_max_reported.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_max_reported","text":"","code":"enw_add_max_reported(obs)"},{"path":"package.epinowcast.org/dev/reference/enw_add_max_reported.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_max_reported","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date).","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_max_reported.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_max_reported","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_add_metaobs_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Add common metadata variables — enw_add_metaobs_features","title":"Add common metadata variables — enw_add_metaobs_features","text":"already present, annotates time series data metadata commonly used models: day week, days, weeks, months since start time series.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_metaobs_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add common metadata variables — enw_add_metaobs_features","text":"","code":"enw_add_metaobs_features(   metaobs,   holidays = c(),   holidays_to = \"Sunday\",   datecol = \"date\" )"},{"path":"package.epinowcast.org/dev/reference/enw_add_metaobs_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add common metadata variables — enw_add_metaobs_features","text":"metaobs Raw data, coercible via data.table::.data.table(). Coerced object must Dates column corresponding datecol name. holidays (potentially empty) vector dates (input coercible ; see coerce_date()). day_of_week column set holidays_to dates. holidays_to character string assign holidays, holidays argument non-empty. Replaces day_of_week column value datecol column metaobs corresponding pertinent dates.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_metaobs_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add common metadata variables — enw_add_metaobs_features","text":"copy metaobs input, additional columns: day_of_week, factor values output weekdays() possibly holiday_to distinct weekdays values day, numeric, 0 based start time series week, numeric, 0 based start time series month, numeric, 0 based start time series","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_metaobs_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add common metadata variables — enw_add_metaobs_features","text":"Effects models often need include covariates time-based features, day week (e.g. reflect different care-seeking /reporting behaviour). function called within enw_preprocess_data() systematically annotate metaobs commonly used metadata, already present. However, can also used directly data.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_add_metaobs_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add common metadata variables — enw_add_metaobs_features","text":"","code":"# make some example date nat_germany_hosp <- subset(   germany_covid19_hosp,   location == \"DE\" & age_group == \"80+\" )[1:40]  basemeta <- enw_add_metaobs_features(   nat_germany_hosp,   datecol = \"report_date\" ) basemeta #>     reference_date location age_group confirm report_date day_of_week day week #>  1:     2021-04-06       DE       80+      35  2021-04-06     Tuesday   0    0 #>  2:     2021-04-07       DE       80+      81  2021-04-07   Wednesday   1    0 #>  3:     2021-04-08       DE       80+      85  2021-04-08    Thursday   2    0 #>  4:     2021-04-09       DE       80+      62  2021-04-09      Friday   3    0 #>  5:     2021-04-10       DE       80+      45  2021-04-10    Saturday   4    0 #>  6:     2021-04-11       DE       80+      23  2021-04-11      Sunday   5    0 #>  7:     2021-04-12       DE       80+      33  2021-04-12      Monday   6    0 #>  8:     2021-04-13       DE       80+      66  2021-04-13     Tuesday   7    1 #>  9:     2021-04-14       DE       80+      50  2021-04-14   Wednesday   8    1 #> 10:     2021-04-15       DE       80+      66  2021-04-15    Thursday   9    1 #> 11:     2021-04-16       DE       80+      67  2021-04-16      Friday  10    1 #> 12:     2021-04-17       DE       80+      50  2021-04-17    Saturday  11    1 #> 13:     2021-04-18       DE       80+      33  2021-04-18      Sunday  12    1 #> 14:     2021-04-19       DE       80+      25  2021-04-19      Monday  13    1 #> 15:     2021-04-20       DE       80+      53  2021-04-20     Tuesday  14    2 #> 16:     2021-04-21       DE       80+      68  2021-04-21   Wednesday  15    2 #> 17:     2021-04-22       DE       80+      56  2021-04-22    Thursday  16    2 #> 18:     2021-04-23       DE       80+      61  2021-04-23      Friday  17    2 #> 19:     2021-04-24       DE       80+      45  2021-04-24    Saturday  18    2 #> 20:     2021-04-25       DE       80+      35  2021-04-25      Sunday  19    2 #> 21:     2021-04-26       DE       80+      17  2021-04-26      Monday  20    2 #> 22:     2021-04-27       DE       80+      50  2021-04-27     Tuesday  21    3 #> 23:     2021-04-28       DE       80+      56  2021-04-28   Wednesday  22    3 #> 24:     2021-04-29       DE       80+      44  2021-04-29    Thursday  23    3 #> 25:     2021-04-30       DE       80+      54  2021-04-30      Friday  24    3 #> 26:     2021-05-01       DE       80+      48  2021-05-01    Saturday  25    3 #> 27:     2021-05-02       DE       80+      27  2021-05-02      Sunday  26    3 #> 28:     2021-05-03       DE       80+      26  2021-05-03      Monday  27    3 #> 29:     2021-05-04       DE       80+      55  2021-05-04     Tuesday  28    4 #> 30:     2021-05-05       DE       80+      59  2021-05-05   Wednesday  29    4 #> 31:     2021-05-06       DE       80+      58  2021-05-06    Thursday  30    4 #> 32:     2021-05-07       DE       80+      48  2021-05-07      Friday  31    4 #> 33:     2021-05-08       DE       80+      34  2021-05-08    Saturday  32    4 #> 34:     2021-05-09       DE       80+      10  2021-05-09      Sunday  33    4 #> 35:     2021-05-10       DE       80+      24  2021-05-10      Monday  34    4 #> 36:     2021-05-11       DE       80+      49  2021-05-11     Tuesday  35    5 #> 37:     2021-05-12       DE       80+      42  2021-05-12   Wednesday  36    5 #> 38:     2021-05-13       DE       80+      39  2021-05-13    Thursday  37    5 #> 39:     2021-05-14       DE       80+      15  2021-05-14      Friday  38    5 #> 40:     2021-05-15       DE       80+      23  2021-05-15    Saturday  39    5 #>     reference_date location age_group confirm report_date day_of_week day week #>     month #>  1:     0 #>  2:     0 #>  3:     0 #>  4:     0 #>  5:     0 #>  6:     0 #>  7:     0 #>  8:     0 #>  9:     0 #> 10:     0 #> 11:     0 #> 12:     0 #> 13:     0 #> 14:     0 #> 15:     0 #> 16:     0 #> 17:     0 #> 18:     0 #> 19:     0 #> 20:     0 #> 21:     0 #> 22:     0 #> 23:     0 #> 24:     0 #> 25:     0 #> 26:     1 #> 27:     1 #> 28:     1 #> 29:     1 #> 30:     1 #> 31:     1 #> 32:     1 #> 33:     1 #> 34:     1 #> 35:     1 #> 36:     1 #> 37:     1 #> 38:     1 #> 39:     1 #> 40:     1 #>     month  # with holidays - n.b.: holidays not found are silently ignored holidaymeta <- enw_add_metaobs_features(   nat_germany_hosp,   datecol = \"report_date\",   holidays = c(     \"2021-04-04\", \"2021-04-05\",     \"2021-05-01\", \"2021-05-13\",     \"2021-05-24\"   ),   holidays_to = \"Holiday\" ) holidaymeta #>     reference_date location age_group confirm report_date day_of_week day week #>  1:     2021-04-06       DE       80+      35  2021-04-06     Tuesday   0    0 #>  2:     2021-04-07       DE       80+      81  2021-04-07   Wednesday   1    0 #>  3:     2021-04-08       DE       80+      85  2021-04-08    Thursday   2    0 #>  4:     2021-04-09       DE       80+      62  2021-04-09      Friday   3    0 #>  5:     2021-04-10       DE       80+      45  2021-04-10    Saturday   4    0 #>  6:     2021-04-11       DE       80+      23  2021-04-11      Sunday   5    0 #>  7:     2021-04-12       DE       80+      33  2021-04-12      Monday   6    0 #>  8:     2021-04-13       DE       80+      66  2021-04-13     Tuesday   7    1 #>  9:     2021-04-14       DE       80+      50  2021-04-14   Wednesday   8    1 #> 10:     2021-04-15       DE       80+      66  2021-04-15    Thursday   9    1 #> 11:     2021-04-16       DE       80+      67  2021-04-16      Friday  10    1 #> 12:     2021-04-17       DE       80+      50  2021-04-17    Saturday  11    1 #> 13:     2021-04-18       DE       80+      33  2021-04-18      Sunday  12    1 #> 14:     2021-04-19       DE       80+      25  2021-04-19      Monday  13    1 #> 15:     2021-04-20       DE       80+      53  2021-04-20     Tuesday  14    2 #> 16:     2021-04-21       DE       80+      68  2021-04-21   Wednesday  15    2 #> 17:     2021-04-22       DE       80+      56  2021-04-22    Thursday  16    2 #> 18:     2021-04-23       DE       80+      61  2021-04-23      Friday  17    2 #> 19:     2021-04-24       DE       80+      45  2021-04-24    Saturday  18    2 #> 20:     2021-04-25       DE       80+      35  2021-04-25      Sunday  19    2 #> 21:     2021-04-26       DE       80+      17  2021-04-26      Monday  20    2 #> 22:     2021-04-27       DE       80+      50  2021-04-27     Tuesday  21    3 #> 23:     2021-04-28       DE       80+      56  2021-04-28   Wednesday  22    3 #> 24:     2021-04-29       DE       80+      44  2021-04-29    Thursday  23    3 #> 25:     2021-04-30       DE       80+      54  2021-04-30      Friday  24    3 #> 26:     2021-05-01       DE       80+      48  2021-05-01     Holiday  25    3 #> 27:     2021-05-02       DE       80+      27  2021-05-02      Sunday  26    3 #> 28:     2021-05-03       DE       80+      26  2021-05-03      Monday  27    3 #> 29:     2021-05-04       DE       80+      55  2021-05-04     Tuesday  28    4 #> 30:     2021-05-05       DE       80+      59  2021-05-05   Wednesday  29    4 #> 31:     2021-05-06       DE       80+      58  2021-05-06    Thursday  30    4 #> 32:     2021-05-07       DE       80+      48  2021-05-07      Friday  31    4 #> 33:     2021-05-08       DE       80+      34  2021-05-08    Saturday  32    4 #> 34:     2021-05-09       DE       80+      10  2021-05-09      Sunday  33    4 #> 35:     2021-05-10       DE       80+      24  2021-05-10      Monday  34    4 #> 36:     2021-05-11       DE       80+      49  2021-05-11     Tuesday  35    5 #> 37:     2021-05-12       DE       80+      42  2021-05-12   Wednesday  36    5 #> 38:     2021-05-13       DE       80+      39  2021-05-13     Holiday  37    5 #> 39:     2021-05-14       DE       80+      15  2021-05-14      Friday  38    5 #> 40:     2021-05-15       DE       80+      23  2021-05-15    Saturday  39    5 #>     reference_date location age_group confirm report_date day_of_week day week #>     month #>  1:     0 #>  2:     0 #>  3:     0 #>  4:     0 #>  5:     0 #>  6:     0 #>  7:     0 #>  8:     0 #>  9:     0 #> 10:     0 #> 11:     0 #> 12:     0 #> 13:     0 #> 14:     0 #> 15:     0 #> 16:     0 #> 17:     0 #> 18:     0 #> 19:     0 #> 20:     0 #> 21:     0 #> 22:     0 #> 23:     0 #> 24:     0 #> 25:     0 #> 26:     1 #> 27:     1 #> 28:     1 #> 29:     1 #> 30:     1 #> 31:     1 #> 32:     1 #> 33:     1 #> 34:     1 #> 35:     1 #> 36:     1 #> 37:     1 #> 38:     1 #> 39:     1 #> 40:     1 #>     month subset(holidaymeta, day_of_week == \"Holiday\") #>    reference_date location age_group confirm report_date day_of_week day week #> 1:     2021-05-01       DE       80+      48  2021-05-01     Holiday  25    3 #> 2:     2021-05-13       DE       80+      39  2021-05-13     Holiday  37    5 #>    month #> 1:     1 #> 2:     1"},{"path":"package.epinowcast.org/dev/reference/enw_add_pooling_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_pooling_effect","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_pooling_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"","code":"enw_add_pooling_effect(   effects,   string,   var_name = \"sd\",   finder_fn = startsWith )"},{"path":"package.epinowcast.org/dev/reference/enw_add_pooling_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"effects PARAM_DESCRIPTION string PARAM_DESCRIPTION var_name PARAM_DESCRIPTION, Default: 'sd' finder_fn PARAM_DESCRIPTION, Default: startsWith","code":""},{"path":"package.epinowcast.org/dev/reference/enw_add_pooling_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_assign_group.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_assign_group","title":"FUNCTION_TITLE — enw_assign_group","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_assign_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_assign_group","text":"","code":"enw_assign_group(obs, by = c())"},{"path":"package.epinowcast.org/dev/reference/enw_assign_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_assign_group","text":"obs PARAM_DESCRIPTION PARAM_DESCRIPTION, Default: c()","code":""},{"path":"package.epinowcast.org/dev/reference/enw_assign_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_assign_group","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_complete_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete missing reference and report dates — enw_complete_dates","title":"Complete missing reference and report dates — enw_complete_dates","text":"Ensures reference report dates present groups based maximum minimum dates found data. function may use users preprocessing data. general features may consider using grouping variables covariates need included variable.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_complete_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete missing reference and report dates — enw_complete_dates","text":"","code":"enw_complete_dates(obs, by = c(), max_delay, missing_reference = TRUE)"},{"path":"package.epinowcast.org/dev/reference/enw_complete_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete missing reference and report dates — enw_complete_dates","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date). character vector describing stratification observations. defaults grouping. used modelling multiple time series order identify downstream modelling max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully. Note zero indexed includes reference date max_delay - 1 days. missing_reference entries cases missing reference date completed well?, Default: TRUE","code":""},{"path":"package.epinowcast.org/dev/reference/enw_complete_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete missing reference and report dates — enw_complete_dates","text":"data.table completed entries combinations reference dates, groups possible report dates.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_complete_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete missing reference and report dates — enw_complete_dates","text":"","code":"obs <- data.frame(   report_date = c(\"2021-10-01\", \"2021-10-03\"), reference_date = \"2021-10-01\",   confirm = 1 ) enw_complete_dates(obs) #>    report_date reference_date confirm #> 1:  2021-10-01           <NA>       0 #> 2:  2021-10-02           <NA>       0 #> 3:  2021-10-03           <NA>       0 #> 4:  2021-10-01     2021-10-01       1 #> 5:  2021-10-02     2021-10-01       1 #> 6:  2021-10-03     2021-10-01       1 #> 7:  2021-10-02     2021-10-02       0 #> 8:  2021-10-03     2021-10-02       0 #> 9:  2021-10-03     2021-10-03       0"},{"path":"package.epinowcast.org/dev/reference/enw_construct_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct preprocessed data — enw_construct_data","title":"Construct preprocessed data — enw_construct_data","text":"function used internally enw_preprocess_data() combine various pieces processed observed data single object. exposed user order allow modular data preprocessing though currently recommended. See documentation code enw_preprocess_data() expected inputs.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_construct_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct preprocessed data — enw_construct_data","text":"","code":"enw_construct_data(   obs,   new_confirm,   latest,   missing_reference,   reporting_triangle,   metareport,   metareference,   metadelay,   by,   max_delay )"},{"path":"package.epinowcast.org/dev/reference/enw_construct_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct preprocessed data — enw_construct_data","text":"obs Observations addition empirical reporting proportions restricted specified maximum delay. new_confirm Incidence notifications reference report date. Empirical reporting distributions also added. latest latest available observations. missing_reference data frame reported observations missing reference date. reporting_triangle Incident observations report reference date standard reporting triangle matrix format. metareport Metadata report dates. metareference Metadata reference dates derived observations. metadelay Metadata reporting delays produced using enw_delay_metadata(). character vector describing stratification observations. defaults grouping. used modelling multiple time series order identify downstream modelling max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully. Note zero indexed includes reference date max_delay - 1 days.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_construct_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct preprocessed data — enw_construct_data","text":"data.table containing processed observations series nested data frames well variables containing metadata. : obs: (observations addition empirical reporting proportions restricted specified maximum delay). new_confirm: Incidence notifications reference report date. Empirical reporting distributions also added. latest: latest available observations. missing_reference: Observations missing reference dates. reporting_triangle: Incident observations report reference date standard reporting triangle matrix format. metareference: Metadata reference dates derived observations. metrareport: Metadata report dates. metadelay: Metadata reporting delays produced using enw_delay_metadata(). time: Numeric, number timepoints data. snapshots: Numeric, number available data snapshots use nowcasting. groups: Numeric, Number groups/strata supplied observations (set using ). max_delay: Numeric, maximum delay processed data max_date: maximum available report date.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_construct_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct preprocessed data — enw_construct_data","text":"","code":"pobs <- enw_example(\"preprocessed\") enw_construct_data(   obs = pobs$obs[[1]],   new_confirm = pobs$new_confirm[[1]],   latest = pobs$latest[[1]],   missing_reference = pobs$missing_reference[[1]],   reporting_triangle = pobs$reporting_triangle[[1]],   metareport = pobs$metareport[[1]],   metareference = pobs$metareference[[1]],   metadelay = enw_delay_metadata(max_delay = 20),   by = c(),   max_delay = pobs$max_delay[[1]] ) #>                    obs          new_confirm              latest #> 1: <data.table[671x9]> <data.table[630x11]> <data.table[41x10]> #>     missing_reference  reporting_triangle      metareference #> 1: <data.table[41x6]> <data.table[41x22]> <data.table[41x9]> #>             metareport          metadelay time snapshots by groups max_delay #> 1: <data.table[60x12]> <data.table[20x4]>   41        41         1        20 #>      max_date #> 1: 2021-08-22"},{"path":"package.epinowcast.org/dev/reference/enw_cumulative_to_incidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate incidence of new reports from cumulative reports — enw_cumulative_to_incidence","title":"Calculate incidence of new reports from cumulative reports — enw_cumulative_to_incidence","text":"Calculate incidence new reports cumulative reports","code":""},{"path":"package.epinowcast.org/dev/reference/enw_cumulative_to_incidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate incidence of new reports from cumulative reports — enw_cumulative_to_incidence","text":"","code":"enw_cumulative_to_incidence(obs, set_negatives_to_zero = TRUE, by = c())"},{"path":"package.epinowcast.org/dev/reference/enw_cumulative_to_incidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate incidence of new reports from cumulative reports — enw_cumulative_to_incidence","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date). set_negatives_to_zero Logical, defaults TRUE. negative counts (calculated incidence observations) set zero. Currently downstream modelling support negative counts setting must TRUE intending use epinowcast(). character vector describing stratification observations. defaults grouping. used modelling multiple time series order identify downstream modelling","code":""},{"path":"package.epinowcast.org/dev/reference/enw_cumulative_to_incidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate incidence of new reports from cumulative reports — enw_cumulative_to_incidence","text":"input data frame new variable new_confirm. max_confirm present data frame proportion reported day (prop_reported) also added.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_cumulative_to_incidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate incidence of new reports from cumulative reports — enw_cumulative_to_incidence","text":"","code":"# Default reconstruct incidence dt <- germany_covid19_hosp[location == \"DE\"][age_group == \"00+\"] enw_cumulative_to_incidence(dt) #>        reference_date location age_group confirm report_date new_confirm delay #>     1:     2021-04-06       DE       00+     149  2021-04-06         149     0 #>     2:     2021-04-06       DE       00+     289  2021-04-07         140     1 #>     3:     2021-04-06       DE       00+     350  2021-04-08          61     2 #>     4:     2021-04-06       DE       00+     402  2021-04-09          52     3 #>     5:     2021-04-06       DE       00+     438  2021-04-10          36     4 #>    ---                                                                         #> 12911:     2021-10-18       DE       00+     113  2021-10-19          70     1 #> 12912:     2021-10-18       DE       00+     142  2021-10-20          29     2 #> 12913:     2021-10-19       DE       00+     223  2021-10-19         223     0 #> 12914:     2021-10-19       DE       00+     387  2021-10-20         164     1 #> 12915:     2021-10-20       DE       00+     235  2021-10-20         235     0  # Make use of maximum reported to calculate empirical daily reporting dt <- enw_assign_group(dt) dt <- enw_add_max_reported(dt) enw_cumulative_to_incidence(dt) #>        reference_date .group max_confirm location age_group confirm report_date #>     1:     2021-04-06      1         708       DE       00+     149  2021-04-06 #>     2:     2021-04-06      1         708       DE       00+     289  2021-04-07 #>     3:     2021-04-06      1         708       DE       00+     350  2021-04-08 #>     4:     2021-04-06      1         708       DE       00+     402  2021-04-09 #>     5:     2021-04-06      1         708       DE       00+     438  2021-04-10 #>    ---                                                                          #> 12911:     2021-10-18      1         142       DE       00+     113  2021-10-19 #> 12912:     2021-10-18      1         142       DE       00+     142  2021-10-20 #> 12913:     2021-10-19      1         387       DE       00+     223  2021-10-19 #> 12914:     2021-10-19      1         387       DE       00+     387  2021-10-20 #> 12915:     2021-10-20      1         235       DE       00+     235  2021-10-20 #>        cum_prop_reported new_confirm delay prop_reported #>     1:         0.2104520         149     0    0.21045198 #>     2:         0.4081921         140     1    0.19774011 #>     3:         0.4943503          61     2    0.08615819 #>     4:         0.5677966          52     3    0.07344633 #>     5:         0.6186441          36     4    0.05084746 #>    ---                                                   #> 12911:         0.7957746          70     1    0.49295775 #> 12912:         1.0000000          29     2    0.20422535 #> 12913:         0.5762274         223     0    0.57622739 #> 12914:         1.0000000         164     1    0.42377261 #> 12915:         1.0000000         235     0    1.00000000"},{"path":"package.epinowcast.org/dev/reference/enw_dates_to_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_dates_to_factors","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_dates_to_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"","code":"enw_dates_to_factors(data)"},{"path":"package.epinowcast.org/dev/reference/enw_dates_to_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"data PARAM_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_dates_to_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_delay_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","title":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","text":"Filter observations restrict maximum reporting delay","code":""},{"path":"package.epinowcast.org/dev/reference/enw_delay_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","text":"","code":"enw_delay_filter(obs, max_delay)"},{"path":"package.epinowcast.org/dev/reference/enw_delay_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date). max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully. Note zero indexed includes reference date max_delay - 1 days.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_delay_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","text":"data frame filtered dates report less equal reference date plus maximum delay.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_delay_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","text":"","code":"obs <- enw_example(\"preprocessed\")$obs[[1]] enw_delay_filter(obs, max_delay = 2) #>      reference_date .group report_date max_confirm location age_group confirm #>   1:           <NA>      1  2021-07-13           0       DE       00+       0 #>   2:           <NA>      1  2021-07-14           0       DE       00+       0 #>   3:           <NA>      1  2021-07-15           0       DE       00+       0 #>   4:           <NA>      1  2021-07-16           0       DE       00+       0 #>   5:           <NA>      1  2021-07-17           0       DE       00+       0 #>  ---                                                                          #> 118:     2021-08-20      1  2021-08-20         171       DE       00+      98 #> 119:     2021-08-20      1  2021-08-21         171       DE       00+     159 #> 120:     2021-08-21      1  2021-08-21         112       DE       00+      69 #> 121:     2021-08-21      1  2021-08-22         112       DE       00+     112 #> 122:     2021-08-22      1  2021-08-22          45       DE       00+      45 #>      cum_prop_reported delay #>   1:               NaN    NA #>   2:               NaN    NA #>   3:               NaN    NA #>   4:               NaN    NA #>   5:               NaN    NA #>  ---                         #> 118:         0.5730994     0 #> 119:         0.9298246     1 #> 120:         0.6160714     0 #> 121:         1.0000000     1 #> 122:         1.0000000     0"},{"path":"package.epinowcast.org/dev/reference/enw_delay_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate reporting delay metadata — enw_delay_metadata","title":"Calculate reporting delay metadata — enw_delay_metadata","text":"Calculate delay metadata based supplied maximum delay independent metadata date indexing. data meant used conjunction metadata date reference. Users can build additional features data.frame regenerate using function output enw_preprocess_data().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_delay_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate reporting delay metadata — enw_delay_metadata","text":"","code":"enw_delay_metadata(max_delay = 20, breaks = 4)"},{"path":"package.epinowcast.org/dev/reference/enw_delay_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate reporting delay metadata — enw_delay_metadata","text":"max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully. Note zero indexed includes reference date max_delay - 1 days. breaks Numeric, defaults 4. number breaks use constructing categorised version numeric delays.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_delay_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate reporting delay metadata — enw_delay_metadata","text":"data.frame delay metadata. includes: delay: numeric delay reference date report. delay_cat: categorised delay. may useful model building. delay_week: numeric week since delay reported. may useful model building. delay_tail: logical variable defining delay upper 75% potential delays. may particularly useful building models assume parametric distribution order increase weight tail reporting distribution pragmatic way.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_delay_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate reporting delay metadata — enw_delay_metadata","text":"","code":"enw_delay_metadata(20, breaks = 4) #>     delay delay_cat delay_week delay_tail #>  1:     0     [0,5)          0      FALSE #>  2:     1     [0,5)          0      FALSE #>  3:     2     [0,5)          0      FALSE #>  4:     3     [0,5)          0      FALSE #>  5:     4     [0,5)          0      FALSE #>  6:     5    [5,10)          0      FALSE #>  7:     6    [5,10)          0      FALSE #>  8:     7    [5,10)          1      FALSE #>  9:     8    [5,10)          1      FALSE #> 10:     9    [5,10)          1      FALSE #> 11:    10   [10,15)          1      FALSE #> 12:    11   [10,15)          1      FALSE #> 13:    12   [10,15)          1      FALSE #> 14:    13   [10,15)          1      FALSE #> 15:    14   [10,15)          2      FALSE #> 16:    15   [15,20)          2       TRUE #> 17:    16   [15,20)          2       TRUE #> 18:    17   [15,20)          2       TRUE #> 19:    18   [15,20)          2       TRUE #> 20:    19   [15,20)          2       TRUE"},{"path":"package.epinowcast.org/dev/reference/enw_design.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_design","title":"FUNCTION_TITLE — enw_design","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_design","text":"","code":"enw_design(formula, data, no_contrasts = FALSE, sparse = TRUE, ...)"},{"path":"package.epinowcast.org/dev/reference/enw_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_design","text":"formula PARAM_DESCRIPTION data PARAM_DESCRIPTION no_contrasts PARAM_DESCRIPTION, Default: FALSE sparse PARAM_DESCRIPTION, Default: TRUE ... PARAM_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_design","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_effects_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_effects_metadata","title":"FUNCTION_TITLE — enw_effects_metadata","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_effects_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_effects_metadata","text":"","code":"enw_effects_metadata(design)"},{"path":"package.epinowcast.org/dev/reference/enw_effects_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_effects_metadata","text":"design PARAM_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_effects_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_effects_metadata","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a package example — enw_example","title":"Load a package example — enw_example","text":"Loads examples nowcasts produce using example scripts. Used streamline examples, package tests enable users explore package functionality without needing install cmdstanr.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a package example — enw_example","text":"","code":"enw_example(   type = c(\"nowcast\", \"preprocessed_observations\", \"observations\", \"script\") )"},{"path":"package.epinowcast.org/dev/reference/enw_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a package example — enw_example","text":"type character string indicating example load. Supported options \"nowcast\", epinowcast() applied germany_covid19_hosp \"preprocessed_observations\", enw_preprocess_data() applied germany_covid19_hosp \"observations\", enw_latest_data() applied germany_covid19_hosp \"script\", code used generate examples.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a package example — enw_example","text":"Depending type, data.table requested output file name(s) generate outputs (type = \"script\")","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a package example — enw_example","text":"","code":"# Load the nowcast enw_example(type = \"nowcast\") #>                    obs          new_confirm              latest #> 1: <data.table[671x9]> <data.table[630x11]> <data.table[41x10]> #>     missing_reference  reporting_triangle      metareference #> 1: <data.table[41x6]> <data.table[41x22]> <data.table[41x9]> #>             metareport          metadelay time snapshots by groups max_delay #> 1: <data.table[60x12]> <data.table[20x4]>   41        41         1        20 #>      max_date               fit       data  fit_args samples max_rhat #> 1: 2021-08-22 <CmdStanMCMC[32]> <list[69]> <list[6]>    1000     1.01 #>    divergent_transitions per_divergent_transitions max_treedepth #> 1:                     0                         0             8 #>    no_at_max_treedepth per_at_max_treedepth run_time #> 1:                 236                0.236       74  # Load the preprocessed observations enw_example(type = \"preprocessed_observations\") #>                    obs          new_confirm              latest #> 1: <data.table[671x9]> <data.table[630x11]> <data.table[41x10]> #>     missing_reference  reporting_triangle      metareference #> 1: <data.table[41x6]> <data.table[41x22]> <data.table[41x9]> #>             metareport          metadelay time snapshots by groups max_delay #> 1: <data.table[60x12]> <data.table[20x4]>   41        41         1        20 #>      max_date #> 1: 2021-08-22  # Load the latest observations enw_example(type = \"observations\") #>     reference_date location age_group confirm report_date #>  1:     2021-08-02       DE       00+      59  2021-10-01 #>  2:     2021-08-03       DE       00+     156  2021-10-01 #>  3:     2021-08-04       DE       00+     183  2021-10-01 #>  4:     2021-08-05       DE       00+     147  2021-10-01 #>  5:     2021-08-06       DE       00+     155  2021-10-01 #>  6:     2021-08-07       DE       00+     159  2021-10-01 #>  7:     2021-08-08       DE       00+     119  2021-10-01 #>  8:     2021-08-09       DE       00+      65  2021-10-01 #>  9:     2021-08-10       DE       00+     204  2021-10-01 #> 10:     2021-08-11       DE       00+     275  2021-10-01 #> 11:     2021-08-12       DE       00+     273  2021-10-01 #> 12:     2021-08-13       DE       00+     270  2021-10-01 #> 13:     2021-08-14       DE       00+     262  2021-10-01 #> 14:     2021-08-15       DE       00+     192  2021-10-01 #> 15:     2021-08-16       DE       00+     140  2021-10-01 #> 16:     2021-08-17       DE       00+     323  2021-10-01 #> 17:     2021-08-18       DE       00+     409  2021-10-01 #> 18:     2021-08-19       DE       00+     370  2021-10-01 #> 19:     2021-08-20       DE       00+     361  2021-10-01 #> 20:     2021-08-21       DE       00+     339  2021-10-01 #> 21:     2021-08-22       DE       00+     258  2021-10-01 #>     reference_date location age_group confirm report_date  # Load the script used to generate these examples # Optionally source this script to regenerate the example readLines(enw_example(type = \"script\")) #>  [1] \"# Load epinowcast and data.table\"                                                     #>  [2] \"library(epinowcast)\"                                                                  #>  [3] \"library(data.table)\"                                                                  #>  [4] \"\"                                                                                     #>  [5] \"# Load and filter germany hospitalisations\"                                           #>  [6] \"nat_germany_hosp <- germany_covid19_hosp[location == \\\"DE\\\"][age_group %in% \\\"00+\\\"]\" #>  [7] \"nat_germany_hosp <- enw_filter_report_dates(\"                                         #>  [8] \"  nat_germany_hosp,\"                                                                  #>  [9] \"  latest_date = \\\"2021-10-01\\\"\"                                                       #> [10] \")\"                                                                                    #> [11] \"\"                                                                                     #> [12] \"# Make sure observations are complete\"                                                #> [13] \"nat_germany_hosp <- enw_complete_dates(\"                                              #> [14] \"  nat_germany_hosp,\"                                                                  #> [15] \"  by = c(\\\"location\\\", \\\"age_group\\\")\"                                                #> [16] \")\"                                                                                    #> [17] \"\"                                                                                     #> [18] \"# Make a retrospective dataset\"                                                       #> [19] \"retro_nat_germany <- enw_filter_report_dates(\"                                        #> [20] \"  nat_germany_hosp,\"                                                                  #> [21] \"  remove_days = 40\"                                                                   #> [22] \")\"                                                                                    #> [23] \"retro_nat_germany <- enw_filter_reference_dates(\"                                     #> [24] \"  retro_nat_germany,\"                                                                 #> [25] \"  include_days = 40\"                                                                  #> [26] \")\"                                                                                    #> [27] \"\"                                                                                     #> [28] \"# Get latest observations for the same time period\"                                   #> [29] \"latest_obs <- enw_latest_data(nat_germany_hosp)\"                                      #> [30] \"latest_obs <- enw_filter_reference_dates(\"                                            #> [31] \"  latest_obs,\"                                                                        #> [32] \"  remove_days = 40, include_days = 20\"                                                #> [33] \")\"                                                                                    #> [34] \"\"                                                                                     #> [35] \"# Preprocess observations\"                                                            #> [36] \"pobs <- enw_preprocess_data(retro_nat_germany, max_delay = 20)\"                       #> [37] \"\"                                                                                     #> [38] \"# Reference date model\"                                                               #> [39] \"reference_module <- enw_reference(~1, data = pobs)\"                                   #> [40] \"\"                                                                                     #> [41] \"# Report date model\"                                                                  #> [42] \"report_module <- enw_report(~ (1 | day_of_week), data = pobs)\"                        #> [43] \"\"                                                                                     #> [44] \"# Compile nowcasting model using multi-threading\"                                     #> [45] \"model <- enw_model(threads = TRUE)\"                                                   #> [46] \"\"                                                                                     #> [47] \"# Fit nowcast model and produce a nowcast\"                                            #> [48] \"# Note that we have reduced samples for this example to reduce runtimes\"              #> [49] \"nowcast <- epinowcast(pobs,\"                                                          #> [50] \"  reference = reference_module,\"                                                      #> [51] \"  report = report_module,\"                                                            #> [52] \"  fit = enw_fit_opts(\"                                                                #> [53] \"    save_warmup = FALSE, pp = TRUE,\"                                                  #> [54] \"    chains = 2, threads_per_chain = 2,\"                                               #> [55] \"    iter_warmup = 500, iter_sampling = 500\"                                           #> [56] \"  ),\"                                                                                 #> [57] \"  model = model\"                                                                      #> [58] \")\""},{"path":"package.epinowcast.org/dev/reference/enw_expectation.html","id":null,"dir":"Reference","previous_headings":"","what":"Expectation model module — enw_expectation","title":"Expectation model module — enw_expectation","text":"Expectation model module","code":""},{"path":"package.epinowcast.org/dev/reference/enw_expectation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expectation model module — enw_expectation","text":"","code":"enw_expectation(formula = ~rw(day, .group), order = 1, data)"},{"path":"package.epinowcast.org/dev/reference/enw_expectation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expectation model module — enw_expectation","text":"formula formula (implemented enw_formula()) describing generative process used expected incidence. can use features defined reference date defined metareference produced enw_preprocess_data(). default set use daily group specific random walk. Note daily group specific random walk currently option supported epinowcast(). order Integer, defaults 1. order expectation process 1 simple log scale generative process, 2 log scale generative process time point offset log count previous time points. data Output enw_preprocess_data().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_expectation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expectation model module — enw_expectation","text":"list containing supplied formulas, data passed list describing models, data.frame describing priors used, function takes output data priors returns function can used sample tightened version prior distribution.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_expectation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expectation model module — enw_expectation","text":"","code":"enw_expectation(data = enw_example(\"preprocessed\")) #> A grouped random walk using .group is not possible as this variable has fewer than 2 unique values. #> $formula #> $formula$expectation #> [1] \"~rw(day, .group)\" #>  #>  #> $data #> $data$exp_fdesign #>    (Intercept) cday1 cday2 cday3 cday4 cday5 cday6 cday7 cday8 cday9 cday10 #> 1            1     0     0     0     0     0     0     0     0     0      0 #> 2            1     1     0     0     0     0     0     0     0     0      0 #> 3            1     1     1     0     0     0     0     0     0     0      0 #> 4            1     1     1     1     0     0     0     0     0     0      0 #> 5            1     1     1     1     1     0     0     0     0     0      0 #> 6            1     1     1     1     1     1     0     0     0     0      0 #> 7            1     1     1     1     1     1     1     0     0     0      0 #> 8            1     1     1     1     1     1     1     1     0     0      0 #> 9            1     1     1     1     1     1     1     1     1     0      0 #> 10           1     1     1     1     1     1     1     1     1     1      0 #> 11           1     1     1     1     1     1     1     1     1     1      1 #> 12           1     1     1     1     1     1     1     1     1     1      1 #> 13           1     1     1     1     1     1     1     1     1     1      1 #> 14           1     1     1     1     1     1     1     1     1     1      1 #> 15           1     1     1     1     1     1     1     1     1     1      1 #> 16           1     1     1     1     1     1     1     1     1     1      1 #> 17           1     1     1     1     1     1     1     1     1     1      1 #> 18           1     1     1     1     1     1     1     1     1     1      1 #> 19           1     1     1     1     1     1     1     1     1     1      1 #> 20           1     1     1     1     1     1     1     1     1     1      1 #> 21           1     1     1     1     1     1     1     1     1     1      1 #> 22           1     1     1     1     1     1     1     1     1     1      1 #> 23           1     1     1     1     1     1     1     1     1     1      1 #> 24           1     1     1     1     1     1     1     1     1     1      1 #> 25           1     1     1     1     1     1     1     1     1     1      1 #> 26           1     1     1     1     1     1     1     1     1     1      1 #> 27           1     1     1     1     1     1     1     1     1     1      1 #> 28           1     1     1     1     1     1     1     1     1     1      1 #> 29           1     1     1     1     1     1     1     1     1     1      1 #> 30           1     1     1     1     1     1     1     1     1     1      1 #> 31           1     1     1     1     1     1     1     1     1     1      1 #> 32           1     1     1     1     1     1     1     1     1     1      1 #> 33           1     1     1     1     1     1     1     1     1     1      1 #> 34           1     1     1     1     1     1     1     1     1     1      1 #> 35           1     1     1     1     1     1     1     1     1     1      1 #> 36           1     1     1     1     1     1     1     1     1     1      1 #> 37           1     1     1     1     1     1     1     1     1     1      1 #> 38           1     1     1     1     1     1     1     1     1     1      1 #> 39           1     1     1     1     1     1     1     1     1     1      1 #> 40           1     1     1     1     1     1     1     1     1     1      1 #> 41           1     1     1     1     1     1     1     1     1     1      1 #>    cday11 cday12 cday13 cday14 cday15 cday16 cday17 cday18 cday19 cday20 cday21 #> 1       0      0      0      0      0      0      0      0      0      0      0 #> 2       0      0      0      0      0      0      0      0      0      0      0 #> 3       0      0      0      0      0      0      0      0      0      0      0 #> 4       0      0      0      0      0      0      0      0      0      0      0 #> 5       0      0      0      0      0      0      0      0      0      0      0 #> 6       0      0      0      0      0      0      0      0      0      0      0 #> 7       0      0      0      0      0      0      0      0      0      0      0 #> 8       0      0      0      0      0      0      0      0      0      0      0 #> 9       0      0      0      0      0      0      0      0      0      0      0 #> 10      0      0      0      0      0      0      0      0      0      0      0 #> 11      0      0      0      0      0      0      0      0      0      0      0 #> 12      1      0      0      0      0      0      0      0      0      0      0 #> 13      1      1      0      0      0      0      0      0      0      0      0 #> 14      1      1      1      0      0      0      0      0      0      0      0 #> 15      1      1      1      1      0      0      0      0      0      0      0 #> 16      1      1      1      1      1      0      0      0      0      0      0 #> 17      1      1      1      1      1      1      0      0      0      0      0 #> 18      1      1      1      1      1      1      1      0      0      0      0 #> 19      1      1      1      1      1      1      1      1      0      0      0 #> 20      1      1      1      1      1      1      1      1      1      0      0 #> 21      1      1      1      1      1      1      1      1      1      1      0 #> 22      1      1      1      1      1      1      1      1      1      1      1 #> 23      1      1      1      1      1      1      1      1      1      1      1 #> 24      1      1      1      1      1      1      1      1      1      1      1 #> 25      1      1      1      1      1      1      1      1      1      1      1 #> 26      1      1      1      1      1      1      1      1      1      1      1 #> 27      1      1      1      1      1      1      1      1      1      1      1 #> 28      1      1      1      1      1      1      1      1      1      1      1 #> 29      1      1      1      1      1      1      1      1      1      1      1 #> 30      1      1      1      1      1      1      1      1      1      1      1 #> 31      1      1      1      1      1      1      1      1      1      1      1 #> 32      1      1      1      1      1      1      1      1      1      1      1 #> 33      1      1      1      1      1      1      1      1      1      1      1 #> 34      1      1      1      1      1      1      1      1      1      1      1 #> 35      1      1      1      1      1      1      1      1      1      1      1 #> 36      1      1      1      1      1      1      1      1      1      1      1 #> 37      1      1      1      1      1      1      1      1      1      1      1 #> 38      1      1      1      1      1      1      1      1      1      1      1 #> 39      1      1      1      1      1      1      1      1      1      1      1 #> 40      1      1      1      1      1      1      1      1      1      1      1 #> 41      1      1      1      1      1      1      1      1      1      1      1 #>    cday22 cday23 cday24 cday25 cday26 cday27 cday28 cday29 cday30 cday31 cday32 #> 1       0      0      0      0      0      0      0      0      0      0      0 #> 2       0      0      0      0      0      0      0      0      0      0      0 #> 3       0      0      0      0      0      0      0      0      0      0      0 #> 4       0      0      0      0      0      0      0      0      0      0      0 #> 5       0      0      0      0      0      0      0      0      0      0      0 #> 6       0      0      0      0      0      0      0      0      0      0      0 #> 7       0      0      0      0      0      0      0      0      0      0      0 #> 8       0      0      0      0      0      0      0      0      0      0      0 #> 9       0      0      0      0      0      0      0      0      0      0      0 #> 10      0      0      0      0      0      0      0      0      0      0      0 #> 11      0      0      0      0      0      0      0      0      0      0      0 #> 12      0      0      0      0      0      0      0      0      0      0      0 #> 13      0      0      0      0      0      0      0      0      0      0      0 #> 14      0      0      0      0      0      0      0      0      0      0      0 #> 15      0      0      0      0      0      0      0      0      0      0      0 #> 16      0      0      0      0      0      0      0      0      0      0      0 #> 17      0      0      0      0      0      0      0      0      0      0      0 #> 18      0      0      0      0      0      0      0      0      0      0      0 #> 19      0      0      0      0      0      0      0      0      0      0      0 #> 20      0      0      0      0      0      0      0      0      0      0      0 #> 21      0      0      0      0      0      0      0      0      0      0      0 #> 22      0      0      0      0      0      0      0      0      0      0      0 #> 23      1      0      0      0      0      0      0      0      0      0      0 #> 24      1      1      0      0      0      0      0      0      0      0      0 #> 25      1      1      1      0      0      0      0      0      0      0      0 #> 26      1      1      1      1      0      0      0      0      0      0      0 #> 27      1      1      1      1      1      0      0      0      0      0      0 #> 28      1      1      1      1      1      1      0      0      0      0      0 #> 29      1      1      1      1      1      1      1      0      0      0      0 #> 30      1      1      1      1      1      1      1      1      0      0      0 #> 31      1      1      1      1      1      1      1      1      1      0      0 #> 32      1      1      1      1      1      1      1      1      1      1      0 #> 33      1      1      1      1      1      1      1      1      1      1      1 #> 34      1      1      1      1      1      1      1      1      1      1      1 #> 35      1      1      1      1      1      1      1      1      1      1      1 #> 36      1      1      1      1      1      1      1      1      1      1      1 #> 37      1      1      1      1      1      1      1      1      1      1      1 #> 38      1      1      1      1      1      1      1      1      1      1      1 #> 39      1      1      1      1      1      1      1      1      1      1      1 #> 40      1      1      1      1      1      1      1      1      1      1      1 #> 41      1      1      1      1      1      1      1      1      1      1      1 #>    cday33 cday34 cday35 cday36 cday37 cday38 cday39 cday40 #> 1       0      0      0      0      0      0      0      0 #> 2       0      0      0      0      0      0      0      0 #> 3       0      0      0      0      0      0      0      0 #> 4       0      0      0      0      0      0      0      0 #> 5       0      0      0      0      0      0      0      0 #> 6       0      0      0      0      0      0      0      0 #> 7       0      0      0      0      0      0      0      0 #> 8       0      0      0      0      0      0      0      0 #> 9       0      0      0      0      0      0      0      0 #> 10      0      0      0      0      0      0      0      0 #> 11      0      0      0      0      0      0      0      0 #> 12      0      0      0      0      0      0      0      0 #> 13      0      0      0      0      0      0      0      0 #> 14      0      0      0      0      0      0      0      0 #> 15      0      0      0      0      0      0      0      0 #> 16      0      0      0      0      0      0      0      0 #> 17      0      0      0      0      0      0      0      0 #> 18      0      0      0      0      0      0      0      0 #> 19      0      0      0      0      0      0      0      0 #> 20      0      0      0      0      0      0      0      0 #> 21      0      0      0      0      0      0      0      0 #> 22      0      0      0      0      0      0      0      0 #> 23      0      0      0      0      0      0      0      0 #> 24      0      0      0      0      0      0      0      0 #> 25      0      0      0      0      0      0      0      0 #> 26      0      0      0      0      0      0      0      0 #> 27      0      0      0      0      0      0      0      0 #> 28      0      0      0      0      0      0      0      0 #> 29      0      0      0      0      0      0      0      0 #> 30      0      0      0      0      0      0      0      0 #> 31      0      0      0      0      0      0      0      0 #> 32      0      0      0      0      0      0      0      0 #> 33      0      0      0      0      0      0      0      0 #> 34      1      0      0      0      0      0      0      0 #> 35      1      1      0      0      0      0      0      0 #> 36      1      1      1      0      0      0      0      0 #> 37      1      1      1      1      0      0      0      0 #> 38      1      1      1      1      1      0      0      0 #> 39      1      1      1      1      1      1      0      0 #> 40      1      1      1      1      1      1      1      0 #> 41      1      1      1      1      1      1      1      1 #> attr(,\"assign\") #>  [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #> [26] 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 #>  #> $data$exp_fnrow #> [1] 41 #>  #> $data$exp_findex #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #>  #> $data$exp_fnindex #> [1] 41 #>  #> $data$exp_fncol #> [1] 40 #>  #> $data$exp_rdesign #>    fixed day #> 1      0   1 #> 2      0   1 #> 3      0   1 #> 4      0   1 #> 5      0   1 #> 6      0   1 #> 7      0   1 #> 8      0   1 #> 9      0   1 #> 10     0   1 #> 11     0   1 #> 12     0   1 #> 13     0   1 #> 14     0   1 #> 15     0   1 #> 16     0   1 #> 17     0   1 #> 18     0   1 #> 19     0   1 #> 20     0   1 #> 21     0   1 #> 22     0   1 #> 23     0   1 #> 24     0   1 #> 25     0   1 #> 26     0   1 #> 27     0   1 #> 28     0   1 #> 29     0   1 #> 30     0   1 #> 31     0   1 #> 32     0   1 #> 33     0   1 #> 34     0   1 #> 35     0   1 #> 36     0   1 #> 37     0   1 #> 38     0   1 #> 39     0   1 #> 40     0   1 #> attr(,\"assign\") #> [1] 1 2 #>  #> $data$exp_rncol #> [1] 1 #>  #> $data$exp_order #> [1] 1 #>  #>  #> $priors #>       variable                                             description #> 1: exp_beta_sd Standard deviation of scaled pooled expectation effects #> 2:    eobs_lsd      Standard deviation for expected final observations #>             distribution mean sd #> 1: Zero truncated normal    0  1 #> 2: Zero truncated normal    0  1 #>  #> $inits #> function (data, priors)  #> { #>     priors <- enw_priors_as_data_list(priors) #>     fn <- function() { #>         init <- list(exp_beta = numeric(0), exp_beta_sd = numeric(0),  #>             leobs_init = array(purrr::map_dbl(data$latest_obs[1,  #>                 ] + 1, ~rnorm(1, log(.), 1))), eobs_lsd = array(abs(rnorm(data$g,  #>                 priors$eobs_lsd_p[1], priors$eobs_lsd_p[2]/10))),  #>             leobs_resids = array(rnorm((data$t - 1) * data$g,  #>                 0, 0.01), dim = c(data$t - 1, data$g))) #>         if (data$exp_fncol > 0) { #>             init$exp_beta <- rnorm(data$exp_fncol, 0, 0.01) #>         } #>         if (data$exp_rncol > 0) { #>             init$exp_beta_sd <- abs(rnorm(data$exp_rncol, priors$exp_beta_sd_p[1],  #>                 priors$exp_beta_sd_p[2]/10)) #>         } #>         return(init) #>     } #>     return(fn) #> } #> <bytecode: 0x55b4e92fbf28> #> <environment: 0x55b4e92f62e0> #>"},{"path":"package.epinowcast.org/dev/reference/enw_extend_date.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_extend_date","title":"FUNCTION_TITLE — enw_extend_date","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_extend_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_extend_date","text":"","code":"enw_extend_date(metaobs, max_delay = 20)"},{"path":"package.epinowcast.org/dev/reference/enw_extend_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_extend_date","text":"metaobs PARAM_DESCRIPTION max_delay PARAM_DESCRIPTION, Default: 20","code":""},{"path":"package.epinowcast.org/dev/reference/enw_extend_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_extend_date","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_filter_reference_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by reference dates — enw_filter_reference_dates","title":"Filter by reference dates — enw_filter_reference_dates","text":"helper function allows users filter datasets reference date. useful, example, evaluating nowcast performance fully observed data. Users may wish combine function enw_filter_report_dates(). Note definition assumed report date given reference date must equal greater (.e report happen event reported occurs). means function also filter report dates earlier target reference dates.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_filter_reference_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by reference dates — enw_filter_reference_dates","text":"","code":"enw_filter_reference_dates(   obs,   earliest_date,   include_days,   latest_date,   remove_days )"},{"path":"package.epinowcast.org/dev/reference/enw_filter_reference_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by reference dates — enw_filter_reference_dates","text":"obs observation data frame containing report_date reference_date columns. earliest_date earliest reference date include data set include_days earilest_date given, number reference dates include, ending latest reference date included reporting dates removed. specified indexed latest_date remove_days. latest_date Date, latest reference date include returned dataset. remove_days Integer, latest_date given, number reference dates remove, starting latest date included.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_filter_reference_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by reference dates — enw_filter_reference_dates","text":"data.table  filtered report date","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_filter_reference_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter by reference dates — enw_filter_reference_dates","text":"","code":"# Filter by date enw_filter_reference_dates(   germany_covid19_hosp,   earliest_date = \"2021-09-01\",   latest_date = \"2021-10-01\" ) #>         reference_date location age_group confirm report_date #>      1:     2021-09-01       DE       00+     124  2021-09-01 #>      2:     2021-09-02       DE       00+      94  2021-09-02 #>      3:     2021-09-03       DE       00+     130  2021-09-03 #>      4:     2021-09-04       DE       00+      82  2021-09-04 #>      5:     2021-09-05       DE       00+      42  2021-09-05 #>     ---                                                       #> 129111:     2021-09-01    DE-TH     05-14       0  2021-10-20 #> 129112:     2021-09-01    DE-TH     15-34       0  2021-10-20 #> 129113:     2021-09-01    DE-TH     35-59       1  2021-10-20 #> 129114:     2021-09-01    DE-TH     60-79       2  2021-10-20 #> 129115:     2021-09-01    DE-TH       80+       2  2021-10-20 # # Filter by days enw_filter_reference_dates(   germany_covid19_hosp,   include_days = 10, remove_days = 10 ) #>        reference_date location age_group confirm report_date #>     1:     2021-09-30       DE       00+     110  2021-09-30 #>     2:     2021-10-01       DE       00+     105  2021-10-01 #>     3:     2021-10-02       DE       00+      97  2021-10-02 #>     4:     2021-10-03       DE       00+      41  2021-10-03 #>     5:     2021-10-04       DE       00+      23  2021-10-04 #>    ---                                                       #> 20940:     2021-09-30    DE-TH     05-14       1  2021-10-20 #> 20941:     2021-09-30    DE-TH     15-34       2  2021-10-20 #> 20942:     2021-09-30    DE-TH     35-59       6  2021-10-20 #> 20943:     2021-09-30    DE-TH     60-79       4  2021-10-20 #> 20944:     2021-09-30    DE-TH       80+      10  2021-10-20"},{"path":"package.epinowcast.org/dev/reference/enw_filter_report_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by report dates — enw_filter_report_dates","title":"Filter by report dates — enw_filter_report_dates","text":"helper function allows users create truncated data sets past time points given larger data set. useful evaluating nowcast performance fully observed data. Users may wish combine function enw_filter_reference_dates().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_filter_report_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by report dates — enw_filter_report_dates","text":"","code":"enw_filter_report_dates(obs, latest_date, remove_days)"},{"path":"package.epinowcast.org/dev/reference/enw_filter_report_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by report dates — enw_filter_report_dates","text":"obs observation data frame containing report_date reference_date columns. latest_date Date, latest report date include returned dataset. remove_days Integer, latest_date given, number report dates remove, starting latest date included.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_filter_report_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by report dates — enw_filter_report_dates","text":"data.table  filtered report date","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_filter_report_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter by report dates — enw_filter_report_dates","text":"","code":"# Filter by date enw_filter_report_dates(germany_covid19_hosp, latest_date = \"2021-09-01\") #>          reference_date location age_group confirm report_date #>       1:     2021-04-06       DE       00+     149  2021-04-06 #>       2:     2021-04-07       DE       00+     312  2021-04-07 #>       3:     2021-04-08       DE       00+     424  2021-04-08 #>       4:     2021-04-09       DE       00+     288  2021-04-09 #>       5:     2021-04-10       DE       00+     273  2021-04-10 #>      ---                                                       #> 1058739:     2021-06-08    DE-TH       80+       4  2021-08-28 #> 1058740:     2021-06-09    DE-TH       80+       4  2021-08-29 #> 1058741:     2021-06-10    DE-TH       80+       1  2021-08-30 #> 1058742:     2021-06-11    DE-TH       80+       0  2021-08-31 #> 1058743:     2021-06-12    DE-TH       80+       2  2021-09-01 # # Filter by days enw_filter_report_dates(germany_covid19_hosp, remove_days = 10) #>          reference_date location age_group confirm report_date #>       1:     2021-04-06       DE       00+     149  2021-04-06 #>       2:     2021-04-07       DE       00+     312  2021-04-07 #>       3:     2021-04-08       DE       00+     424  2021-04-08 #>       4:     2021-04-09       DE       00+     288  2021-04-09 #>       5:     2021-04-10       DE       00+     273  2021-04-10 #>      ---                                                       #> 1439301:     2021-07-17    DE-TH       80+       1  2021-10-06 #> 1439302:     2021-07-18    DE-TH       80+       0  2021-10-07 #> 1439303:     2021-07-19    DE-TH       80+       0  2021-10-08 #> 1439304:     2021-07-20    DE-TH       80+       0  2021-10-09 #> 1439305:     2021-07-21    DE-TH       80+       0  2021-10-10"},{"path":"package.epinowcast.org/dev/reference/enw_fit_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Format model fitting options for use with stan — enw_fit_opts","title":"Format model fitting options for use with stan — enw_fit_opts","text":"Format model fitting options use stan","code":""},{"path":"package.epinowcast.org/dev/reference/enw_fit_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format model fitting options for use with stan — enw_fit_opts","text":"","code":"enw_fit_opts(   sampler = epinowcast::enw_sample,   nowcast = TRUE,   pp = FALSE,   likelihood = TRUE,   likelihood_aggregation = c(\"snapshots\", \"groups\"),   debug = FALSE,   output_loglik = FALSE,   ... )"},{"path":"package.epinowcast.org/dev/reference/enw_fit_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format model fitting options for use with stan — enw_fit_opts","text":"sampler function creates object used extract posterior samples specified model. default enw_sample() makes use cmdstanr::sample(). nowcast Logical, defaults TRUE. nowcast made using posterior predictions unobserved future reported notifications. pp Logical, defaults FALSE. posterior predictions made observed data. Useful evaluating performance model. likelihood Logical, defaults TRUE. likelihood included model likelihood_aggregation Character string, aggregation stratify likelihood threads = TRUE; enforced base::match.arg(). Currently supported options: \"snapshots\" aggregates report dates groups (.e lowest level observations reported ), \"groups\" aggregates across user defined groups. Note model modules override setting depending model requirements. example, enw_missing() module model forces \"groups\" option. Generally, Users typically want default \"snapshots\" aggregation. debug Logical, defaults FALSE. within model debug information returned. output_loglik Logical, defaults FALSE. log-likelihood output. Disabling speed fitting evaluating model fit required. ... Additional arguments pass fitting function used epinowcast(). default enw_sample() cmdstanr options used.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_fit_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format model fitting options for use with stan — enw_fit_opts","text":"list containing specified sampler function, data list specifying fitting options use, additional arguments pass sampler function called.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_fit_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format model fitting options for use with stan — enw_fit_opts","text":"","code":"# Default options along with settings to pass to enw_sample enw_fit_opts(iter_sampling = 1000, iter_warmup = 1000) #> $sampler #> function (data, model = epinowcast::enw_model(), diagnostics = TRUE,  #>     ...)  #> { #>     fit <- model$sample(data = data, ...) #>     out <- data.table(fit = list(fit), data = list(data), fit_args = list(list(...))) #>     if (diagnostics) { #>         diag <- fit$sampler_diagnostics(format = \"df\") #>         diagnostics <- data.table(samples = nrow(diag), max_rhat = round(max(fit$summary(variables = NULL,  #>             posterior::rhat, .args = list(na.rm = TRUE))$`posterior::rhat`,  #>             na.rm = TRUE), 2), divergent_transitions = sum(diag$divergent__),  #>             per_divergent_transitions = sum(diag$divergent__)/nrow(diag),  #>             max_treedepth = max(diag$treedepth__)) #>         diagnostics[, `:=`(no_at_max_treedepth, sum(diag$treedepth__ ==  #>             max_treedepth))] #>         diagnostics[, `:=`(per_at_max_treedepth, no_at_max_treedepth/nrow(diag))] #>         out <- cbind(out, diagnostics) #>         timing <- round(fit$time()$total, 1) #>         out[, `:=`(run_time, timing)] #>     } #>     return(out[]) #> } #> <bytecode: 0x55b4ec42fc48> #> <environment: namespace:epinowcast> #>  #> $data #> $data$debug #> [1] 0 #>  #> $data$likelihood #> [1] 1 #>  #> $data$likelihood_aggregation #> [1] 0 #>  #> $data$pp #> [1] 0 #>  #> $data$cast #> [1] 1 #>  #> $data$ologlik #> [1] 0 #>  #>  #> $args #> $args$iter_sampling #> [1] 1000 #>  #> $args$iter_warmup #> [1] 1000 #>  #>"},{"path":"package.epinowcast.org/dev/reference/enw_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a model using a formula interface — enw_formula","title":"Define a model using a formula interface — enw_formula","text":"function allows models defined using flexible formula interface supports fixed effects, random effects (using lme4 syntax). Note returned fixed effects design matrix sparse index supplied required link observations appropriate design matrix row.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a model using a formula interface — enw_formula","text":"","code":"enw_formula(formula, data, sparse = TRUE)"},{"path":"package.epinowcast.org/dev/reference/enw_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a model using a formula interface — enw_formula","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function. data data.frame observations. must include variables used supplied formula. sparse Logical, defaults  TRUE. fixed effects design matrix sparely defined.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a model using a formula interface — enw_formula","text":"list containing following: formula: user supplied formula parsed_formula: formula parsed parse_formula() extended_formula: flattened version formula user supplied terms terms added user supplied complex model components. fixed:  list containing fixed effect formula, sparse design matrix, index linking design matrix observations. random: list containing random effect formula, sparse design matrix, index linking design matrix random effects.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a model using a formula interface — enw_formula","text":"","code":"# Use meta data for references dates from the Germany COVID-19 # hospitalisation data. obs <- enw_filter_report_dates(   germany_covid19_hosp[location == \"DE\"],   remove_days = 40 ) obs <- enw_filter_reference_dates(obs, include_days = 40) pobs <- enw_preprocess_data(obs, by = c(\"age_group\", \"location\")) data <- pobs$metareference[[1]]  # Model with fixed effects for age group enw_formula(~ 1 + age_group, data) #> $formula #> [1] \"~1 + age_group\" #>  #> $parsed_formula #> $parsed_formula$fixed #> [1] \"1\"         \"age_group\" #>  #> $parsed_formula$random #> NULL #>  #> $parsed_formula$rw #> character(0) #>  #>  #> $expanded_formula #> [1] \"~1 + age_group\" #>  #> $fixed #> $fixed$formula #> [1] \"~1 + age_group\" #>  #> $fixed$design #>     (Intercept) age_group00+ age_group05-14 age_group15-34 age_group35-59 #> 1             1            1              0              0              0 #> 42            1            0              0              0              0 #> 83            1            0              1              0              0 #> 124           1            0              0              1              0 #> 165           1            0              0              0              1 #> 206           1            0              0              0              0 #> 247           1            0              0              0              0 #>     age_group60-79 age_group80+ #> 1                0            0 #> 42               0            0 #> 83               0            0 #> 124              0            0 #> 165              0            0 #> 206              1            0 #> 247              0            1 #>  #> $fixed$index #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [75] 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 #> [112] 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 #> [149] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 #> [186] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 #> [223] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 #> [260] 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 #>  #>  #> $random #> $random$formula #> [1] \"~1\" #>  #> $random$design #>   (Intercept) #> 1           1 #> 2           1 #> 3           1 #> 4           1 #> 5           1 #> 6           1 #> attr(,\"assign\") #> [1] 0 #>  #> $random$index #> [1] 1 2 3 4 5 6 #>  #>  #> attr(,\"class\") #> [1] \"enw_formula\" \"list\"         # Model with random effects for age group enw_formula(~ 1 + (1 | age_group), data) #> $formula #> [1] \"~1 + (1 | age_group)\" #>  #> $parsed_formula #> $parsed_formula$fixed #> [1] \"1\" #>  #> $parsed_formula$random #> $parsed_formula$random[[1]] #> 1 | age_group #>  #>  #> $parsed_formula$rw #> character(0) #>  #>  #> $expanded_formula #> [1] \"~1 + age_group\" #>  #> $fixed #> $fixed$formula #> [1] \"~1 + age_group\" #>  #> $fixed$design #>     (Intercept) age_group00-04 age_group00+ age_group05-14 age_group15-34 #> 1             1              0            1              0              0 #> 42            1              1            0              0              0 #> 83            1              0            0              1              0 #> 124           1              0            0              0              1 #> 165           1              0            0              0              0 #> 206           1              0            0              0              0 #> 247           1              0            0              0              0 #>     age_group35-59 age_group60-79 age_group80+ #> 1                0              0            0 #> 42               0              0            0 #> 83               0              0            0 #> 124              0              0            0 #> 165              1              0            0 #> 206              0              1            0 #> 247              0              0            1 #>  #> $fixed$index #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [75] 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 #> [112] 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 #> [149] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 #> [186] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 #> [223] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 #> [260] 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 #>  #>  #> $random #> $random$formula #> [1] \"~0 + fixed + age_group\" #>  #> $random$design #>   fixed age_group #> 1     0         1 #> 2     0         1 #> 3     0         1 #> 4     0         1 #> 5     0         1 #> 6     0         1 #> 7     0         1 #> attr(,\"assign\") #> [1] 1 2 #>  #> $random$index #> [1] 1 2 3 4 5 6 7 #>  #>  #> attr(,\"class\") #> [1] \"enw_formula\" \"list\"         # Model with a random effect for age group and a random walk enw_formula(~ 1 + (1 | age_group) + rw(week), data) #> $formula #> [1] \"~1 + (1 | age_group) + rw(week)\" #>  #> $parsed_formula #> $parsed_formula$fixed #> [1] \"1\" #>  #> $parsed_formula$random #> $parsed_formula$random[[1]] #> 1 | age_group #>  #>  #> $parsed_formula$rw #> [1] \"rw(week)\" #>  #>  #> $expanded_formula #> [1] \"~1 + cweek1 + cweek2 + cweek3 + cweek4 + cweek5 + age_group\" #>  #> $fixed #> $fixed$formula #> [1] \"~1 + cweek1 + cweek2 + cweek3 + cweek4 + cweek5 + age_group\" #>  #> $fixed$design #>     (Intercept) cweek1 cweek2 cweek3 cweek4 cweek5 age_group00-04 age_group00+ #> 1             1      0      0      0      0      0              0            1 #> 8             1      1      0      0      0      0              0            1 #> 15            1      1      1      0      0      0              0            1 #> 22            1      1      1      1      0      0              0            1 #> 29            1      1      1      1      1      0              0            1 #> 36            1      1      1      1      1      1              0            1 #> 42            1      0      0      0      0      0              1            0 #> 49            1      1      0      0      0      0              1            0 #> 56            1      1      1      0      0      0              1            0 #> 63            1      1      1      1      0      0              1            0 #> 70            1      1      1      1      1      0              1            0 #> 77            1      1      1      1      1      1              1            0 #> 83            1      0      0      0      0      0              0            0 #> 90            1      1      0      0      0      0              0            0 #> 97            1      1      1      0      0      0              0            0 #> 104           1      1      1      1      0      0              0            0 #> 111           1      1      1      1      1      0              0            0 #> 118           1      1      1      1      1      1              0            0 #> 124           1      0      0      0      0      0              0            0 #> 131           1      1      0      0      0      0              0            0 #> 138           1      1      1      0      0      0              0            0 #> 145           1      1      1      1      0      0              0            0 #> 152           1      1      1      1      1      0              0            0 #> 159           1      1      1      1      1      1              0            0 #> 165           1      0      0      0      0      0              0            0 #> 172           1      1      0      0      0      0              0            0 #> 179           1      1      1      0      0      0              0            0 #> 186           1      1      1      1      0      0              0            0 #> 193           1      1      1      1      1      0              0            0 #> 200           1      1      1      1      1      1              0            0 #> 206           1      0      0      0      0      0              0            0 #> 213           1      1      0      0      0      0              0            0 #> 220           1      1      1      0      0      0              0            0 #> 227           1      1      1      1      0      0              0            0 #> 234           1      1      1      1      1      0              0            0 #> 241           1      1      1      1      1      1              0            0 #> 247           1      0      0      0      0      0              0            0 #> 254           1      1      0      0      0      0              0            0 #> 261           1      1      1      0      0      0              0            0 #> 268           1      1      1      1      0      0              0            0 #> 275           1      1      1      1      1      0              0            0 #> 282           1      1      1      1      1      1              0            0 #>     age_group05-14 age_group15-34 age_group35-59 age_group60-79 age_group80+ #> 1                0              0              0              0            0 #> 8                0              0              0              0            0 #> 15               0              0              0              0            0 #> 22               0              0              0              0            0 #> 29               0              0              0              0            0 #> 36               0              0              0              0            0 #> 42               0              0              0              0            0 #> 49               0              0              0              0            0 #> 56               0              0              0              0            0 #> 63               0              0              0              0            0 #> 70               0              0              0              0            0 #> 77               0              0              0              0            0 #> 83               1              0              0              0            0 #> 90               1              0              0              0            0 #> 97               1              0              0              0            0 #> 104              1              0              0              0            0 #> 111              1              0              0              0            0 #> 118              1              0              0              0            0 #> 124              0              1              0              0            0 #> 131              0              1              0              0            0 #> 138              0              1              0              0            0 #> 145              0              1              0              0            0 #> 152              0              1              0              0            0 #> 159              0              1              0              0            0 #> 165              0              0              1              0            0 #> 172              0              0              1              0            0 #> 179              0              0              1              0            0 #> 186              0              0              1              0            0 #> 193              0              0              1              0            0 #> 200              0              0              1              0            0 #> 206              0              0              0              1            0 #> 213              0              0              0              1            0 #> 220              0              0              0              1            0 #> 227              0              0              0              1            0 #> 234              0              0              0              1            0 #> 241              0              0              0              1            0 #> 247              0              0              0              0            1 #> 254              0              0              0              0            1 #> 261              0              0              0              0            1 #> 268              0              0              0              0            1 #> 275              0              0              0              0            1 #> 282              0              0              0              0            1 #>  #> $fixed$index #>   [1]  1  1  1  1  1  1  1  2  2  2  2  2  2  2  3  3  3  3  3  3  3  4  4  4  4 #>  [26]  4  4  4  5  5  5  5  5  5  5  6  6  6  6  6  6  7  7  7  7  7  7  7  8  8 #>  [51]  8  8  8  8  8  9  9  9  9  9  9  9 10 10 10 10 10 10 10 11 11 11 11 11 11 #>  [76] 11 12 12 12 12 12 12 13 13 13 13 13 13 13 14 14 14 14 14 14 14 15 15 15 15 #> [101] 15 15 15 16 16 16 16 16 16 16 17 17 17 17 17 17 17 18 18 18 18 18 18 19 19 #> [126] 19 19 19 19 19 20 20 20 20 20 20 20 21 21 21 21 21 21 21 22 22 22 22 22 22 #> [151] 22 23 23 23 23 23 23 23 24 24 24 24 24 24 25 25 25 25 25 25 25 26 26 26 26 #> [176] 26 26 26 27 27 27 27 27 27 27 28 28 28 28 28 28 28 29 29 29 29 29 29 29 30 #> [201] 30 30 30 30 30 31 31 31 31 31 31 31 32 32 32 32 32 32 32 33 33 33 33 33 33 #> [226] 33 34 34 34 34 34 34 34 35 35 35 35 35 35 35 36 36 36 36 36 36 37 37 37 37 #> [251] 37 37 37 38 38 38 38 38 38 38 39 39 39 39 39 39 39 40 40 40 40 40 40 40 41 #> [276] 41 41 41 41 41 41 42 42 42 42 42 42 #>  #>  #> $random #> $random$formula #> [1] \"~0 + fixed + age_group + week\" #>  #> $random$design #>    fixed age_group week #> 1      0         1    0 #> 2      0         1    0 #> 3      0         1    0 #> 4      0         1    0 #> 5      0         1    0 #> 6      0         1    0 #> 7      0         1    0 #> 8      0         0    1 #> 9      0         0    1 #> 10     0         0    1 #> 11     0         0    1 #> 12     0         0    1 #> attr(,\"assign\") #> [1] 1 2 3 #>  #> $random$index #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 #>  #>  #> attr(,\"class\") #> [1] \"enw_formula\" \"list\"         # Model defined without a sparse fixed effects design matrix enw_formula(~1, data[1:20, ]) #> $formula #> [1] \"~1\" #>  #> $parsed_formula #> $parsed_formula$fixed #> [1] \"1\" #>  #> $parsed_formula$random #> NULL #>  #> $parsed_formula$rw #> character(0) #>  #>  #> $expanded_formula #> [1] \"~1\" #>  #> $fixed #> $fixed$formula #> [1] \"~1\" #>  #> $fixed$design #>   (Intercept) #> 1           1 #>  #> $fixed$index #>  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  #>  #> $random #> $random$formula #> [1] \"~1\" #>  #> $random$design #>      (Intercept) #> attr(,\"assign\") #> [1] 0 #>  #> $random$index #> integer(0) #>  #>  #> attr(,\"class\") #> [1] \"enw_formula\" \"list\"         # Model using an interaction in the right hand side of a random effect # to specify an independent random effect per strata. enw_formula(~ (1 + day | week:month), data = data) #> $formula #> [1] \"~(1 + day | week:month)\" #>  #> $parsed_formula #> $parsed_formula$fixed #> [1] \"1\" #>  #> $parsed_formula$random #> $parsed_formula$random[[1]] #> 1 + day | week:month #>  #>  #> $parsed_formula$rw #> character(0) #>  #>  #> $expanded_formula #> [1] \"~1 + week:month + day:week:month\" #>  #> $fixed #> $fixed$formula #> [1] \"~1 + week:month + day:week:month\" #>  #> $fixed$design #>    (Intercept) week0:month0 week1:month0 week2:month0 week3:month0 week4:month0 #> 1            1            1            0            0            0            0 #> 2            1            1            0            0            0            0 #> 3            1            1            0            0            0            0 #> 4            1            1            0            0            0            0 #> 5            1            1            0            0            0            0 #> 6            1            1            0            0            0            0 #> 7            1            1            0            0            0            0 #> 8            1            0            1            0            0            0 #> 9            1            0            1            0            0            0 #> 10           1            0            1            0            0            0 #> 11           1            0            1            0            0            0 #> 12           1            0            1            0            0            0 #> 13           1            0            1            0            0            0 #> 14           1            0            1            0            0            0 #> 15           1            0            0            1            0            0 #> 16           1            0            0            1            0            0 #> 17           1            0            0            1            0            0 #> 18           1            0            0            1            0            0 #> 19           1            0            0            1            0            0 #> 20           1            0            0            1            0            0 #> 21           1            0            0            1            0            0 #> 22           1            0            0            0            1            0 #> 23           1            0            0            0            1            0 #> 24           1            0            0            0            1            0 #> 25           1            0            0            0            1            0 #> 26           1            0            0            0            1            0 #> 27           1            0            0            0            1            0 #> 28           1            0            0            0            1            0 #> 29           1            0            0            0            0            1 #> 30           1            0            0            0            0            1 #> 31           1            0            0            0            0            1 #> 32           1            0            0            0            0            0 #> 33           1            0            0            0            0            0 #> 34           1            0            0            0            0            0 #> 35           1            0            0            0            0            0 #> 36           1            0            0            0            0            0 #> 37           1            0            0            0            0            0 #> 38           1            0            0            0            0            0 #> 39           1            0            0            0            0            0 #> 40           1            0            0            0            0            0 #> 41           1            0            0            0            0            0 #>    week5:month0 week0:month1 week1:month1 week2:month1 week3:month1 #> 1             0            0            0            0            0 #> 2             0            0            0            0            0 #> 3             0            0            0            0            0 #> 4             0            0            0            0            0 #> 5             0            0            0            0            0 #> 6             0            0            0            0            0 #> 7             0            0            0            0            0 #> 8             0            0            0            0            0 #> 9             0            0            0            0            0 #> 10            0            0            0            0            0 #> 11            0            0            0            0            0 #> 12            0            0            0            0            0 #> 13            0            0            0            0            0 #> 14            0            0            0            0            0 #> 15            0            0            0            0            0 #> 16            0            0            0            0            0 #> 17            0            0            0            0            0 #> 18            0            0            0            0            0 #> 19            0            0            0            0            0 #> 20            0            0            0            0            0 #> 21            0            0            0            0            0 #> 22            0            0            0            0            0 #> 23            0            0            0            0            0 #> 24            0            0            0            0            0 #> 25            0            0            0            0            0 #> 26            0            0            0            0            0 #> 27            0            0            0            0            0 #> 28            0            0            0            0            0 #> 29            0            0            0            0            0 #> 30            0            0            0            0            0 #> 31            0            0            0            0            0 #> 32            0            0            0            0            0 #> 33            0            0            0            0            0 #> 34            0            0            0            0            0 #> 35            0            0            0            0            0 #> 36            0            0            0            0            0 #> 37            0            0            0            0            0 #> 38            0            0            0            0            0 #> 39            0            0            0            0            0 #> 40            0            0            0            0            0 #> 41            0            0            0            0            0 #>    week4:month1 week5:month1 week0:month0:day week1:month0:day week2:month0:day #> 1             0            0                0                0                0 #> 2             0            0                1                0                0 #> 3             0            0                2                0                0 #> 4             0            0                3                0                0 #> 5             0            0                4                0                0 #> 6             0            0                5                0                0 #> 7             0            0                6                0                0 #> 8             0            0                0                7                0 #> 9             0            0                0                8                0 #> 10            0            0                0                9                0 #> 11            0            0                0               10                0 #> 12            0            0                0               11                0 #> 13            0            0                0               12                0 #> 14            0            0                0               13                0 #> 15            0            0                0                0               14 #> 16            0            0                0                0               15 #> 17            0            0                0                0               16 #> 18            0            0                0                0               17 #> 19            0            0                0                0               18 #> 20            0            0                0                0               19 #> 21            0            0                0                0               20 #> 22            0            0                0                0                0 #> 23            0            0                0                0                0 #> 24            0            0                0                0                0 #> 25            0            0                0                0                0 #> 26            0            0                0                0                0 #> 27            0            0                0                0                0 #> 28            0            0                0                0                0 #> 29            0            0                0                0                0 #> 30            0            0                0                0                0 #> 31            0            0                0                0                0 #> 32            1            0                0                0                0 #> 33            1            0                0                0                0 #> 34            1            0                0                0                0 #> 35            1            0                0                0                0 #> 36            0            1                0                0                0 #> 37            0            1                0                0                0 #> 38            0            1                0                0                0 #> 39            0            1                0                0                0 #> 40            0            1                0                0                0 #> 41            0            1                0                0                0 #>    week3:month0:day week4:month0:day week5:month0:day week0:month1:day #> 1                 0                0                0                0 #> 2                 0                0                0                0 #> 3                 0                0                0                0 #> 4                 0                0                0                0 #> 5                 0                0                0                0 #> 6                 0                0                0                0 #> 7                 0                0                0                0 #> 8                 0                0                0                0 #> 9                 0                0                0                0 #> 10                0                0                0                0 #> 11                0                0                0                0 #> 12                0                0                0                0 #> 13                0                0                0                0 #> 14                0                0                0                0 #> 15                0                0                0                0 #> 16                0                0                0                0 #> 17                0                0                0                0 #> 18                0                0                0                0 #> 19                0                0                0                0 #> 20                0                0                0                0 #> 21                0                0                0                0 #> 22               21                0                0                0 #> 23               22                0                0                0 #> 24               23                0                0                0 #> 25               24                0                0                0 #> 26               25                0                0                0 #> 27               26                0                0                0 #> 28               27                0                0                0 #> 29                0               28                0                0 #> 30                0               29                0                0 #> 31                0               30                0                0 #> 32                0                0                0                0 #> 33                0                0                0                0 #> 34                0                0                0                0 #> 35                0                0                0                0 #> 36                0                0                0                0 #> 37                0                0                0                0 #> 38                0                0                0                0 #> 39                0                0                0                0 #> 40                0                0                0                0 #> 41                0                0                0                0 #>    week1:month1:day week2:month1:day week3:month1:day week4:month1:day #> 1                 0                0                0                0 #> 2                 0                0                0                0 #> 3                 0                0                0                0 #> 4                 0                0                0                0 #> 5                 0                0                0                0 #> 6                 0                0                0                0 #> 7                 0                0                0                0 #> 8                 0                0                0                0 #> 9                 0                0                0                0 #> 10                0                0                0                0 #> 11                0                0                0                0 #> 12                0                0                0                0 #> 13                0                0                0                0 #> 14                0                0                0                0 #> 15                0                0                0                0 #> 16                0                0                0                0 #> 17                0                0                0                0 #> 18                0                0                0                0 #> 19                0                0                0                0 #> 20                0                0                0                0 #> 21                0                0                0                0 #> 22                0                0                0                0 #> 23                0                0                0                0 #> 24                0                0                0                0 #> 25                0                0                0                0 #> 26                0                0                0                0 #> 27                0                0                0                0 #> 28                0                0                0                0 #> 29                0                0                0                0 #> 30                0                0                0                0 #> 31                0                0                0                0 #> 32                0                0                0               31 #> 33                0                0                0               32 #> 34                0                0                0               33 #> 35                0                0                0               34 #> 36                0                0                0                0 #> 37                0                0                0                0 #> 38                0                0                0                0 #> 39                0                0                0                0 #> 40                0                0                0                0 #> 41                0                0                0                0 #>    week5:month1:day #> 1                 0 #> 2                 0 #> 3                 0 #> 4                 0 #> 5                 0 #> 6                 0 #> 7                 0 #> 8                 0 #> 9                 0 #> 10                0 #> 11                0 #> 12                0 #> 13                0 #> 14                0 #> 15                0 #> 16                0 #> 17                0 #> 18                0 #> 19                0 #> 20                0 #> 21                0 #> 22                0 #> 23                0 #> 24                0 #> 25                0 #> 26                0 #> 27                0 #> 28                0 #> 29                0 #> 30                0 #> 31                0 #> 32                0 #> 33                0 #> 34                0 #> 35                0 #> 36               35 #> 37               36 #> 38               37 #> 39               38 #> 40               39 #> 41               40 #>  #> $fixed$index #>   [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #>  [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  1  2  3  4  5  6  7  8  9 #>  [51] 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #>  [76] 35 36 37 38 39 40 41  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 #> [101] 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  1  2 #> [126]  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #> [151] 28 29 30 31 32 33 34 35 36 37 38 39 40 41  1  2  3  4  5  6  7  8  9 10 11 #> [176] 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #> [201] 37 38 39 40 41  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 #> [226] 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  1  2  3  4 #> [251]  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #> [276] 30 31 32 33 34 35 36 37 38 39 40 41 #>  #>  #> $random #> $random$formula #> [1] \"~0 + fixed + week__month0 + week__month1 + day__week__month0 + day__week__month1\" #>  #> $random$design #>    fixed week__month0 week__month1 day__week__month0 day__week__month1 #> 1      0            1            0                 0                 0 #> 2      0            1            0                 0                 0 #> 3      0            1            0                 0                 0 #> 4      0            1            0                 0                 0 #> 5      0            1            0                 0                 0 #> 6      0            1            0                 0                 0 #> 7      0            0            1                 0                 0 #> 8      0            0            1                 0                 0 #> 9      0            0            1                 0                 0 #> 10     0            0            1                 0                 0 #> 11     0            0            1                 0                 0 #> 12     0            0            1                 0                 0 #> 13     0            0            0                 1                 0 #> 14     0            0            0                 1                 0 #> 15     0            0            0                 1                 0 #> 16     0            0            0                 1                 0 #> 17     0            0            0                 1                 0 #> 18     0            0            0                 1                 0 #> 19     0            0            0                 0                 1 #> 20     0            0            0                 0                 1 #> 21     0            0            0                 0                 1 #> 22     0            0            0                 0                 1 #> 23     0            0            0                 0                 1 #> 24     0            0            0                 0                 1 #> attr(,\"assign\") #> [1] 1 2 3 4 5 #>  #> $random$index #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #>  #>  #> attr(,\"class\") #> [1] \"enw_formula\" \"list\""},{"path":"package.epinowcast.org/dev/reference/enw_formula_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Format formula data for use with stan — enw_formula_as_data_list","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"Format formula data use stan","code":""},{"path":"package.epinowcast.org/dev/reference/enw_formula_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"","code":"enw_formula_as_data_list(formula, prefix, drop_intercept = FALSE)"},{"path":"package.epinowcast.org/dev/reference/enw_formula_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"formula output enw_formula(). prefix character string indicating variable label use prefix. drop_intercept Logical, defaults FALSE. intercept included fixed effect excluded. used internally model modules intercept must present/absent.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_formula_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"list defining model formula. includes: prefix_fdesign: fixed effects design matrix prefix_fnrow: number rows fixed design matrix prefix_findex: index linking design matrix rows  observations prefix_fnindex: length index prefix_fncol: number columns (.e effects) fixed effect design matrix (minus 1 drop_intercept = TRUE). prefix_rdesign: random effects design matrix prefix_rncol: number columns (.e random effects) random effect design matrix (minus 1 intercept dropped).","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_formula_as_data_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"","code":"f <- enw_formula(~ 1 + (1 | cyl), mtcars) enw_formula_as_data_list(f, \"mtcars\") #> $mtcars_fdesign #>   (Intercept) cyl4 cyl6 cyl8 #> 1           1    0    1    0 #> 3           1    1    0    0 #> 5           1    0    0    1 #>  #> $mtcars_fnrow #> [1] 3 #>  #> $mtcars_findex #>  [1] 1 1 2 1 3 1 3 2 2 1 1 3 3 3 3 3 3 2 2 2 2 3 3 3 3 2 2 2 3 1 3 2 #>  #> $mtcars_fnindex #> [1] 32 #>  #> $mtcars_fncol #> [1] 4 #>  #> $mtcars_rdesign #>   fixed cyl #> 1     0   1 #> 2     0   1 #> 3     0   1 #> attr(,\"assign\") #> [1] 1 2 #>  #> $mtcars_rncol #> [1] 1 #>   # A missing formula produces the default list enw_formula_as_data_list(prefix = \"missing\") #> $missing_fdesign #> numeric(0) #>  #> $missing_fnrow #> [1] 0 #>  #> $missing_findex #> numeric(0) #>  #> $missing_fnindex #> [1] 0 #>  #> $missing_fncol #> [1] 0 #>  #> $missing_rdesign #> numeric(0) #>  #> $missing_rncol #> [1] 0 #>"},{"path":"package.epinowcast.org/dev/reference/enw_incidence_to_cumulative.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate cumulative reported cases from incidence of new reports — enw_incidence_to_cumulative","title":"Calculate cumulative reported cases from incidence of new reports — enw_incidence_to_cumulative","text":"Calculate cumulative reported cases incidence new reports","code":""},{"path":"package.epinowcast.org/dev/reference/enw_incidence_to_cumulative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate cumulative reported cases from incidence of new reports — enw_incidence_to_cumulative","text":"","code":"enw_incidence_to_cumulative(obs, by = c())"},{"path":"package.epinowcast.org/dev/reference/enw_incidence_to_cumulative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate cumulative reported cases from incidence of new reports — enw_incidence_to_cumulative","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), new_confirm (incident observations reference report date). character vector describing stratification observations. defaults grouping. used modelling multiple time series order identify downstream modelling","code":""},{"path":"package.epinowcast.org/dev/reference/enw_incidence_to_cumulative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate cumulative reported cases from incidence of new reports — enw_incidence_to_cumulative","text":"input data frame new variable confirm.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_incidence_to_cumulative.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate cumulative reported cases from incidence of new reports — enw_incidence_to_cumulative","text":"","code":"# Default reconstruct incidence dt <- germany_covid19_hosp[location == \"DE\"][age_group == \"00+\"] enw_cumulative_to_incidence(dt) #>        reference_date location age_group confirm report_date new_confirm delay #>     1:     2021-04-06       DE       00+     149  2021-04-06         149     0 #>     2:     2021-04-06       DE       00+     289  2021-04-07         140     1 #>     3:     2021-04-06       DE       00+     350  2021-04-08          61     2 #>     4:     2021-04-06       DE       00+     402  2021-04-09          52     3 #>     5:     2021-04-06       DE       00+     438  2021-04-10          36     4 #>    ---                                                                         #> 12911:     2021-10-18       DE       00+     113  2021-10-19          70     1 #> 12912:     2021-10-18       DE       00+     142  2021-10-20          29     2 #> 12913:     2021-10-19       DE       00+     223  2021-10-19         223     0 #> 12914:     2021-10-19       DE       00+     387  2021-10-20         164     1 #> 12915:     2021-10-20       DE       00+     235  2021-10-20         235     0  # Make use of maximum reported to calculate empirical daily reporting dt <- enw_assign_group(dt) dt <- enw_add_max_reported(dt) enw_cumulative_to_incidence(dt) #>        reference_date .group max_confirm location age_group confirm report_date #>     1:     2021-04-06      1         708       DE       00+     149  2021-04-06 #>     2:     2021-04-06      1         708       DE       00+     289  2021-04-07 #>     3:     2021-04-06      1         708       DE       00+     350  2021-04-08 #>     4:     2021-04-06      1         708       DE       00+     402  2021-04-09 #>     5:     2021-04-06      1         708       DE       00+     438  2021-04-10 #>    ---                                                                          #> 12911:     2021-10-18      1         142       DE       00+     113  2021-10-19 #> 12912:     2021-10-18      1         142       DE       00+     142  2021-10-20 #> 12913:     2021-10-19      1         387       DE       00+     223  2021-10-19 #> 12914:     2021-10-19      1         387       DE       00+     387  2021-10-20 #> 12915:     2021-10-20      1         235       DE       00+     235  2021-10-20 #>        cum_prop_reported new_confirm delay prop_reported #>     1:         0.2104520         149     0    0.21045198 #>     2:         0.4081921         140     1    0.19774011 #>     3:         0.4943503          61     2    0.08615819 #>     4:         0.5677966          52     3    0.07344633 #>     5:         0.6186441          36     4    0.05084746 #>    ---                                                   #> 12911:         0.7957746          70     1    0.49295775 #> 12912:         1.0000000          29     2    0.20422535 #> 12913:         0.5762274         223     0    0.57622739 #> 12914:         1.0000000         164     1    0.42377261 #> 12915:         1.0000000         235     0    1.00000000"},{"path":"package.epinowcast.org/dev/reference/enw_latest_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter observations to the latest available reported — enw_latest_data","title":"Filter observations to the latest available reported — enw_latest_data","text":"Filter observations latest available reported data reference date. Note filtering maximum report date cases data may updated maximum number days.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_latest_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter observations to the latest available reported — enw_latest_data","text":"","code":"enw_latest_data(obs)"},{"path":"package.epinowcast.org/dev/reference/enw_latest_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter observations to the latest available reported — enw_latest_data","text":"obs observation data frame containing report_date reference_date columns.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_latest_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter observations to the latest available reported — enw_latest_data","text":"data.frame observations filtered latest available data reference date.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_latest_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter observations to the latest available reported — enw_latest_data","text":"","code":"# Filter for latest reported data enw_latest_data(germany_covid19_hosp) #>        reference_date location age_group confirm report_date #>     1:     2021-04-06       DE       00+     708  2021-06-26 #>     2:     2021-04-06       DE     00-04      11  2021-06-26 #>     3:     2021-04-06       DE     05-14       5  2021-06-26 #>     4:     2021-04-06       DE     15-34      75  2021-06-26 #>     5:     2021-04-06       DE     35-59     192  2021-06-26 #>    ---                                                       #> 23558:     2021-10-20    DE-TH     05-14       1  2021-10-20 #> 23559:     2021-10-20    DE-TH     15-34       2  2021-10-20 #> 23560:     2021-10-20    DE-TH     35-59       1  2021-10-20 #> 23561:     2021-10-20    DE-TH     60-79       5  2021-10-20 #> 23562:     2021-10-20    DE-TH       80+       5  2021-10-20"},{"path":"package.epinowcast.org/dev/reference/enw_manual_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a model manually using fixed and random effects — enw_manual_formula","title":"Define a model manually using fixed and random effects — enw_manual_formula","text":"typical use cases enw_formula() provide sufficient flexibility allow models defined. However, may instances manual model specification required. function supports allowing user supply vectors fixed, random, customised random effects (first treated fixed effect terms). Prior 1.0.0 main interface specifying models still used internally handle parts model specification process.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_manual_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a model manually using fixed and random effects — enw_manual_formula","text":"","code":"enw_manual_formula(   data,   fixed = c(),   random = c(),   custom_random = c(),   no_contrasts = FALSE,   add_intercept = TRUE )"},{"path":"package.epinowcast.org/dev/reference/enw_manual_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a model manually using fixed and random effects — enw_manual_formula","text":"data data.frame observations. must include variables used supplied formula. fixed character vector fixed effects. random character vector random effects. Random effects specified added fixed effects. custom_random vector random effects. Random effects added added vector fixed effects. can used random effects fixed effects partial name match. no_contrasts Logical, defaults FALSE. TRUE means variable uses contrast. Alternatively character vector variables can supplied indicating variables  contrasts. add_intercept Logical, defaults FALSE. intercept added fixed effects.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_manual_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a model manually using fixed and random effects — enw_manual_formula","text":"list specifying fixed effects (formula, design matrix, design matrix index), random effects (formula design matrix).","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_manual_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a model manually using fixed and random effects — enw_manual_formula","text":"","code":"data <- enw_example(\"prep\")$metareference[[1]] enw_manual_formula(data, fixed = \"week\", random = \"day_of_week\") #> $fixed #> $fixed$formula #> [1] \"~1 + week + day_of_week\" #>  #> $fixed$design #>    (Intercept) week day_of_weekFriday day_of_weekMonday day_of_weekSaturday #> 1            1    0                 0                 0                   0 #> 2            1    0                 0                 0                   0 #> 3            1    0                 0                 0                   0 #> 4            1    0                 1                 0                   0 #> 5            1    0                 0                 0                   1 #> 6            1    0                 0                 0                   0 #> 7            1    0                 0                 1                   0 #> 8            1    1                 0                 0                   0 #> 9            1    1                 0                 0                   0 #> 10           1    1                 0                 0                   0 #> 11           1    1                 1                 0                   0 #> 12           1    1                 0                 0                   1 #> 13           1    1                 0                 0                   0 #> 14           1    1                 0                 1                   0 #> 15           1    2                 0                 0                   0 #> 16           1    2                 0                 0                   0 #> 17           1    2                 0                 0                   0 #> 18           1    2                 1                 0                   0 #> 19           1    2                 0                 0                   1 #> 20           1    2                 0                 0                   0 #> 21           1    2                 0                 1                   0 #> 22           1    3                 0                 0                   0 #> 23           1    3                 0                 0                   0 #> 24           1    3                 0                 0                   0 #> 25           1    3                 1                 0                   0 #> 26           1    3                 0                 0                   1 #> 27           1    3                 0                 0                   0 #> 28           1    3                 0                 1                   0 #> 29           1    4                 0                 0                   0 #> 30           1    4                 0                 0                   0 #> 31           1    4                 0                 0                   0 #> 32           1    4                 1                 0                   0 #> 33           1    4                 0                 0                   1 #> 34           1    4                 0                 0                   0 #> 35           1    4                 0                 1                   0 #> 36           1    5                 0                 0                   0 #> 37           1    5                 0                 0                   0 #> 38           1    5                 0                 0                   0 #> 39           1    5                 1                 0                   0 #> 40           1    5                 0                 0                   1 #> 41           1    5                 0                 0                   0 #>    day_of_weekSunday day_of_weekThursday day_of_weekTuesday #> 1                  0                   0                  1 #> 2                  0                   0                  0 #> 3                  0                   1                  0 #> 4                  0                   0                  0 #> 5                  0                   0                  0 #> 6                  1                   0                  0 #> 7                  0                   0                  0 #> 8                  0                   0                  1 #> 9                  0                   0                  0 #> 10                 0                   1                  0 #> 11                 0                   0                  0 #> 12                 0                   0                  0 #> 13                 1                   0                  0 #> 14                 0                   0                  0 #> 15                 0                   0                  1 #> 16                 0                   0                  0 #> 17                 0                   1                  0 #> 18                 0                   0                  0 #> 19                 0                   0                  0 #> 20                 1                   0                  0 #> 21                 0                   0                  0 #> 22                 0                   0                  1 #> 23                 0                   0                  0 #> 24                 0                   1                  0 #> 25                 0                   0                  0 #> 26                 0                   0                  0 #> 27                 1                   0                  0 #> 28                 0                   0                  0 #> 29                 0                   0                  1 #> 30                 0                   0                  0 #> 31                 0                   1                  0 #> 32                 0                   0                  0 #> 33                 0                   0                  0 #> 34                 1                   0                  0 #> 35                 0                   0                  0 #> 36                 0                   0                  1 #> 37                 0                   0                  0 #> 38                 0                   1                  0 #> 39                 0                   0                  0 #> 40                 0                   0                  0 #> 41                 1                   0                  0 #>    day_of_weekWednesday #> 1                     0 #> 2                     1 #> 3                     0 #> 4                     0 #> 5                     0 #> 6                     0 #> 7                     0 #> 8                     0 #> 9                     1 #> 10                    0 #> 11                    0 #> 12                    0 #> 13                    0 #> 14                    0 #> 15                    0 #> 16                    1 #> 17                    0 #> 18                    0 #> 19                    0 #> 20                    0 #> 21                    0 #> 22                    0 #> 23                    1 #> 24                    0 #> 25                    0 #> 26                    0 #> 27                    0 #> 28                    0 #> 29                    0 #> 30                    1 #> 31                    0 #> 32                    0 #> 33                    0 #> 34                    0 #> 35                    0 #> 36                    0 #> 37                    1 #> 38                    0 #> 39                    0 #> 40                    0 #> 41                    0 #>  #> $fixed$index #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #>  #>  #> $random #> $random$formula #> [1] \"~0 + fixed + day_of_week\" #>  #> $random$design #>   fixed day_of_week #> 1     1           0 #> 2     0           1 #> 3     0           1 #> 4     0           1 #> 5     0           1 #> 6     0           1 #> 7     0           1 #> 8     0           1 #> attr(,\"assign\") #> [1] 1 2 #>  #> $random$index #> [1] 1 2 3 4 5 6 7 8 #>  #>"},{"path":"package.epinowcast.org/dev/reference/enw_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_metadata","title":"FUNCTION_TITLE — enw_metadata","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_metadata","text":"","code":"enw_metadata(obs, target_date = c(\"reference_date\", \"report_date\"))"},{"path":"package.epinowcast.org/dev/reference/enw_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_metadata","text":"obs PARAM_DESCRIPTION target_date PARAM_DESCRIPTION, Default: 'reference_date'","code":""},{"path":"package.epinowcast.org/dev/reference/enw_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_metadata","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing reference data model module — enw_missing","title":"Missing reference data model module — enw_missing","text":"Missing reference data model module","code":""},{"path":"package.epinowcast.org/dev/reference/enw_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing reference data model module — enw_missing","text":"","code":"enw_missing(formula = ~1, data)"},{"path":"package.epinowcast.org/dev/reference/enw_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing reference data model module — enw_missing","text":"formula formula (implemented enw_formula()) describing missing data proportion logit scale reference date. can use features defined reference date defined metareference produced enw_preprocess_data(). \"~0\" implies model required. Otherwise intercept always needed data Output enw_preprocess_data().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Missing reference data model module — enw_missing","text":"list containing supplied formulas, data passed list describing models, data.frame describing priors used, function takes output data priors returns function can used sample tightened version prior distribution.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing reference data model module — enw_missing","text":"","code":"# Missing model with a fixed intercept only enw_missing(data = enw_example(\"preprocessed\")) #> $formula #> [1] \"~1\" #>  #> $data #> $data$miss_fdesign #>    (Intercept) #> 1            1 #> 2            1 #> 3            1 #> 4            1 #> 5            1 #> 6            1 #> 7            1 #> 8            1 #> 9            1 #> 10           1 #> 11           1 #> 12           1 #> 13           1 #> 14           1 #> 15           1 #> 16           1 #> 17           1 #> 18           1 #> 19           1 #> 20           1 #> 21           1 #> 22           1 #> 23           1 #> 24           1 #> 25           1 #> 26           1 #> 27           1 #> 28           1 #> 29           1 #> 30           1 #> 31           1 #> 32           1 #> 33           1 #> 34           1 #> 35           1 #> 36           1 #> 37           1 #> 38           1 #> 39           1 #> 40           1 #> 41           1 #> attr(,\"assign\") #> [1] 0 #>  #> $data$miss_fnrow #> [1] 41 #>  #> $data$miss_findex #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #>  #> $data$miss_fnindex #> [1] 41 #>  #> $data$miss_fncol #> [1] 0 #>  #> $data$miss_rdesign #>      (Intercept) #> attr(,\"assign\") #> [1] 0 #>  #> $data$miss_rncol #> [1] 0 #>  #> $data$miss_st #> [1] 22 #>  #> $data$miss_cst #> [1] 22 #>  #> $data$missing_reference #>  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #>  #> $data$obs_by_report #>         0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17 #>  [1,] 381 362 343 324 305 286 267 248 229 210 191 172 153 134 115  96  77  58 #>  [2,] 401 382 363 344 325 306 287 268 249 230 211 192 173 154 135 116  97  78 #>  [3,] 421 402 383 364 345 326 307 288 269 250 231 212 193 174 155 136 117  98 #>  [4,] 441 422 403 384 365 346 327 308 289 270 251 232 213 194 175 156 137 118 #>  [5,] 461 442 423 404 385 366 347 328 309 290 271 252 233 214 195 176 157 138 #>  [6,] 481 462 443 424 405 386 367 348 329 310 291 272 253 234 215 196 177 158 #>  [7,] 501 482 463 444 425 406 387 368 349 330 311 292 273 254 235 216 197 178 #>  [8,] 521 502 483 464 445 426 407 388 369 350 331 312 293 274 255 236 217 198 #>  [9,] 541 522 503 484 465 446 427 408 389 370 351 332 313 294 275 256 237 218 #> [10,] 561 542 523 504 485 466 447 428 409 390 371 352 333 314 295 276 257 238 #> [11,] 581 562 543 524 505 486 467 448 429 410 391 372 353 334 315 296 277 258 #> [12,] 601 582 563 544 525 506 487 468 449 430 411 392 373 354 335 316 297 278 #> [13,] 621 602 583 564 545 526 507 488 469 450 431 412 393 374 355 336 317 298 #> [14,] 641 622 603 584 565 546 527 508 489 470 451 432 413 394 375 356 337 318 #> [15,] 661 642 623 604 585 566 547 528 509 490 471 452 433 414 395 376 357 338 #> [16,] 681 662 643 624 605 586 567 548 529 510 491 472 453 434 415 396 377 358 #> [17,] 701 682 663 644 625 606 587 568 549 530 511 492 473 454 435 416 397 378 #> [18,] 721 702 683 664 645 626 607 588 569 550 531 512 493 474 455 436 417 398 #> [19,] 741 722 703 684 665 646 627 608 589 570 551 532 513 494 475 456 437 418 #> [20,] 761 742 723 704 685 666 647 628 609 590 571 552 533 514 495 476 457 438 #> [21,] 781 762 743 724 705 686 667 648 629 610 591 572 553 534 515 496 477 458 #> [22,] 801 782 763 744 725 706 687 668 649 630 611 592 573 554 535 516 497 478 #>        18  19 #>  [1,]  39  20 #>  [2,]  59  40 #>  [3,]  79  60 #>  [4,]  99  80 #>  [5,] 119 100 #>  [6,] 139 120 #>  [7,] 159 140 #>  [8,] 179 160 #>  [9,] 199 180 #> [10,] 219 200 #> [11,] 239 220 #> [12,] 259 240 #> [13,] 279 260 #> [14,] 299 280 #> [15,] 319 300 #> [16,] 339 320 #> [17,] 359 340 #> [18,] 379 360 #> [19,] 399 380 #> [20,] 419 400 #> [21,] 439 420 #> [22,] 459 440 #>  #> $data$model_miss #> [1] 1 #>  #> $data$miss_obs #> [1] 22 #>  #>  #> $priors #>        variable #> 1:     miss_int #> 2: miss_beta_sd #>                                                                         description #> 1:          Intercept on the logit scale for the proportion missing reference dates #> 2: Standard deviation of scaled pooled logit missing reference date\\n       effects #>             distribution mean sd #> 1:                Normal    0  1 #> 2: Zero truncated normal    0  1 #>  #> $inits #> function (data, priors)  #> { #>     priors <- enw_priors_as_data_list(priors) #>     fn <- function() { #>         init <- list(miss_int = numeric(0), miss_beta = numeric(0),  #>             miss_beta_sd = numeric(0)) #>         if (data$model_miss) { #>             init$miss_int <- rnorm(1, priors$miss_int_p[1], priors$miss_int_p[2]) #>             if (data$miss_fncol > 0) { #>                 init$miss_beta <- rnorm(data$miss_fncol, 0, 0.01) #>             } #>             if (data$miss_rncol > 0) { #>                 init$miss_beta_sd <- abs(rnorm(data$miss_rncol,  #>                   priors$miss_beta_sd_p[1], priors$miss_beta_sd_p[2]/10)) #>             } #>         } #>         return(init) #>     } #>     return(fn) #> } #> <bytecode: 0x55b4e7ce1278> #> <environment: 0x55b4e7cdd908> #>   # No missingness model specified enw_missing(~0, data = enw_example(\"preprocessed\")) #> $formula #> [1] \"~0\" #>  #> $data #> $data$miss_fdesign #> numeric(0) #>  #> $data$miss_fnrow #> [1] 0 #>  #> $data$miss_findex #> numeric(0) #>  #> $data$miss_fnindex #> [1] 0 #>  #> $data$miss_fncol #> [1] 0 #>  #> $data$miss_rdesign #> numeric(0) #>  #> $data$miss_rncol #> [1] 0 #>  #> $data$missing_reference #> numeric(0) #>  #> $data$obs_by_report #> numeric(0) #>  #> $data$miss_st #> numeric(0) #>  #> $data$miss_cst #> numeric(0) #>  #> $data$model_miss #> [1] 0 #>  #> $data$miss_obs #> [1] 0 #>  #>  #> $priors #>        variable #> 1:     miss_int #> 2: miss_beta_sd #>                                                                         description #> 1:          Intercept on the logit scale for the proportion missing reference dates #> 2: Standard deviation of scaled pooled logit missing reference date\\n       effects #>             distribution mean sd #> 1:                Normal    0  1 #> 2: Zero truncated normal    0  1 #>  #> $inits #> function (data, priors)  #> { #>     priors <- enw_priors_as_data_list(priors) #>     fn <- function() { #>         init <- list(miss_int = numeric(0), miss_beta = numeric(0),  #>             miss_beta_sd = numeric(0)) #>         if (data$model_miss) { #>             init$miss_int <- rnorm(1, priors$miss_int_p[1], priors$miss_int_p[2]) #>             if (data$miss_fncol > 0) { #>                 init$miss_beta <- rnorm(data$miss_fncol, 0, 0.01) #>             } #>             if (data$miss_rncol > 0) { #>                 init$miss_beta_sd <- abs(rnorm(data$miss_rncol,  #>                   priors$miss_beta_sd_p[1], priors$miss_beta_sd_p[2]/10)) #>             } #>         } #>         return(init) #>     } #>     return(fn) #> } #> <bytecode: 0x55b4e7ce1278> #> <environment: 0x55b4e76fd358> #>"},{"path":"package.epinowcast.org/dev/reference/enw_missing_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract reports with missing reference dates — enw_missing_reference","title":"Extract reports with missing reference dates — enw_missing_reference","text":"Returns reports missing reference dates well calculating proportion reports given reference date missing.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_missing_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract reports with missing reference dates — enw_missing_reference","text":"","code":"enw_missing_reference(obs)"},{"path":"package.epinowcast.org/dev/reference/enw_missing_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract reports with missing reference dates — enw_missing_reference","text":"obs data frame produced enw_cumulative_to_incidence(). Must contain following variables: report_date, reference_date, .group, confirm, new_confirm.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_missing_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract reports with missing reference dates — enw_missing_reference","text":"data.table missing counts proportions report date group.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_missing_reference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract reports with missing reference dates — enw_missing_reference","text":"","code":"obs <- data.frame(   report_date = c(\"2021-10-01\", \"2021-10-03\"), reference_date = \"2021-10-01\",   confirm = 1 ) obs <- rbind(   obs,   data.frame(report_date = \"2021-10-04\", reference_date = NA, confirm = 4) ) obs <- enw_complete_dates(obs) obs <- enw_assign_group(obs) obs <- enw_cumulative_to_incidence(obs) enw_missing_reference(obs) #>    report_date .group confirm prop_missing #> 1:  2021-10-01      1       0            0 #> 2:  2021-10-02      1       0          NaN #> 3:  2021-10-03      1       0          NaN #> 4:  2021-10-04      1       4            1"},{"path":"package.epinowcast.org/dev/reference/enw_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and compile the nowcasting model — enw_model","title":"Load and compile the nowcasting model — enw_model","text":"Load compile nowcasting model","code":""},{"path":"package.epinowcast.org/dev/reference/enw_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and compile the nowcasting model — enw_model","text":"","code":"enw_model(   model = system.file(\"stan\", \"epinowcast.stan\", package = \"epinowcast\"),   include = system.file(\"stan\", package = \"epinowcast\"),   compile = TRUE,   threads = FALSE,   profile = FALSE,   stanc_options = list(),   verbose = TRUE,   ... )"},{"path":"package.epinowcast.org/dev/reference/enw_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and compile the nowcasting model — enw_model","text":"model character string indicating path model. supplied package default model used. include character string specifying path stan files include model. missing package default used. compile Logical, defaults TRUE. model loaded compiled using cmdstanr::cmdstan_model(). threads Logical, defaults FALSE. model compile support multi-thread support chain. Note requires use threads_per_chain argument model fitting using enw_sample(), epinowcast(). profile Logical, defaults FALSE. model profiled? profiling see cmdstanr documentation. # nolint stanc_options list options pass stanc_options cmdstanr::cmdstan_model(). default nothing passed potentially users may wish pass optimisation flags example.See documentation cmdstanr::cmdstan_model() details. verbose Logical, defaults TRUE. verbose messages shown. ... Additional arguments passed cmdstanr::cmdstan_model().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and compile the nowcasting model — enw_model","text":"cmdstanr model.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and compile the nowcasting model — enw_model","text":"","code":"if (FALSE) { # interactive() mod <- enw_model() }"},{"path":"package.epinowcast.org/dev/reference/enw_nowcast_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_nowcast_samples","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_nowcast_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"","code":"enw_nowcast_samples(fit, obs)"},{"path":"package.epinowcast.org/dev/reference/enw_nowcast_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"fit PARAM_DESCRIPTION obs PARAM_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_nowcast_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_nowcast_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_nowcast_summary","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_nowcast_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"","code":"enw_nowcast_summary(fit, obs, probs = c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95))"},{"path":"package.epinowcast.org/dev/reference/enw_nowcast_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"fit PARAM_DESCRIPTION obs PARAM_DESCRIPTION probs PARAM_DESCRIPTION, Default: c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95)","code":""},{"path":"package.epinowcast.org/dev/reference/enw_nowcast_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup observation model and data — enw_obs","title":"Setup observation model and data — enw_obs","text":"Setup observation model data","code":""},{"path":"package.epinowcast.org/dev/reference/enw_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup observation model and data — enw_obs","text":"","code":"enw_obs(family = c(\"negbin\", \"poisson\"), data)"},{"path":"package.epinowcast.org/dev/reference/enw_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup observation model and data — enw_obs","text":"family Character string, observation model use likelihood; enforced base::match.arg(). default negative binomial (\"negbin\") Poisson (\"poisson\") also available. Support additional observation models planned, please open issue suggestions. data Output enw_preprocess_data().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup observation model and data — enw_obs","text":"list required stan.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_obs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setup observation model and data — enw_obs","text":"","code":"enw_obs(data = enw_example(\"preprocessed\")) #> $family #> [1] \"negbin\" #>  #> $data #> $data$n #> [1] 630 #>  #> $data$t #> [1] 41 #>  #> $data$s #> [1] 41 #>  #> $data$g #> [1] 1 #>  #> $data$groups #> [1] 1 #>  #> $data$st #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #>  #> $data$ts #>        1 #>  [1,]  1 #>  [2,]  2 #>  [3,]  3 #>  [4,]  4 #>  [5,]  5 #>  [6,]  6 #>  [7,]  7 #>  [8,]  8 #>  [9,]  9 #> [10,] 10 #> [11,] 11 #> [12,] 12 #> [13,] 13 #> [14,] 14 #> [15,] 15 #> [16,] 16 #> [17,] 17 #> [18,] 18 #> [19,] 19 #> [20,] 20 #> [21,] 21 #> [22,] 22 #> [23,] 23 #> [24,] 24 #> [25,] 25 #> [26,] 26 #> [27,] 27 #> [28,] 28 #> [29,] 29 #> [30,] 30 #> [31,] 31 #> [32,] 32 #> [33,] 33 #> [34,] 34 #> [35,] 35 #> [36,] 36 #> [37,] 37 #> [38,] 38 #> [39,] 39 #> [40,] 40 #> [41,] 41 #>  #> $data$sl #>  [1] 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 19 18 17 #> [26] 16 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1 #>  #> $data$csl #>  [1]  20  40  60  80 100 120 140 160 180 200 220 240 260 280 300 320 340 360 380 #> [20] 400 420 440 459 477 494 510 525 539 552 564 575 585 594 602 609 615 620 624 #> [39] 627 629 630 #>  #> $data$sg #>  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [39] 1 1 1 #>  #> $data$dmax #> [1] 20 #>  #> $data$sdmax #>  [1] 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 #> [26] 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 #>  #> $data$csdmax #>  [1]  20  40  60  80 100 120 140 160 180 200 220 240 260 280 300 320 340 360 380 #> [20] 400 420 440 460 480 500 520 540 560 580 600 620 640 660 680 700 720 740 760 #> [39] 780 800 820 #>  #> $data$obs #>        0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 #>  [1,] 21 12  3  4  3  0  1  2  4  3  0  0  2  0  0  0  1  2  1  0 #>  [2,] 22 12  4  5  0  1 10  2  5  3  0  1  0  3  1  0  1  0  0  0 #>  [3,] 28 15  3  3  0  1  3  2  3  2  1  0  2  3  0  3  0  0  0  0 #>  [4,] 19 13  0  0  0  4  2  2  2  1  1  1  0  1  0  0  1  0  0  0 #>  [5,] 20  7  1  3 10  3  0  4  3  3  2  0  1  2  0  1  2  1  0  0 #>  [6,]  9  6  6  0  4  5  4  0  1  4  0  0  1  1  1  2  0  0  0  2 #>  [7,]  3 16  4  4  1  1  2  0  0  0  0  1  1  1  1  0  0  0  1  0 #>  [8,] 36 19 10  4  2  3  0  3  2  3  0  2  1  1  2  2  0  0  1  0 #>  [9,] 28 18  8  4  1  2  3  6  1  5  2  2  3  0  2  0  1  0  0  0 #> [10,] 34 19  2  1  5  2  4  3  7  3  1  0  4  3  3  1  2  0  0  1 #> [11,] 30 12  4  1 10  6  0  2  2  1  2  1  4  0  2  3  0  0  4  0 #> [12,] 31  8  4  9  8  2  5  2  1  1  2  4  1  3  1  0  1  2  2  2 #> [13,]  8  4 14  8  6  5  1  3  0  4  1  2  4  2  0  1  2  2  2  0 #> [14,]  9  6  2  3  0  0  0  0  1  2  4  1  0  0  0  0  0  0  0  0 #> [15,] 35 11  6  4  4  1  0  2  2  2  2  0  0  1  4  1  0  0  0  0 #> [16,] 51 28 25  3  5  2  3  5  5  7  1  0  0  4  5  5  1  1  0  0 #> [17,] 47 37  9  2  2  3  4  4  4  3  0  2  0 10  4  3  0  0  0  0 #> [18,] 36 20  2  4 11  8  8  3  5  2  0  2  4  4  0  2  2  0  0  1 #> [19,] 38 16  3 15 14  7  5  5  0  0  5  0  5  1  6  0  0  3  1  0 #> [20,]  7  5  5 11  7  5  1  3  1  6  3  3  4  1  1  7  2  3  2  0 #> [21,] 13 13  8  6  1  3  2  0  0  2  0  2  0  5  3  0  0  0  0  1 #> [22,] 51 43  6  4  4  3  1  6  4  5  5  4  0  4  5  0  2  2  0  0 #> [23,] 51 43 18  5  6  1  2  8  7  7  6  1  0  4  3  1  3  0  0  0 #> [24,] 45 21  6  2  2 11 17  5  7  4  1  0  5  3  0  2  2  0  0  0 #> [25,] 47 31  5  4 20  6  1  9  3  1  0  2  1  5  2  0  0  0  0  0 #> [26,] 40 15  6 23 14 13  8  9  0  1  3  3  2  0  1  1  0  0  0  0 #> [27,] 13 14 27 14  7  7  0  0  0  7  1  4  2  1  0  0  0  0  0  0 #> [28,] 14 23 11  3  1  1  0  0  0  1  0  2  2  0  0  0  0  0  0  0 #> [29,] 78 43 23 11  5  1  0  5  2  2  1  4  0  0  0  0  0  0  0  0 #> [30,] 80 53 17 15  7  3 14 12 13 13  6  0  0  0  0  0  0  0  0  0 #> [31,] 89 48 28  8  1 14 13 13 10 12  1  0  0  0  0  0  0  0  0  0 #> [32,] 86 44  9  3 27 13  7 11  4  0  0  0  0  0  0  0  0  0  0  0 #> [33,] 79 36  7 16 19 13  8  8  3  0  0  0  0  0  0  0  0  0  0  0 #> [34,] 22 24 35 18 10  4  7  5  0  0  0  0  0  0  0  0  0  0  0  0 #> [35,] 23 32 22 10  8  2  1  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [36,] 96 85 30 18 10  3  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [37,] 92 86 23 18  4  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [38,] 84 87 27  4  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [39,] 98 61 12  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [40,] 69 43  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> [41,] 45  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>  #> $data$flat_obs #>   [1] 21 12  3  4  3  0  1  2  4  3  0  0  2  0  0  0  1  2  1  0 22 12  4  5  0 #>  [26]  1 10  2  5  3  0  1  0  3  1  0  1  0  0  0 28 15  3  3  0  1  3  2  3  2 #>  [51]  1  0  2  3  0  3  0  0  0  0 19 13  0  0  0  4  2  2  2  1  1  1  0  1  0 #>  [76]  0  1  0  0  0 20  7  1  3 10  3  0  4  3  3  2  0  1  2  0  1  2  1  0  0 #> [101]  9  6  6  0  4  5  4  0  1  4  0  0  1  1  1  2  0  0  0  2  3 16  4  4  1 #> [126]  1  2  0  0  0  0  1  1  1  1  0  0  0  1  0 36 19 10  4  2  3  0  3  2  3 #> [151]  0  2  1  1  2  2  0  0  1  0 28 18  8  4  1  2  3  6  1  5  2  2  3  0  2 #> [176]  0  1  0  0  0 34 19  2  1  5  2  4  3  7  3  1  0  4  3  3  1  2  0  0  1 #> [201] 30 12  4  1 10  6  0  2  2  1  2  1  4  0  2  3  0  0  4  0 31  8  4  9  8 #> [226]  2  5  2  1  1  2  4  1  3  1  0  1  2  2  2  8  4 14  8  6  5  1  3  0  4 #> [251]  1  2  4  2  0  1  2  2  2  0  9  6  2  3  0  0  0  0  1  2  4  1  0  0  0 #> [276]  0  0  0  0  0 35 11  6  4  4  1  0  2  2  2  2  0  0  1  4  1  0  0  0  0 #> [301] 51 28 25  3  5  2  3  5  5  7  1  0  0  4  5  5  1  1  0  0 47 37  9  2  2 #> [326]  3  4  4  4  3  0  2  0 10  4  3  0  0  0  0 36 20  2  4 11  8  8  3  5  2 #> [351]  0  2  4  4  0  2  2  0  0  1 38 16  3 15 14  7  5  5  0  0  5  0  5  1  6 #> [376]  0  0  3  1  0  7  5  5 11  7  5  1  3  1  6  3  3  4  1  1  7  2  3  2  0 #> [401] 13 13  8  6  1  3  2  0  0  2  0  2  0  5  3  0  0  0  0  1 51 43  6  4  4 #> [426]  3  1  6  4  5  5  4  0  4  5  0  2  2  0  0 51 43 18  5  6  1  2  8  7  7 #> [451]  6  1  0  4  3  1  3  0  0 45 21  6  2  2 11 17  5  7  4  1  0  5  3  0  2 #> [476]  2  0 47 31  5  4 20  6  1  9  3  1  0  2  1  5  2  0  0 40 15  6 23 14 13 #> [501]  8  9  0  1  3  3  2  0  1  1 13 14 27 14  7  7  0  0  0  7  1  4  2  1  0 #> [526] 14 23 11  3  1  1  0  0  0  1  0  2  2  0 78 43 23 11  5  1  0  5  2  2  1 #> [551]  4  0 80 53 17 15  7  3 14 12 13 13  6  0 89 48 28  8  1 14 13 13 10 12  1 #> [576] 86 44  9  3 27 13  7 11  4  0 79 36  7 16 19 13  8  8  3 22 24 35 18 10  4 #> [601]  7  5 23 32 22 10  8  2  1 96 85 30 18 10  3 92 86 23 18  4 84 87 27  4 98 #> [626] 61 12 69 43 45 #>  #> $data$latest_obs #>         1 #>  [1,]  59 #>  [2,]  70 #>  [3,]  69 #>  [4,]  47 #>  [5,]  63 #>  [6,]  46 #>  [7,]  36 #>  [8,]  91 #>  [9,]  86 #> [10,]  95 #> [11,]  84 #> [12,]  89 #> [13,]  69 #> [14,]  28 #> [15,]  75 #> [16,] 151 #> [17,] 134 #> [18,] 114 #> [19,] 124 #> [20,]  77 #> [21,]  59 #> [22,] 149 #> [23,] 166 #> [24,] 133 #> [25,] 137 #> [26,] 139 #> [27,]  97 #> [28,]  58 #> [29,] 175 #> [30,] 233 #> [31,] 237 #> [32,] 204 #> [33,] 189 #> [34,] 125 #> [35,]  98 #> [36,] 242 #> [37,] 223 #> [38,] 202 #> [39,] 171 #> [40,] 112 #> [41,]  45 #>  #> $data$model_obs #> [1] 1 #>  #>  #> $priors #>    variable                                              description #> 1: sqrt_phi One over the square root of the reporting overdispersion #>             distribution mean sd #> 1: Zero truncated normal    0  1 #>  #> $inits #> function (data, priors)  #> { #>     priors <- enw_priors_as_data_list(priors) #>     fn <- function() { #>         init <- list(sqrt_phi = numeric(0), phi = numeric(0)) #>         if (data$model_obs == 1) { #>             init$sqrt_phi <- array(abs(rnorm(1, priors$sqrt_phi_p[1],  #>                 priors$sqrt_phi_p[2]/10))) #>             init$phi <- 1/(init$sqrt_phi^2) #>         } #>         return(init) #>     } #>     return(fn) #> } #> <bytecode: 0x55b4e70030e8> #> <environment: 0x55b4e6f93f00> #>"},{"path":"package.epinowcast.org/dev/reference/enw_plot_nowcast_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"Plot nowcast quantiles","code":""},{"path":"package.epinowcast.org/dev/reference/enw_plot_nowcast_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"","code":"enw_plot_nowcast_quantiles(nowcast, latest_obs = NULL, log = FALSE, ...)"},{"path":"package.epinowcast.org/dev/reference/enw_plot_nowcast_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"nowcast data.frame summarised posterior nowcast estimates containing least confirm count column reference_date date variable. latest_obs data frame observed data containing least confirm count variable date variable main data.frame used plotting. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed enw_plot_pp_quantiles().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_plot_nowcast_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_plot_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic quantile plot — enw_plot_obs","title":"Generic quantile plot — enw_plot_obs","text":"Generic quantile plot","code":""},{"path":"package.epinowcast.org/dev/reference/enw_plot_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic quantile plot — enw_plot_obs","text":"","code":"enw_plot_obs(obs, latest_obs = NULL, log = TRUE, ...)"},{"path":"package.epinowcast.org/dev/reference/enw_plot_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic quantile plot — enw_plot_obs","text":"obs data.frame summarised posterior estimates containing least confirm count column date variable latest_obs data frame observed data containing least confirm count variable date variable main data.frame used plotting. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed ggplot2::aes() must least specify x date variable.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_plot_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic quantile plot — enw_plot_obs","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_plot_pp_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"Plot posterior prediction quantiles","code":""},{"path":"package.epinowcast.org/dev/reference/enw_plot_pp_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"","code":"enw_plot_pp_quantiles(pp, log = FALSE, ...)"},{"path":"package.epinowcast.org/dev/reference/enw_plot_pp_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"pp data.frame summarised posterior predictions estimates containing least confirm count column report_date date variable. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed enw_plot_pp_quantiles().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_plot_pp_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_plot_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic quantile plot — enw_plot_quantiles","title":"Generic quantile plot — enw_plot_quantiles","text":"Generic quantile plot","code":""},{"path":"package.epinowcast.org/dev/reference/enw_plot_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic quantile plot — enw_plot_quantiles","text":"","code":"enw_plot_quantiles(posterior, latest_obs = NULL, log = TRUE, ...)"},{"path":"package.epinowcast.org/dev/reference/enw_plot_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic quantile plot — enw_plot_quantiles","text":"posterior data.frame summarised posterior estimates containing least confirm count column date variable, quantile estimates 5%, 20%, 80%, 95% quantiles mean median. latest_obs data frame observed data containing least confirm count variable date variable main data.frame used plotting. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed ggplot2::aes() must least specify x date variable.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_plot_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic quantile plot — enw_plot_quantiles","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_plot_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Package plot theme — enw_plot_theme","title":"Package plot theme — enw_plot_theme","text":"Package plot theme","code":""},{"path":"package.epinowcast.org/dev/reference/enw_plot_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package plot theme — enw_plot_theme","text":"","code":"enw_plot_theme(plot)"},{"path":"package.epinowcast.org/dev/reference/enw_plot_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package plot theme — enw_plot_theme","text":"plot ggplot2 plot object.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_plot_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package plot theme — enw_plot_theme","text":"ggplot2 plot object.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the posterior — enw_posterior","title":"Summarise the posterior — enw_posterior","text":"generic wrapper around posterior::summarise_draws() opinionated defaults.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the posterior — enw_posterior","text":"","code":"enw_posterior(fit, variables = NULL, probs = c(0.05, 0.2, 0.8, 0.95), ...)"},{"path":"package.epinowcast.org/dev/reference/enw_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the posterior — enw_posterior","text":"fit cmdstanr fit object. variables character vector variables return posterior summaries . default summaries parameters returned. probs vector numeric probabilities produce quantile summaries . default 5%, 20%, 80%, 95% quantiles also minimum set required plotting functions work. ... Additional arguments may passed used.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the posterior — enw_posterior","text":"dataframe summarising model posterior.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_pp_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_pp_summary","title":"FUNCTION_TITLE — enw_pp_summary","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_pp_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_pp_summary","text":"","code":"enw_pp_summary(fit, diff_obs, probs = c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95))"},{"path":"package.epinowcast.org/dev/reference/enw_pp_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_pp_summary","text":"fit PARAM_DESCRIPTION diff_obs PARAM_DESCRIPTION probs PARAM_DESCRIPTION, Default: c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95)","code":""},{"path":"package.epinowcast.org/dev/reference/enw_pp_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_pp_summary","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_preprocess_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess observations — enw_preprocess_data","title":"Preprocess observations — enw_preprocess_data","text":"function preprocesses raw observations assumption reported cumulative counts reference report date used assign groups. also constructs data objects used visualisation modelling functions including observed empirical probability report given day, cumulative probability report, latest available observations, incidence observations, metadata date reference report (used construct models). function wraps preprocessing functions may instead used individually required. Note internally reports beyond user specified delay dropped modelling purposes cum_prop_reported max_confirm variables allowing user check impact may (cum_prop_reported significantly 1 longer max_delay may appropriate). Also note missing reference report dates suspected occur data need completed enw_complete_dates().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_preprocess_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess observations — enw_preprocess_data","text":"","code":"enw_preprocess_data(   obs,   by = c(),   max_delay = 20,   set_negatives_to_zero = TRUE,   ... )"},{"path":"package.epinowcast.org/dev/reference/enw_preprocess_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess observations — enw_preprocess_data","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date). character vector describing stratification observations. defaults grouping. used modelling multiple time series order identify downstream modelling max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully. Note zero indexed includes reference date max_delay - 1 days. set_negatives_to_zero Logical, defaults TRUE. negative counts (calculated incidence observations) set zero. Currently downstream modelling support negative counts setting must TRUE intending use epinowcast(). ... arguments enw_add_metaobs_features(), e.g. holidays, sets commonly used metadata (e.g. day week, days since start time series)","code":""},{"path":"package.epinowcast.org/dev/reference/enw_preprocess_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess observations — enw_preprocess_data","text":"data.table containing processed observations series nested data frames well variables containing metadata. : obs: (observations addition empirical reporting proportions restricted specified maximum delay). new_confirm: Incidence notifications reference report date. Empirical reporting distributions also added. latest: latest available observations. missing_reference: Observations missing reference dates. reporting_triangle: Incident observations report reference date standard reporting triangle matrix format. metareference: Metadata reference dates derived observations. metrareport: Metadata report dates. metadelay: Metadata reporting delays produced using enw_delay_metadata(). time: Numeric, number timepoints data. snapshots: Numeric, number available data snapshots use nowcasting. groups: Numeric, Number groups/strata supplied observations (set using ). max_delay: Numeric, maximum delay processed data max_date: maximum available report date.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_preprocess_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess observations — enw_preprocess_data","text":"","code":"library(data.table)  # Filter example hospitalisation data to be national and over all ages nat_germany_hosp <- germany_covid19_hosp[location == \"DE\"] nat_germany_hosp <- nat_germany_hosp[age_group %in% \"00+\"]  # Preprocess with default settings pobs <- enw_preprocess_data(nat_germany_hosp) pobs #>                     obs           new_confirm               latest #> 1: <data.table[3770x9]> <data.table[3770x11]> <data.table[198x10]> #>    missing_reference   reporting_triangle       metareference #> 1: <data.table[0x6]> <data.table[198x22]> <data.table[198x9]> #>              metareport          metadelay time snapshots by groups max_delay #> 1: <data.table[217x12]> <data.table[20x4]>  198       198         1        20 #>      max_date #> 1: 2021-10-20"},{"path":"package.epinowcast.org/dev/reference/enw_priors_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert prior data.frame to list — enw_priors_as_data_list","title":"Convert prior data.frame to list — enw_priors_as_data_list","text":"Converts priors defined data.frame list format use stan. addition adds \"_p\" variable names order allow distinguished standard usage within modelling code.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_priors_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert prior data.frame to list — enw_priors_as_data_list","text":"","code":"enw_priors_as_data_list(priors)"},{"path":"package.epinowcast.org/dev/reference/enw_priors_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert prior data.frame to list — enw_priors_as_data_list","text":"priors data.frame following variables: variable, mean, sd describing normal priors. Priors appropriate format returned enw_reference() well similar model specification functions.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_priors_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert prior data.frame to list — enw_priors_as_data_list","text":"named list entry specifying prior length two vector (specifying mean standard deviation prior).","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_priors_as_data_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert prior data.frame to list — enw_priors_as_data_list","text":"","code":"priors <- data.frame(variable = \"x\", mean = 1, sd = 2) enw_priors_as_data_list(priors) #> $x_p #> [1] 1 2 #>"},{"path":"package.epinowcast.org/dev/reference/enw_quantiles_to_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"Convert summarised quantiles wide long format","code":""},{"path":"package.epinowcast.org/dev/reference/enw_quantiles_to_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"","code":"enw_quantiles_to_long(posterior)"},{"path":"package.epinowcast.org/dev/reference/enw_quantiles_to_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"posterior dataframe output enw_posterior().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_quantiles_to_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"data frame quantiles long format.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Reference date logit hazard reporting  model module — enw_reference","title":"Reference date logit hazard reporting  model module — enw_reference","text":"Reference date logit hazard reporting  model module","code":""},{"path":"package.epinowcast.org/dev/reference/enw_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reference date logit hazard reporting  model module — enw_reference","text":"","code":"enw_reference(   parametric = ~1,   distribution = c(\"lognormal\", \"none\", \"exponential\", \"gamma\", \"loglogistic\"),   non_parametric = ~0,   data )"},{"path":"package.epinowcast.org/dev/reference/enw_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reference date logit hazard reporting  model module — enw_reference","text":"parametric formula (implemented enw_formula()) describing parametric reference date delay model. can use features defined report date defined metareference produced enw_preprocess_data(). Note formula applied summary statistics chosen parametric distribution summary parameter separate effects. Use ~ 0 use parametric model (note recommended non_parametric model implemented). distribution character vector describing parametric delay distribution use. Current options : \"none\", \"lognormal\", \"gamma\", \"exponential\", \"loglogistic\", default \"lognormal\". non_parametric formula (implemented enw_formula()) describing non-parametric logit hazard model. can use features defined reference date delay. draws linked data.frame using metareference metadelay produced enw_preprocess_data(). effect per delay specified approximates cox proportional hazard model discrete time single strata. Note model currently available users. data Output enw_preprocess_data().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reference date logit hazard reporting  model module — enw_reference","text":"list containing supplied formulas, data passed list describing models, data.frame describing priors used, function takes output data priors returns function can used sample tightened version prior distribution.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_reference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reference date logit hazard reporting  model module — enw_reference","text":"","code":"enw_reference(data = enw_example(\"preprocessed\")) #> $formula #> $formula$parametric #> [1] \"~1\" #>  #>  #> $data #> $data$refp_fdesign #>   (Intercept) #> 1           1 #>  #> $data$refp_fnrow #> [1] 1 #>  #> $data$refp_findex #>  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [39] 1 1 1 #>  #> $data$refp_fnindex #> [1] 41 #>  #> $data$refp_fncol #> [1] 0 #>  #> $data$refp_rdesign #>      (Intercept) #> attr(,\"assign\") #> [1] 0 #>  #> $data$refp_rncol #> [1] 0 #>  #> $data$model_refp #> [1] 2 #>  #>  #> $priors #>             variable #> 1:     refp_mean_int #> 2:       refp_sd_int #> 3: refp_mean_beta_sd #> 4:   refp_sd_beta_sd #>                                                       description #> 1:         Log mean intercept for parametric reference date delay #> 2: Log standard deviation for the parametric reference date delay #> 3:    Standard deviation of scaled pooled parametric mean effects #> 4:      Standard deviation of scaled pooled parametric sd effects #>             distribution mean sd #> 1:                Normal  1.0  1 #> 2: Zero truncated normal  0.5  1 #> 3: Zero truncated normal  0.0  1 #> 4: Zero truncated normal  0.0  1 #>  #> $inits #> function (data, priors)  #> { #>     priors <- enw_priors_as_data_list(priors) #>     fn <- function() { #>         init <- list(refp_mean_int = numeric(0), refp_sd_int = numeric(0),  #>             refp_mean_beta = numeric(0), refp_sd_beta = numeric(0),  #>             refp_mean_beta_sd = numeric(0), refp_sd_beta_sd = numeric(0)) #>         if (data$model_refp > 0) { #>             init$refp_mean_int <- rnorm(1, priors$refp_mean_int[1],  #>                 priors$refp_mean_int[2]/10) #>         } #>         if (data$model_refp > 1) { #>             init$refp_sd_int <- abs(rnorm(1, priors$refp_sd_int[1],  #>                 priors$refp_sd_int[2]/10)) #>         } #>         init$refp_mean <- rep(init$refp_mean_int, data$refp_fnrow) #>         init$refp_sd <- rep(init$refp_sd_int, data$refp_fnrow) #>         if (data$refp_fncol > 0) { #>             init$refp_mean_beta <- rnorm(data$refp_fncol, 0,  #>                 0.01) #>             if (data$model_refp > 1) { #>                 init$refp_sd_beta <- rnorm(data$refp_fncol, 0,  #>                   0.01) #>             } #>         } #>         if (data$refp_rncol > 0) { #>             init$refp_mean_beta_sd <- abs(rnorm(data$refp_rncol,  #>                 priors$refp_mean_beta_sd_p[1], priors$refp_mean_beta_sd_p[2]/10)) #>             if (data$model_refp > 1) { #>                 init$refp_sd_beta_sd <- abs(rnorm(data$refp_rncol,  #>                   priors$refp_sd_beta_sd_p[1], priors$refp_sd_beta_sd_p[2]/10)) #>             } #>         } #>         return(init) #>     } #>     return(fn) #> } #> <bytecode: 0x55b4e97c4660> #> <environment: 0x55b4e970a470> #>"},{"path":"package.epinowcast.org/dev/reference/enw_reference_by_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a lookup of references dates by report — enw_reference_by_report","title":"Construct a lookup of references dates by report — enw_reference_by_report","text":"Construct lookup references dates report","code":""},{"path":"package.epinowcast.org/dev/reference/enw_reference_by_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a lookup of references dates by report — enw_reference_by_report","text":"","code":"enw_reference_by_report(   missing_reference,   reps_with_complete_refs,   metareference,   max_delay )"},{"path":"package.epinowcast.org/dev/reference/enw_reference_by_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a lookup of references dates by report — enw_reference_by_report","text":"missing_reference missing_reference data.frame output enw_preprocess_data(). reps_with_complete_refs data.frame report dates complete (.e fully reported) reference dates produced using enw_reps_with_complete_refs(). metareference metareference data.frame output enw_preprocess_data(). max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully. Note zero indexed includes reference date max_delay - 1 days.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_reference_by_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a lookup of references dates by report — enw_reference_by_report","text":"wide data frame row complete report date ' columns observation index reporting delay","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_replace_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace default priors with user specified priors — enw_replace_priors","title":"Replace default priors with user specified priors — enw_replace_priors","text":"function used internally epinowcast replace default model priors users specified ones (restricted normal priors specified mean standard deviations). common use extracting posterior previous epinowcast() run (using summary(nowcast, type = fit)) using prior.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_replace_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace default priors with user specified priors — enw_replace_priors","text":"","code":"enw_replace_priors(priors, custom_priors)"},{"path":"package.epinowcast.org/dev/reference/enw_replace_priors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace default priors with user specified priors — enw_replace_priors","text":"priors data.frame following variables: variable, mean, sd describing normal priors. Priors appropriate format returned enw_reference() well similar model specification functions. custom_priors data.frame following variables: variable, mean, sd describing normal priors. Priors appropriate format returned enw_reference() well similar model specification functions. Priors data.frame replace default priors. Note currently vectorised prior names (.e form variable[n] treated variable).","code":""},{"path":"package.epinowcast.org/dev/reference/enw_replace_priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace default priors with user specified priors — enw_replace_priors","text":"data.table prior definitions (variable, mean sd).","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_replace_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace default priors with user specified priors — enw_replace_priors","text":"","code":"priors <- data.frame(variable = c(\"x\", \"y\"), mean = c(1, 2), sd = c(1, 2)) custom_priors <- data.frame(variable = \"x[1]\", mean = 10, sd = 2) enw_replace_priors(priors, custom_priors) #>    variable mean sd #> 1:        y    2  2 #> 2:        x   10  2"},{"path":"package.epinowcast.org/dev/reference/enw_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Report date logit hazard reporting  model module — enw_report","title":"Report date logit hazard reporting  model module — enw_report","text":"Report date logit hazard reporting  model module","code":""},{"path":"package.epinowcast.org/dev/reference/enw_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report date logit hazard reporting  model module — enw_report","text":"","code":"enw_report(non_parametric = ~0, structural = ~0, data)"},{"path":"package.epinowcast.org/dev/reference/enw_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report date logit hazard reporting  model module — enw_report","text":"non_parametric formula (implemented enw_formula()) describing non-parametric logit hazard model. can use features defined report date defined metareport produced enw_preprocess_data(). Note intercept model set 0 used specifying report date related hazards vs time invariant hazards instead modelled using non_parametric argument enw_reference() structural formula fixed effects using binary variables, factors describing known reporting structure (.e weekday reporting). base case (.e first factor entry) describe dates reporting possible. Internally dates non-zero element design matrix hazard set 0. can use features defined report date defined metareport produced enw_preprocess_data(). Note intercept model set 0 order allow dates without structural reasons reported reported. Note feature yet available users. data Output enw_preprocess_data().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report date logit hazard reporting  model module — enw_report","text":"list containing supplied formulas, data passed list describing models, data.frame describing priors used, function takes output data priors returns function can used sample tightened version prior distribution.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report date logit hazard reporting  model module — enw_report","text":"","code":"enw_report(data = enw_example(\"preprocessed\")) #> $formula #> $formula$non_parametric #> [1] \"~1\" #>  #>  #> $data #> $data$rep_fdesign #>   (Intercept) #> 1           1 #>  #> $data$rep_fnrow #> [1] 1 #>  #> $data$rep_findex #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]    1    1    1    1    1    1    1    1    1     1     1     1     1     1 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]     1     1     1     1     1     1     1     1     1     1     1     1 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] #> [1,]     1     1     1     1     1     1     1     1     1     1 #>  #> $data$rep_fnindex #> [1] 60 #>  #> $data$rep_fncol #> [1] 0 #>  #> $data$rep_rdesign #>      (Intercept) #> attr(,\"assign\") #> [1] 0 #>  #> $data$rep_rncol #> [1] 0 #>  #> $data$rep_t #> [1] 60 #>  #> $data$model_rep #> [1] 0 #>  #>  #> $priors #>       variable                                             description #> 1: rep_beta_sd Standard deviation of scaled pooled report date effects #>             distribution mean sd #> 1: Zero truncated normal    0  1 #>  #> $inits #> function (data, priors)  #> { #>     priors <- enw_priors_as_data_list(priors) #>     fn <- function() { #>         init <- list(rep_beta = numeric(0), rep_beta_sd = numeric(0)) #>         if (data$rep_fncol > 0) { #>             init$rep_beta <- rnorm(data$rep_fncol, 0, 0.01) #>         } #>         if (data$rep_rncol > 0) { #>             init$rep_beta_sd <- abs(rnorm(data$rep_rncol, priors$rep_beta_sd_p[1],  #>                 priors$rep_beta_sd_p[2]/10)) #>         } #>         return(init) #>     } #>     return(fn) #> } #> <bytecode: 0x55b4edc06418> #> <environment: 0x55b4edbf7020> #>"},{"path":"package.epinowcast.org/dev/reference/enw_reporting_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the reporting triangle — enw_reporting_triangle","title":"Construct the reporting triangle — enw_reporting_triangle","text":"Constructs reporting triangle row representing reference date columns observations report date","code":""},{"path":"package.epinowcast.org/dev/reference/enw_reporting_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the reporting triangle — enw_reporting_triangle","text":"","code":"enw_reporting_triangle(obs)"},{"path":"package.epinowcast.org/dev/reference/enw_reporting_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the reporting triangle — enw_reporting_triangle","text":"obs data frame produced enw_cumulative_to_incidence(). Must contain following variables: reference_date, .group, delay.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_reporting_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the reporting triangle — enw_reporting_triangle","text":"data frame row reference date, columns observations reporting delay.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_reporting_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct the reporting triangle — enw_reporting_triangle","text":"","code":"obs <- enw_example(\"preprocessed\")$new_confirm enw_reporting_triangle(obs) #>     .group reference_date  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 #>  1:      1     2021-07-13 21 12  3  4  3  0  1  2  4  3  0  0  2  0  0  0  1  2 #>  2:      1     2021-07-14 22 12  4  5  0  1 10  2  5  3  0  1  0  3  1  0  1  0 #>  3:      1     2021-07-15 28 15  3  3  0  1  3  2  3  2  1  0  2  3  0  3  0  0 #>  4:      1     2021-07-16 19 13  0  0  0  4  2  2  2  1  1  1  0  1  0  0  1  0 #>  5:      1     2021-07-17 20  7  1  3 10  3  0  4  3  3  2  0  1  2  0  1  2  1 #>  6:      1     2021-07-18  9  6  6  0  4  5  4  0  1  4  0  0  1  1  1  2  0  0 #>  7:      1     2021-07-19  3 16  4  4  1  1  2  0  0  0  0  1  1  1  1  0  0  0 #>  8:      1     2021-07-20 36 19 10  4  2  3  0  3  2  3  0  2  1  1  2  2  0  0 #>  9:      1     2021-07-21 28 18  8  4  1  2  3  6  1  5  2  2  3  0  2  0  1  0 #> 10:      1     2021-07-22 34 19  2  1  5  2  4  3  7  3  1  0  4  3  3  1  2  0 #> 11:      1     2021-07-23 30 12  4  1 10  6  0  2  2  1  2  1  4  0  2  3  0  0 #> 12:      1     2021-07-24 31  8  4  9  8  2  5  2  1  1  2  4  1  3  1  0  1  2 #> 13:      1     2021-07-25  8  4 14  8  6  5  1  3  0  4  1  2  4  2  0  1  2  2 #> 14:      1     2021-07-26  9  6  2  3  0  0  0  0  1  2  4  1  0  0  0  0  0  0 #> 15:      1     2021-07-27 35 11  6  4  4  1  0  2  2  2  2  0  0  1  4  1  0  0 #> 16:      1     2021-07-28 51 28 25  3  5  2  3  5  5  7  1  0  0  4  5  5  1  1 #> 17:      1     2021-07-29 47 37  9  2  2  3  4  4  4  3  0  2  0 10  4  3  0  0 #> 18:      1     2021-07-30 36 20  2  4 11  8  8  3  5  2  0  2  4  4  0  2  2  0 #> 19:      1     2021-07-31 38 16  3 15 14  7  5  5  0  0  5  0  5  1  6  0  0  3 #> 20:      1     2021-08-01  7  5  5 11  7  5  1  3  1  6  3  3  4  1  1  7  2  3 #> 21:      1     2021-08-02 13 13  8  6  1  3  2  0  0  2  0  2  0  5  3  0  0  0 #> 22:      1     2021-08-03 51 43  6  4  4  3  1  6  4  5  5  4  0  4  5  0  2  2 #> 23:      1     2021-08-04 51 43 18  5  6  1  2  8  7  7  6  1  0  4  3  1  3  0 #> 24:      1     2021-08-05 45 21  6  2  2 11 17  5  7  4  1  0  5  3  0  2  2  0 #> 25:      1     2021-08-06 47 31  5  4 20  6  1  9  3  1  0  2  1  5  2  0  0  0 #> 26:      1     2021-08-07 40 15  6 23 14 13  8  9  0  1  3  3  2  0  1  1  0  0 #> 27:      1     2021-08-08 13 14 27 14  7  7  0  0  0  7  1  4  2  1  0  0  0  0 #> 28:      1     2021-08-09 14 23 11  3  1  1  0  0  0  1  0  2  2  0  0  0  0  0 #> 29:      1     2021-08-10 78 43 23 11  5  1  0  5  2  2  1  4  0  0  0  0  0  0 #> 30:      1     2021-08-11 80 53 17 15  7  3 14 12 13 13  6  0  0  0  0  0  0  0 #> 31:      1     2021-08-12 89 48 28  8  1 14 13 13 10 12  1  0  0  0  0  0  0  0 #> 32:      1     2021-08-13 86 44  9  3 27 13  7 11  4  0  0  0  0  0  0  0  0  0 #> 33:      1     2021-08-14 79 36  7 16 19 13  8  8  3  0  0  0  0  0  0  0  0  0 #> 34:      1     2021-08-15 22 24 35 18 10  4  7  5  0  0  0  0  0  0  0  0  0  0 #> 35:      1     2021-08-16 23 32 22 10  8  2  1  0  0  0  0  0  0  0  0  0  0  0 #> 36:      1     2021-08-17 96 85 30 18 10  3  0  0  0  0  0  0  0  0  0  0  0  0 #> 37:      1     2021-08-18 92 86 23 18  4  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 38:      1     2021-08-19 84 87 27  4  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 39:      1     2021-08-20 98 61 12  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 40:      1     2021-08-21 69 43  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 41:      1     2021-08-22 45  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>     .group reference_date  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 #>     18 19 #>  1:  1  0 #>  2:  0  0 #>  3:  0  0 #>  4:  0  0 #>  5:  0  0 #>  6:  0  2 #>  7:  1  0 #>  8:  1  0 #>  9:  0  0 #> 10:  0  1 #> 11:  4  0 #> 12:  2  2 #> 13:  2  0 #> 14:  0  0 #> 15:  0  0 #> 16:  0  0 #> 17:  0  0 #> 18:  0  1 #> 19:  1  0 #> 20:  2  0 #> 21:  0  1 #> 22:  0  0 #> 23:  0  0 #> 24:  0  0 #> 25:  0  0 #> 26:  0  0 #> 27:  0  0 #> 28:  0  0 #> 29:  0  0 #> 30:  0  0 #> 31:  0  0 #> 32:  0  0 #> 33:  0  0 #> 34:  0  0 #> 35:  0  0 #> 36:  0  0 #> 37:  0  0 #> 38:  0  0 #> 39:  0  0 #> 40:  0  0 #> 41:  0  0 #>     18 19"},{"path":"package.epinowcast.org/dev/reference/enw_reporting_triangle_to_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"Recast reporting triangle wide long format","code":""},{"path":"package.epinowcast.org/dev/reference/enw_reporting_triangle_to_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"","code":"enw_reporting_triangle_to_long(obs)"},{"path":"package.epinowcast.org/dev/reference/enw_reporting_triangle_to_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"obs dataframe format produced enw_reporting_triangle().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_reporting_triangle_to_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"long format reporting triangle data frame additional variables new_confirm delay.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_reporting_triangle_to_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"","code":"obs <- enw_example(\"preprocessed\")$new_confirm rt <- enw_reporting_triangle(obs) enw_reporting_triangle_to_long(rt) #>      reference_date .group delay new_confirm #>   1:     2021-07-13      1     0          21 #>   2:     2021-07-13      1     1          12 #>   3:     2021-07-13      1     2           3 #>   4:     2021-07-13      1     3           4 #>   5:     2021-07-13      1     4           3 #>  ---                                         #> 816:     2021-08-22      1    15           0 #> 817:     2021-08-22      1    16           0 #> 818:     2021-08-22      1    17           0 #> 819:     2021-08-22      1    18           0 #> 820:     2021-08-22      1    19           0"},{"path":"package.epinowcast.org/dev/reference/enw_reps_with_complete_refs.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify report dates with complete (i.e up to the maximum delay) reference\ndates — enw_reps_with_complete_refs","title":"Identify report dates with complete (i.e up to the maximum delay) reference\ndates — enw_reps_with_complete_refs","text":"Identify report dates complete (.e maximum delay) reference dates","code":""},{"path":"package.epinowcast.org/dev/reference/enw_reps_with_complete_refs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify report dates with complete (i.e up to the maximum delay) reference\ndates — enw_reps_with_complete_refs","text":"","code":"enw_reps_with_complete_refs(new_confirm, max_delay, by = c())"},{"path":"package.epinowcast.org/dev/reference/enw_reps_with_complete_refs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify report dates with complete (i.e up to the maximum delay) reference\ndates — enw_reps_with_complete_refs","text":"new_confirm new_confirm data.frame output enw_preprocess_data(). max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully. Note zero indexed includes reference date max_delay - 1 days. character vector describing stratification observations. defaults grouping. used modelling multiple time series order identify downstream modelling","code":""},{"path":"package.epinowcast.org/dev/reference/enw_reps_with_complete_refs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify report dates with complete (i.e up to the maximum delay) reference\ndates — enw_reps_with_complete_refs","text":"data frame containing report_date variable, grouping variables specified report dates complete reporting.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a CmdStan model using NUTS — enw_sample","title":"Fit a CmdStan model using NUTS — enw_sample","text":"Fit CmdStan model using NUTS","code":""},{"path":"package.epinowcast.org/dev/reference/enw_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a CmdStan model using NUTS — enw_sample","text":"","code":"enw_sample(data, model = epinowcast::enw_model(), diagnostics = TRUE, ...)"},{"path":"package.epinowcast.org/dev/reference/enw_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a CmdStan model using NUTS — enw_sample","text":"data list data produced model modules (example enw_expectation(), enw_obs(), etc.) required use model used. model cmdstanr model object loaded enw_model() supplied user. diagnostics Logical, defaults TRUE. fitting diagnostics returned data.frame. ... Additional parameters passed sample method cmdstanr.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a CmdStan model using NUTS — enw_sample","text":"data.frame containing cmdstanr fit, input data, fitting arguments, optionally summary diagnostics.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/enw_score_nowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"Acts wrapper scoringutils::score(). particular, handling filtering nowcast summary output linking output observed data. See documentation scoringutils package forecast scoring.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_score_nowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"","code":"enw_score_nowcast(   nowcast,   latest_obs,   log = FALSE,   check = FALSE,   round_to = 3,   ... )"},{"path":"package.epinowcast.org/dev/reference/enw_score_nowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"nowcast posterior nowcast posterior prediction returned summary.epinowcast(), used output epinowcast(). latest_obs data frame latest available observations produced enw_latest_data() otherwise. log Logical, defaults FALSE. scores calculated log scale (0.01 shift) observations nowcasts. Scoring way can thought relative score vs usual absolute measure. may useful targets different scales forecaster interested good round performance versus good performance targets large values. check Logical, defaults FALSE. scoringutils::check_forecasts() used check input nowcasts. round_to Integer defaults 3. Number digits round scoring output . ... Additional arguments passed scoringutils::score().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_score_nowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"data.table returned scoringutils::score().","code":""},{"path":"package.epinowcast.org/dev/reference/enw_score_nowcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"","code":"if (FALSE) { # interactive() library(data.table) library(scoringutils)  # Summarise example nowcast nowcast <- enw_example(\"nowcast\") summarised_nowcast <- summary(nowcast)  # Load latest available observations obs <- enw_example(\"observations\")  # Keep the last 7 days of data obs <- obs[reference_date > (max(reference_date) - 7)]  # score on the absolute scale scores <- enw_score_nowcast(summarised_nowcast, obs) summarise_scores(scores, by = \"location\")  # score overall on a log scale log_scores <- enw_score_nowcast(summarised_nowcast, obs, log = TRUE) summarise_scores(log_scores, by = \"location\") }"},{"path":"package.epinowcast.org/dev/reference/enw_simulate_missing_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate observations with a missing reference date. — enw_simulate_missing_reference","title":"Simulate observations with a missing reference date. — enw_simulate_missing_reference","text":"simple binomial simulator missing data reference date using simulated observed data input. function may used validate missing data models, part examples case studies, explore implications missing data use case.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_simulate_missing_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate observations with a missing reference date. — enw_simulate_missing_reference","text":"","code":"enw_simulate_missing_reference(obs, proportion = 0.2, by = c())"},{"path":"package.epinowcast.org/dev/reference/enw_simulate_missing_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate observations with a missing reference date. — enw_simulate_missing_reference","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date). proportion Numeric, proportion observations missing reference date, indexed reference date. Currently fixed proportion supported defaults 0.2. character vector describing stratification observations. defaults grouping. used modelling multiple time series order identify downstream modelling","code":""},{"path":"package.epinowcast.org/dev/reference/enw_simulate_missing_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate observations with a missing reference date. — enw_simulate_missing_reference","text":"data.table format input simulated proportion observations now missing reference date.","code":""},{"path":"package.epinowcast.org/dev/reference/enw_simulate_missing_reference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate observations with a missing reference date. — enw_simulate_missing_reference","text":"","code":"# Load and filter germany hospitalisations nat_germany_hosp <- subset(   germany_covid19_hosp, location == \"DE\" & age_group %in% \"00+\" ) nat_germany_hosp <- enw_filter_report_dates(   nat_germany_hosp,   latest_date = \"2021-08-01\" )  # Make sure observations are complete nat_germany_hosp <- enw_complete_dates(   nat_germany_hosp,   by = c(\"location\", \"age_group\"), missing_reference = FALSE )  # Simulate enw_simulate_missing_reference(   nat_germany_hosp,   proportion = 0.35, by = c(\"location\", \"age_group\") ) #>       location age_group reference_date confirm report_date #>    1:       DE       00+           <NA>      52  2021-04-06 #>    2:       DE       00+           <NA>     150  2021-04-07 #>    3:       DE       00+           <NA>     268  2021-04-08 #>    4:       DE       00+           <NA>     260  2021-04-09 #>    5:       DE       00+           <NA>     254  2021-04-10 #>   ---                                                       #> 6469:       DE       00+     2021-07-30      35  2021-07-31 #> 6470:       DE       00+     2021-07-30      36  2021-08-01 #> 6471:       DE       00+     2021-07-31      28  2021-07-31 #> 6472:       DE       00+     2021-07-31      36  2021-08-01 #> 6473:       DE       00+     2021-08-01       6  2021-08-01"},{"path":"package.epinowcast.org/dev/reference/enw_summarise_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_summarise_samples","title":"FUNCTION_TITLE — enw_summarise_samples","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_summarise_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_summarise_samples","text":"","code":"enw_summarise_samples(   samples,   probs = c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95),   by = c(\"reference_date\", \".group\") )"},{"path":"package.epinowcast.org/dev/reference/enw_summarise_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_summarise_samples","text":"samples DESCRIPTION. probs PARAM_DESCRIPTION, Default: c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95) DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/enw_summarise_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_summarise_samples","text":"RETURN_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/epinowcast-package.html","id":null,"dir":"Reference","previous_headings":"","what":"epinowcast: Flexible Hierarchical Nowcasting — epinowcast-package","title":"epinowcast: Flexible Hierarchical Nowcasting — epinowcast-package","text":"Tools enable flexible efficient hierarchical nowcasting right-truncated epidemiological time-series using semi-mechanistic Bayesian model support range reporting generative processes. Nowcasting, context, gaining situational awareness using currently available observations reporting patterns historical observations. can useful tracking spread infectious disease real-time: without nowcasting, changes trends can obfuscated partial reporting detection may delayed due use simpler methods like truncation. package designed epidemiological applications mind, applied set right-truncated time-series count data.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/epinowcast-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epinowcast: Flexible Hierarchical Nowcasting — epinowcast-package","text":"Maintainer: Sam Abbott sam.abbott@lshtm.ac.uk (ORCID) Authors: Adrian Lison adrian.lison@bsse.ethz.ch (ORCID) Sebastian Funk sebastian.funk@lshtm.ac.uk Carl Pearson carl.ab.pearson@gmail.com (ORCID) contributors: Michael DeWitt .dewitt.jr@gmail.com (ORCID) [contributor] Hannah Choi hannah.choi1@lshtm.ac.uk [contributor]","code":""},{"path":"package.epinowcast.org/dev/reference/epinowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Nowcast using partially observed data — epinowcast","title":"Nowcast using partially observed data — epinowcast","text":"Provides user friendly interface around package functionality produce nowcast observed preprocessed data, series user defined models. default model assumes fixed parametric reporting distribution flexible expectation model used. Explore individual model components additional documentation see package case studies example model specifications different tasks.","code":""},{"path":"package.epinowcast.org/dev/reference/epinowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nowcast using partially observed data — epinowcast","text":"","code":"epinowcast(   data,   reference = epinowcast::enw_reference(parametric = ~1, distribution = \"lognormal\",     non_parametric = ~0, data = data),   report = epinowcast::enw_report(non_parametric = ~0, structural = ~0, data = data),   expectation = epinowcast::enw_expectation(formula = ~rw(day, .group), order = 1, data     = data),   missing = epinowcast::enw_missing(formula = ~0, data = data),   obs = epinowcast::enw_obs(family = \"negbin\", data = data),   fit = epinowcast::enw_fit_opts(fit = epinowcast::enw_sample, nowcast = TRUE, pp =     FALSE, likelihood = TRUE, debug = FALSE, output_loglik = FALSE),   model = epinowcast::enw_model(),   priors,   ... )"},{"path":"package.epinowcast.org/dev/reference/epinowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nowcast using partially observed data — epinowcast","text":"data Output enw_preprocess_data(). reference reference time indexed reporting process model specification defined using enw_reference(). report report time indexed reporting process model specification defined using enw_report(). expectation expectation model specification defined using enw_expectation(). default set highly flexible thus weakly informed. options yet supported. missing missing reference date model specification defined using enw_missing(). default set used. obs observation model defined enw_obs(). Observations also processed within function use modelling. fit Model fit options defined using enw_fit_opts(). includes sampler function use (package default enw_sample()), whether now nowcast used, etc. See enw_fit_opts() details. model model use within fit. default uses enw_model(). priors data.frame following variables: variable, mean, sd describing normal priors. Priors appropriate format returned enw_reference() well similar model specification functions. Priors data.frame replace default priors specified model component. ... Additional model modules pass model. User modules may used currently require supplied model adapted.","code":""},{"path":"package.epinowcast.org/dev/reference/epinowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nowcast using partially observed data — epinowcast","text":"object class \"epinowcast\" inherits enw_preprocess_data() data.table, combines output sampler specified enw_fit_opts().","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/epinowcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nowcast using partially observed data — epinowcast","text":"","code":"if (FALSE) { # interactive() # Load data.table and ggplot2 library(data.table) library(ggplot2)  # Use 2 cores options(mc.cores = 2) # Load and filter germany hospitalisations nat_germany_hosp <-   germany_covid19_hosp[location == \"DE\"][age_group %in% \"00+\"] nat_germany_hosp <- enw_filter_report_dates(   nat_germany_hosp,   latest_date = \"2021-10-01\" ) # Make sure observations are complete nat_germany_hosp <- enw_complete_dates(   nat_germany_hosp,   by = c(\"location\", \"age_group\") ) # Make a retrospective dataset retro_nat_germany <- enw_filter_report_dates(   nat_germany_hosp,   remove_days = 40 ) retro_nat_germany <- enw_filter_reference_dates(   retro_nat_germany,   include_days = 40 ) # Get latest observations for the same time period latest_obs <- enw_latest_data(nat_germany_hosp) latest_obs <- enw_filter_reference_dates(   latest_obs,   remove_days = 40, include_days = 20 ) # Preprocess observations (note this maximum delay is likely too short) pobs <- enw_preprocess_data(retro_nat_germany, max_delay = 20) # Fit the default nowcast model and produce a nowcast # Note that we have reduced samples for this example to reduce runtimes nowcast <- epinowcast(pobs,   fit = enw_fit_opts(     save_warmup = FALSE, pp = TRUE,     chains = 2, iter_warmup = 500, iter_sampling = 500   ) ) nowcast # plot the nowcast vs latest available observations plot(nowcast, latest_obs = latest_obs)  # plot posterior predictions for the delay distribution by date plot(nowcast, type = \"posterior\") +   facet_wrap(vars(reference_date), scale = \"free\") }"},{"path":"package.epinowcast.org/dev/reference/expose_stan_fns.html","id":null,"dir":"Reference","previous_headings":"","what":"Expose stan functions in R — expose_stan_fns","title":"Expose stan functions in R — expose_stan_fns","text":"function builds top rstan::expose_stan_functions() order facilitate exposing package functions R internal use, testing, exploration. Crucially performs conversion package cmdstan stan code rstan compatible stan code. generally recommended users make use function apart exploring package functionality.","code":""},{"path":"package.epinowcast.org/dev/reference/expose_stan_fns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expose stan functions in R — expose_stan_fns","text":"","code":"expose_stan_fns(files, target_dir, ...)"},{"path":"package.epinowcast.org/dev/reference/expose_stan_fns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expose stan functions in R — expose_stan_fns","text":"files character vector file names target_dir character string giving directory files can found. ... Arguments pass rstan::expose_stan_functions()","code":""},{"path":"package.epinowcast.org/dev/reference/expose_stan_fns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expose stan functions in R — expose_stan_fns","text":"NULL (indivisibly)","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/germany_covid19_hosp.html","id":null,"dir":"Reference","previous_headings":"","what":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"Hospitalisations Germany date report reference","code":""},{"path":"package.epinowcast.org/dev/reference/germany_covid19_hosp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"","code":"germany_covid19_hosp"},{"path":"package.epinowcast.org/dev/reference/germany_covid19_hosp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"object class data.table (inherits data.frame) 1536885 rows 5 columns.","code":""},{"path":"package.epinowcast.org/dev/reference/germany_covid19_hosp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"data.table","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/is.Date.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — is.Date","title":"FUNCTION_TITLE — is.Date","text":"FUNCTION_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/is.Date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — is.Date","text":"","code":"is.Date(x)"},{"path":"package.epinowcast.org/dev/reference/is.Date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — is.Date","text":"x PARAM_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/is.Date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — is.Date","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/parse_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a formula into components — parse_formula","title":"Parse a formula into components — parse_formula","text":"function uses series internal functions break input formula component parts can handled separately. Currently supported components fixed effects, lme4 style random effects, random walks using rw() helper function.","code":""},{"path":"package.epinowcast.org/dev/reference/parse_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a formula into components — parse_formula","text":"","code":"parse_formula(formula)"},{"path":"package.epinowcast.org/dev/reference/parse_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a formula into components — parse_formula","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function.","code":""},{"path":"package.epinowcast.org/dev/reference/parse_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a formula into components — parse_formula","text":"list formula components. currently include: fixed: character vector fixed effect terms random: list lme4 style random effects rw: character vector rw() random walk terms.","code":""},{"path":"package.epinowcast.org/dev/reference/parse_formula.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"Parse a formula into components — parse_formula","text":"random walk functions used internally function adapted code written J Scott (MIT license) part epidemia package (https://github.com/ImperialCollegeLondon/epidemia/).","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/parse_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a formula into components — parse_formula","text":"","code":"epinowcast:::parse_formula(~ 1 + age_group + location) #> $fixed #> [1] \"1\"         \"age_group\" \"location\"  #>  #> $random #> NULL #>  #> $rw #> character(0) #>   epinowcast:::parse_formula(~ 1 + age_group + (1 | location)) #> $fixed #> [1] \"1\"         \"age_group\" #>  #> $random #> $random[[1]] #> 1 | location #>  #>  #> $rw #> character(0) #>   epinowcast:::parse_formula(~ 1 + (age_group | location)) #> $fixed #> [1] \"1\" #>  #> $random #> $random[[1]] #> age_group | location #>  #>  #> $rw #> character(0) #>   epinowcast:::parse_formula(~ 1 + (1 | location) + rw(week, location)) #> $fixed #> [1] \"1\" #>  #> $random #> $random[[1]] #> 1 | location #>  #>  #> $rw #> [1] \"rw(week, location)\" #>"},{"path":"package.epinowcast.org/dev/reference/plot.epinowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for epinowcast — plot.epinowcast","title":"Plot method for epinowcast — plot.epinowcast","text":"plot method class \"epinowcast\".","code":""},{"path":"package.epinowcast.org/dev/reference/plot.epinowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for epinowcast — plot.epinowcast","text":"","code":"# S3 method for epinowcast plot(   x,   latest_obs = NULL,   type = c(\"nowcast\", \"posterior_prediction\"),   log = FALSE,   ... )"},{"path":"package.epinowcast.org/dev/reference/plot.epinowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for epinowcast — plot.epinowcast","text":"x data.table output produced epinowcast(). latest_obs data.frame observed data may passed lower level methods. type Character string indicating plot required; enforced base::match.arg(). Currently supported options: \"nowcast\" plots nowcast dataset along latest available observed data using enw_plot_nowcast_quantiles(), \"posterior_prediction\" plots observations reported time simulated observations model using enw_plot_pp_quantiles(). log Logical, defaults FALSE. counts plot log scale. ... Additional arguments plot function specified type.","code":""},{"path":"package.epinowcast.org/dev/reference/plot.epinowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for epinowcast — plot.epinowcast","text":"ggplot2 object","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/re.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines random effect terms using the lme4 syntax — re","title":"Defines random effect terms using the lme4 syntax — re","text":"Defines random effect terms using lme4 syntax","code":""},{"path":"package.epinowcast.org/dev/reference/re.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines random effect terms using the lme4 syntax — re","text":"","code":"re(formula)"},{"path":"package.epinowcast.org/dev/reference/re.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines random effect terms using the lme4 syntax — re","text":"formula random effect returned lme4::findbars() random effect defined using lme4 syntax formula. Currently simplified random effects (.e LHS | RHS) supported.","code":""},{"path":"package.epinowcast.org/dev/reference/re.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines random effect terms using the lme4 syntax — re","text":"list defining fixed random effects specified random effect","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/re.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defines random effect terms using the lme4 syntax — re","text":"","code":"form <- epinowcast:::parse_formula(~ 1 + (1 | age_group)) re(form$random[[1]]) #> $fixed #> [1] \"1\" #>  #> $random #> [1] \"age_group\" #>  #> attr(,\"class\") #> [1] \"enw_re_term\"  form <- epinowcast:::parse_formula(~ 1 + (location | age_group)) re(form$random[[1]]) #> $fixed #> [1] \"location\" #>  #> $random #> [1] \"age_group\" #>  #> attr(,\"class\") #> [1] \"enw_re_term\""},{"path":"package.epinowcast.org/dev/reference/remove_profiling.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove profiling statements from a character vector representing stan code — remove_profiling","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"Remove profiling statements character vector representing stan code","code":""},{"path":"package.epinowcast.org/dev/reference/remove_profiling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"","code":"remove_profiling(s)"},{"path":"package.epinowcast.org/dev/reference/remove_profiling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"s Character vector representing stan code","code":""},{"path":"package.epinowcast.org/dev/reference/remove_profiling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"character vector stan code without profiling statements","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/remove_rw_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove random walk terms from a formula object — remove_rw_terms","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"function removes random walk terms denoted using rw() formula can processed .","code":""},{"path":"package.epinowcast.org/dev/reference/remove_rw_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"","code":"remove_rw_terms(formula)"},{"path":"package.epinowcast.org/dev/reference/remove_rw_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function.","code":""},{"path":"package.epinowcast.org/dev/reference/remove_rw_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"RETURN_DESCRIPTION","code":""},{"path":"package.epinowcast.org/dev/reference/remove_rw_terms.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"function adapted code written J Scott (MIT license) part epidemia package (https://github.com/ImperialCollegeLondon/epidemia/).","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/remove_rw_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"","code":"epinowcast:::remove_rw_terms(~ 1 + age_group + location) #> ~1 + age_group + location #> <environment: 0x55b4e09aa480>  epinowcast:::remove_rw_terms(~ 1 + age_group + location + rw(week, location)) #> ~1 + age_group + location #> <environment: 0x55b4e08f66f8>"},{"path":"package.epinowcast.org/dev/reference/rw.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds random walks with Gaussian steps to the model. — rw","title":"Adds random walks with Gaussian steps to the model. — rw","text":"call rw() can used 'formula' argument model construction functions epinowcast package enw_formula(). evaluate arguments instead simply passes information use model construction.","code":""},{"path":"package.epinowcast.org/dev/reference/rw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds random walks with Gaussian steps to the model. — rw","text":"","code":"rw(time, by, type = c(\"independent\", \"dependent\"))"},{"path":"package.epinowcast.org/dev/reference/rw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds random walks with Gaussian steps to the model. — rw","text":"time Defines random walk time period. Defines grouping parameter used random walk. specified grouping used. Currently limited single variable. type Character string, standard deviation grouped random walks estimated: \"independent\", \"dependent\" across groups; enforced base::match.arg().","code":""},{"path":"package.epinowcast.org/dev/reference/rw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds random walks with Gaussian steps to the model. — rw","text":"list defining time frame, group, type class \"enw_rw_term\" can interpreted construct_rw().","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/rw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds random walks with Gaussian steps to the model. — rw","text":"","code":"rw(time) #> $time #> [1] \"time\" #>  #> $by #> NULL #>  #> $type #> [1] \"independent\" #>  #> attr(,\"class\") #> [1] \"enw_rw_term\"  rw(time, location) #> $time #> [1] \"time\" #>  #> $by #> [1] \"location\" #>  #> $type #> [1] \"independent\" #>  #> attr(,\"class\") #> [1] \"enw_rw_term\"  rw(time, location, type = \"dependent\") #> $time #> [1] \"time\" #>  #> $by #> [1] \"location\" #>  #> $type #> [1] \"dependent\" #>  #> attr(,\"class\") #> [1] \"enw_rw_term\""},{"path":"package.epinowcast.org/dev/reference/rw_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds random walk terms in a formula object — rw_terms","title":"Finds random walk terms in a formula object — rw_terms","text":"function extracts random walk terms denoted using rw() formula can processed .","code":""},{"path":"package.epinowcast.org/dev/reference/rw_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds random walk terms in a formula object — rw_terms","text":"","code":"rw_terms(formula)"},{"path":"package.epinowcast.org/dev/reference/rw_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds random walk terms in a formula object — rw_terms","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function.","code":""},{"path":"package.epinowcast.org/dev/reference/rw_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds random walk terms in a formula object — rw_terms","text":"character vector containing random walk terms identified supplied formula.","code":""},{"path":"package.epinowcast.org/dev/reference/rw_terms.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"Finds random walk terms in a formula object — rw_terms","text":"function adapted code written J Scott (MIT license) part epidemia package (https://github.com/ImperialCollegeLondon/epidemia/).","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/rw_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds random walk terms in a formula object — rw_terms","text":"","code":"epinowcast:::rw_terms(~ 1 + age_group + location) #> character(0)  epinowcast:::rw_terms(~ 1 + age_group + location + rw(week, location)) #> [1] \"rw(week, location)\""},{"path":"package.epinowcast.org/dev/reference/split_formula_to_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Split formula into individual terms — split_formula_to_terms","title":"Split formula into individual terms — split_formula_to_terms","text":"Split formula individual terms","code":""},{"path":"package.epinowcast.org/dev/reference/split_formula_to_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split formula into individual terms — split_formula_to_terms","text":"","code":"split_formula_to_terms(formula)"},{"path":"package.epinowcast.org/dev/reference/split_formula_to_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split formula into individual terms — split_formula_to_terms","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function.","code":""},{"path":"package.epinowcast.org/dev/reference/split_formula_to_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split formula into individual terms — split_formula_to_terms","text":"character vector formula terms","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/split_formula_to_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split formula into individual terms — split_formula_to_terms","text":"","code":"epinowcast:::split_formula_to_terms(~ 1 + age_group + location) #> [1] \"1\"         \"age_group\" \"location\""},{"path":"package.epinowcast.org/dev/reference/stan_fns_as_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in a stan function file as a character string — stan_fns_as_string","title":"Read in a stan function file as a character string — stan_fns_as_string","text":"Read stan function file character string","code":""},{"path":"package.epinowcast.org/dev/reference/stan_fns_as_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in a stan function file as a character string — stan_fns_as_string","text":"","code":"stan_fns_as_string(files, target_dir)"},{"path":"package.epinowcast.org/dev/reference/stan_fns_as_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in a stan function file as a character string — stan_fns_as_string","text":"files character vector file names target_dir character string giving directory files can found.","code":""},{"path":"package.epinowcast.org/dev/reference/stan_fns_as_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in a stan function file as a character string — stan_fns_as_string","text":"character string stan functions.","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/summary.epinowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for epinowcast — summary.epinowcast","title":"Summary method for epinowcast — summary.epinowcast","text":"summary method class \"epinowcast\".","code":""},{"path":"package.epinowcast.org/dev/reference/summary.epinowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for epinowcast — summary.epinowcast","text":"","code":"# S3 method for epinowcast summary(   object,   type = c(\"nowcast\", \"nowcast_samples\", \"fit\", \"posterior_prediction\"),   ... )"},{"path":"package.epinowcast.org/dev/reference/summary.epinowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for epinowcast — summary.epinowcast","text":"object data.table output epinowcast(). type Character string indicating summary return; enforced base::match.arg(). Supported options : \"nowcast\" summarises nowcast posterior enw_nowcast_summary(), \"nowcast_samples\" samples latest enw_nowcast_samples(), \"fit\" returns summarised cmdstanr fit enw_posterior(), \"posterior_prediction\" returns summarised posterior predictions observations fitting using enw_pp_summary(). ... Additional arguments passed summary specified type.","code":""},{"path":"package.epinowcast.org/dev/reference/summary.epinowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for epinowcast — summary.epinowcast","text":"summary data.frame","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/reference/write_stan_files_no_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"Write copies .stan files Stan model #include files profiling statements removed.","code":""},{"path":"package.epinowcast.org/dev/reference/write_stan_files_no_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"","code":"write_stan_files_no_profile(   stan_file,   include_paths = NULL,   target_dir = tempdir() )"},{"path":"package.epinowcast.org/dev/reference/write_stan_files_no_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"stan_file path .stan file containing Stan program. include_paths Paths directories Stan look files specified #include directives Stan program. target_dir path directory manipulated .stan files without profiling statements stored. avoid overriding original .stan files, different directory original model include_paths.","code":""},{"path":"package.epinowcast.org/dev/reference/write_stan_files_no_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"list containing path .stan file without profiling statements include_paths included .stan files without profiling statements","code":""},{"path":[]},{"path":"package.epinowcast.org/dev/news/index.html","id":"epinowcast-020","dir":"Changelog","previous_headings":"","what":"epinowcast 0.2.0","title":"epinowcast 0.2.0","text":"experimental release adds large number new features remain potentially unstable. Please see main release stable package version.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"package-0-2-0","dir":"Changelog","previous_headings":"","what":"Package","title":"epinowcast 0.2.0","text":"Added .Rhistory .gitignore file. See #132 @choi-hannah. Fixed indentations authors contributors DESCRIPTION file. See #132 @choi-hannah. Renamed enw_new_reports() enw_cumulative_to_incidence() added reverse function enw_incidence_to_cumulative() functions use argument allow specification variable groupings. See #157 @seabbs. Switched class checking inherits(x, \"class\") rather class(x) %% \"class\". See #155 @Bisaloo. Changed enw_add_metaobs_features() interface holidays argument series dates. Changed interface enw_preprocess_data() pass ... enw_add_metaobs_features(). Interface changes come internal rewrite unit tests. part internal rewrite, introduces coerce_date() R/utils.R, wraps data.table::.IDate() error handling. See #151 @pearsonca. #151 also corrects subtle error previously underlying addition weeks months metadata. intent columns capture time since start series, denominated weeks months. previous implementation used lubridate::week lubridate::month functions; however, return week- month--year (1-53 1-12). approach suffices data cross year boundary, fails . #151 also corrects minor issue enw_example() pointing old file name type=\"script\". Changed style using match.arg validating inputs. Briefly, preference now define options via function arguments validate automatic match.arg idiom corresponding enumerated documentation options. idiom, first item definition default. approach applies string-based arguments; different types arguments matched way, can arguments allow vector-valued options (e.g., somearg = c(\"option1\", \"option2\") legal argument indicating use options). See #162 @pearsonca addressing issue #156 @Bisaloo Refined use data ordering throughout preprocessing functions. See #147 @seabbs. Skipped tests use cmdstan locally improve developer/contributor experience. See #147 @seabbs @adrian-lison. Added basic simulator function missing reference data. See #147 @seabbs @adrian-lison. Added basic simulator function missing reference data. See #147 @seabbs @adrian-lison. Added support right hand side interactions syntax sugar random effects. allows specification , example, independent random effects day strata another variable. See #169 @seabbs.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"model-0-2-0","dir":"Changelog","previous_headings":"","what":"Model","title":"epinowcast 0.2.0","text":"Added support parametric log-logistic delay distributions. See #128 @adrian-lison. Implemented direct specification parametric baseline hazards. See #134 @adrian-lison. Refactored observation model, combination logit hazards, effects priors contained generic functions make extending package functionality easier. See #137 @seabbs. Implemented specification parametric baseline hazards probabilities log scale increase robustness efficiency. Also includes refactoring functions reorganisation inst/stan/epinowcast.stan increase modularity clarity. See #140 @seabbs. Introduced two new delay likelihoods delay_snap_lmpf delay_group_lmpf. stratify either snapshots groups. helpful models (missingness module). ability choose function used exposed user enw_fit_opts() via likelihood_aggregation argument. functions rely newly added expected_obs_from_snaps function vectorises expected_obs_from_index. See #138 @seabbs @adrian-lison. Added support supplying missingness model parameters model well optional priors effect estimation. See #138 @seabbs @adrian-lison. Refactored model generated quantities functional. See #138 @seabbs @adrian-lison. Added support modelling missing reference dates likelihood. See #147 @seabbs @adrian-lison.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"documentation-0-2-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"epinowcast 0.2.0","text":"Removed explicit links authors issues NEWS.md file. See #132 @choi-hannah. Added new example using simulated data enw_missing() model module. See #138 @seabbs @adrian-lison. Update model definition vignette include missing reference date model. See #147 @seabbs @adrian-lison.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"bugs-0-2-0","dir":"Changelog","previous_headings":"","what":"Bugs","title":"epinowcast 0.2.0","text":"probability-model (.e parametric distribution used hence hazard scale needed) used due mistake specifying ref_as_p stan code. additional issue enw_report() module currently self-declares regardless . bug impact results increased runtimes simple models. issues fixed #142 @seabbs. addition meta features week month properly sequentially number weeks months time series crossed year boundaries. impact models included effects expecting fact sequentially numbered (e.g. random walks). Fixed #151 @pearsonca.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"epinowcast-010","dir":"Changelog","previous_headings":"","what":"epinowcast 0.1.0","title":"epinowcast 0.1.0","text":"major release focusing improving user experience, preparing future package extensions, increase modularity, development flexible full-featured formula interface, hopefully future-proofing far possible. prepares ground future model extensions allow broad range real-time infectious disease questions better answered. extensions include: Modelling missing data (#43). Non-parametric modelling delay reference day logit hazard (#4). Flexible expectation modelling (#5). Forecasting beyond horizon data (#3). Known reporting structures (#33). Renewal equation-based reproduction number estimation (potentially part #5). Latent infections (.e implemented packages EpiNow2, epidemia, etc.). Convolution-based delay models (.e hospitalisations deaths) partially reported data. Additional observation models. interested contributing features, aspects package development (example improving post-processing, coverage documentation, contributing case studies) please see contributing guide /just reach . community project needs support users order provide improved tools real-time infectious disease surveillance. release contains multiple breaking changes. needing old interface please install 0.0.7 GitHub. ease, stratified changes interface, package, documentation, model changes. Note package still flagged experimental regular use authors. @adrian-lison, @sbfnk, @seabbs contributed release.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"interface-0-1-0","dir":"Changelog","previous_headings":"","what":"Interface","title":"epinowcast 0.1.0","text":"fully featured flexible formula interface added allows specification fixed effects, lme4 random effects, random walks. See #27 @seabbs. major overhaul, described #57, interface epinowcast() particular focus improving modularity model components (described modules documentation). package documentation vignettes updated reflect new interface. See #112 @seabbs.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"package-0-1-0","dir":"Changelog","previous_headings":"","what":"Package","title":"epinowcast 0.1.0","text":"Renamed package updated description give clarity problem space focusses . See #110 @seabbs. new helper function enw_delay_metadata() added. produces metadata delay distribution vector may helpful future modelling. prepares way #4 data frame combined reference metadata order build non-parametric hazard reference delay-based models. addition adding function, also added output enw_preprocess_data() order make metadata readily available end-users. See #80 @seabbs. Two new helper functions enw_filter_reference_dates() enw_filter_report_dates() added. replace enw_retrospective_data() allow users similarly construct retrospective data. Splitting functions components also allows additional use cases previously possible. Note definition assumed report date given reference date must equal greater (.e report happen event reported occurs). See #82 @sbfnk @seabbs. internal grouping variables refactored reduce chance clashes columns data frames supplied user. also error thrown case variable clash, making preprocessing safer. See #102 @adrian-lison @seabbs, solves #99. Support preprocessing observations missing reference dates added along new data object returned enw_preprocess_data() highlights information user (alternatively can accessed users using enw_missing_reference()). addition, missing observations setup passed stan order allow use modelling. feature preparation adding full support missing observations (see #43). See #106 @adrian-lison @seabbs. discretised reporting probability function extended handle delays beyond maximum delay three different ways: ignore, add maximum, normalize. nowcasting model uses “normalise” though work ongoing. See #113 @adrian-lison #121 @seabbs. Fixed issue (#105) cmdstan 2.30.0 passing optimisation flags stanc_options default causing compilation error passing flags default. See #117 @sbfnk @seabbs. Addition regression/integration tests example data epinowcast() enw_preprocess_data() convergence checking several example nowcasting models. Lower level tests model tools model modules also added. See #112 @seabbs.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"model-0-1-0","dir":"Changelog","previous_headings":"","what":"Model","title":"epinowcast 0.1.0","text":"Added support parametric exponential delay distributions (note comparable intercept-non-parametric hazard model) potentially parametric delay (though currently throw error due lack appropriate non-parametric hazard). See #84 @seabbs. Added support Poisson observation model though recommended users make use default negative binomial model. See #120 @seabbs. Updated expectation random walk model use efficient cumulative_sum implementation suggested @adrian-lison #98. See #103 @seabbs. Aligned implementation overdispersion prior prior choice recommendations stan wiki. See #111 @adrian-lison.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"documentation-0-1-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"epinowcast 0.1.0","text":"model description updated reflect currently implemented model improve readability. use reference report date nomenclature also standardised across package. See #71 @sbfnk @seabbs.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"internals-0-1-0","dir":"Changelog","previous_headings":"","what":"Internals","title":"epinowcast 0.1.0","text":"Array declarations stan model updated. maintain compatibility expose_stan_fns() (depends rstan), additional functionality added parse stan code function. See #74, #85, #93 @sbfnk @seabbs. Remove spurious warnings due missing initial values optional parameters. See #76 @sbfnk @seabbs.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"epinowcast-007","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.7","title":"epinowcast 0.0.7","text":"Adds additional quality life data processing maximum number (max_confirm) notifications available every row (cumulative incidence notifications) cumulative daily empirical proportion reported calculated user pre-processing (see #62 @seabbs). default approach handling reported notifications beyond maximum delay changed. 0.0.6 previous versions notifications beyond maximum delay silently dropped. 0.0.7 now optional behaviour (set using max_delay_strat enw_preprocess_data()) default instead add notifications last included delay present. produce accurate long-term nowcasts data available means reported notifications maximum delay need interpreted mind. See #62 @seabbs. Adds basic testing documentation preprocessing functions. See #62 @seabbs. Stabilises calculation expected observations increasing proportion calculation performed log scale. results reduced computation time majority coming switching using neg_binomial_2_log family functions (natural scale counterparts). See #65 @seabbs","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"epinowcast-006","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.6","title":"epinowcast 0.0.6","text":"Simplifies optimises internal functions used estimate parametric daily reporting probability. now exposed user via distribution parameter Lognormal Gamma families tested work. Note parameterisations use standard parameterisations given stan manual (see #42 @adrian-lison @seabbs) Add profiling switch model compilation, allowing toggle profiling (https://mc-stan.org/cmdstanr/articles/profiling.html) /model. Also supports .stan files found include_paths (see #41 #54 @adrian-lison). Fully vectorise likelihood flattening observations pre-specify expected observations vector calculating log-likelihood (see #40 @seabbs). Adds vectorisation zero truncated normal distributions (see #38 @seabbs) hazard_to_prob optimised using vectorisation (see #53 @adrian-lison @seabbs). prob_to_hazard optimised required cumulative probabilities calculated (see #53 @adrian-lison @seabbs). Updated use inv_sqrt stan function (see #60 @seabbs). Added support scoringutils 1.0.0 (see #61 @seabbs). Added basic example helper function, enw_example(), power examples tests based work done forecast.vocs (see #61 @seabbs).","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"epinowcast-005","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.5","title":"epinowcast 0.0.5","text":"Convert retrospective data date fields class IDate utilising enw_retrospective_data solve esoteric error. Added full argument name include_paths avoid console chatter Adds stanc_options argument enw_model() specifies new default list(\"01\") enables simple pre-compilation optimisations. See optimisation details. Remove inv_logit logit may instead use base R plogit qlogit.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"epinowcast-004","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.4","title":"epinowcast 0.0.4","text":"Add support extracting summarising posterior nowcast samples Package spell check Update read quick start use 40 days delay vs 30 Add section read quick start showing example handling nowcast samples. Add support passing custom models included files enw_model(). Fix bug enw_summarise_samples() returned duplicate samples. Add support passing holidays variable adjusting converting holiday day custom day week (default Sunday set user). Added support scoring natural log scale. represents absolute relative scoring respectively.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"epinowcast-003","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.3","title":"epinowcast 0.0.3","text":"Add support passing priors Add case study vignette Add model definition implementation details. Add support sample scoring (using scoringutils).","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"epinowcast-002","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.2","title":"epinowcast 0.0.2","text":"Initial version package broadly working functionality first draft vignettes.","code":""},{"path":"package.epinowcast.org/dev/news/index.html","id":"epinowcast-001","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.1","title":"epinowcast 0.0.1","text":"Initial package version development code","code":""}]
